{"version":3,"sources":["phonepack.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","phonepack","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_utilsDom","_utilsDom2","Buttons","addRippleEffect","target","rect","getBoundingClientRect","ripple","querySelector","document","createElement","className","style","height","width","Math","max","appendChild","classList","remove","top","pageY","offsetHeight","body","scrollTop","left","pageX","offsetWidth","scrollLeft","add","floatButton","element","hideShowOnScroll","st","lastScrollTop","btn","addEventListener","on","../utils/dom",2,"_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utilsUtils","_utilsUtils2","Dialog","params","options","title","content","ok","cancel","extend","overlay","dialog","innerHTML","actions","btnCancel","btnOk","confirmCallback","cancelCallback","setTimeout","bind","hide","../utils/utils",3,"DropDownMenu","elMenu","contains","removed","elements","getElementsByClassName",4,"InfiniteScroll","callback","_options","distance","isShown","loadEl","scrollHeight",5,"Loading","spinner","main","sp","padding","console","log",6,"_changePage","template","currentPage","prevPage","eventEmitter","afterChange","_pushPage","afterPush","beforePush","beforeChange","Navigation","_params","page","pushPage","closeCurrentPage","event","fn","request","XMLHttpRequest","onreadystatechange","readyState","status","temp","responseText","open","send","removeDomPage","removeEventListener","get","set",7,"_show","text","notification_content","notification","time","Notification","type","icon",8,"setTransform","webkitTransform","MozTransform","msTransform","OTransform","transform","setAnimation","webkitAnimation","MozAnimation","msAnimation","OAnimation","animation","createLoading","loading","position","zIndex","child","parentNode","insertBefore","_libsHammer","pullToRefresh","moveDistance","scale","distX","distY","startX","startY","startTime","elapsedTime","Date","getTime","touchobj","changedTouches","toFixed","firstChild","preventDefault","../libs/hammer",9,"shrinkHeader","handlerScroll","_el","_st","_top","replace","_lastScrollTop","_content","querySelectorAll","forEach","el",10,"listenCLoseSlideMenu","toggle","removeListenCLoseSlideMenu","SideMenu","overlays","removeChild",11,"TabBar","contentsTabs","addClass","activeTab","getAttribute","removeClass",12,"_componentsSideMenu","_componentsSideMenu2","_componentsPullToRefresh","_componentsPullToRefresh2","_componentsButton","_componentsDropdownMenu","_componentsDropdownMenu2","_componentsNavigation","_componentsNavigation2","_componentsDialog","_componentsDialog2","_componentsLoading","_componentsLoading2","_componentsNotification","_componentsNotification2","_componentsTabBarJs","_componentsTabBarJs2","_componentsInfiniteScrollJs","_componentsInfiniteScrollJs2","_componentsShrinkHeaderJs","_componentsShrinkHeaderJs2","selector","PullToRefresh","ready","./components/button","./components/dialog","./components/dropdown-menu","./components/infinite-scroll.js","./components/loading","./components/navigation","./components/notification","./components/pull-to-refresh","./components/shrink-header.js","./components/side-menu","./components/tab-bar.js","./utils/dom",13,"exportName","undefined","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","each","iterator","hasOwnProperty","dest","src","merge","keys","inherit","base","properties","childP","baseP","create","constructor","_super","apply","arguments","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","node","parent","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","push","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","getScale","rotation","getRotation","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","x","y","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","getVelocity","abs","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","allow","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","TouchAction","cleanTouchActions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","id","defaults","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","touchAction","toggleCssProps","item","recognizeWith","requireFailure","cssProps","name","triggerDomEvent","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","compute","update","getTouchAction","join","preventDefaults","prevented","hasNone","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","index","hasRequireFailures","canRecognizeWith","withState","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press",14,"DOM","eventsListeners","_elementTarget","_closest","Element","closest","matches","toString","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","eventName","htmlContent","insertAdjacentHTML","nextElementSibling","attrName","setAttribute","removeAttibute","hasAttribute","outerHTML","handlerTouch","dir","swipeType","dist","touchsurface","restraint","allowedTime","handletouch","evt","phase","swipetype","styleProp","getComputedStyle","getPropertyValue","currentStyle","letter","oldLeft","oldRsLeft","runtimeStyle","pixelLeft",15,"clousestClass"],"mappings":"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","file":"phonepack.min.js","sourceRoot":"/source/","sourcesContent":["/**\n * phonepack - CSS & JS Mobile Framework\n * @version v0.0.3\n * @link \n * @license MIT\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.phonepack = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar Buttons = (function () {\n\n    (0, _utilsDom2['default'])('.ripple').on('click', addRippleEffect);\n    (0, _utilsDom2['default'])('.button--ripple').on('click', addRippleEffect);\n\n    function addRippleEffect(e, target) {\n\n        var rect = target.getBoundingClientRect();\n        var ripple = target.querySelector('.ripple-animation');\n\n        if (!ripple) {\n            ripple = document.createElement('span');\n            ripple.className = 'ripple-animation';\n            ripple.style.height = ripple.style.width = Math.max(rect.width * 2, rect.height * 2) + 'px';\n            target.appendChild(ripple);\n        }\n\n        ripple.classList.remove('show');\n        var top = e.pageY - rect.top - ripple.offsetHeight / 2 - document.body.scrollTop;\n        var left = e.pageX - rect.left - ripple.offsetWidth / 2 - document.body.scrollLeft;\n        ripple.style.top = top + 'px';\n        ripple.style.left = left + 'px';\n        ripple.classList.add('show');\n\n        return false;\n    }\n\n    function floatButton(element) {\n        var btn = document.querySelector('.button--fab-floating');\n        var lastScrollTop = 0;\n\n        element.addEventListener(\"scroll\", hideShowOnScroll);\n\n        function hideShowOnScroll(e) {\n            var st = this.scrollTop;\n            if (st > lastScrollTop) {\n                btn.classList.add('hidden');\n            } else {\n                btn.classList.remove('hidden');\n            }\n            lastScrollTop = st;\n        }\n    }\n\n    return {\n        floatButton: floatButton\n    };\n})();\n\nexports['default'] = Buttons;\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar Dialog = (function () {\n\tfunction Dialog(params) {\n\t\t_classCallCheck(this, Dialog);\n\n\t\tvar self = this;\n\n\t\tvar options = {\n\t\t\ttitle: null,\n\t\t\tcontent: null,\n\t\t\toptions: {\n\t\t\t\tok: 'OK',\n\t\t\t\tcancel: null\n\t\t\t}\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, options, params);\n\n\t\tself.overlay = document.createElement(\"div\");\n\t\tself.overlay.className = 'dialog-filter';\n\n\t\tself.dialog = document.createElement(\"div\");\n\t\tself.dialog.className = 'dialog';\n\n\t\tif (self.options.title) {\n\t\t\tvar title = document.createElement(\"div\");\n\t\t\ttitle.className = 'dialog__title';\n\t\t\ttitle.innerHTML = self.options.title;\n\t\t\tself.dialog.appendChild(title);\n\t\t}\n\n\t\tif (self.options.content) {\n\t\t\tvar content = document.createElement(\"div\");\n\t\t\tcontent.className = 'dialog__content';\n\t\t\tcontent.innerHTML = self.options.content;\n\t\t\tself.dialog.appendChild(content);\n\t\t}\n\n\t\tvar actions = document.createElement(\"div\");\n\t\tactions.className = 'dialog__actions';\n\n\t\tif (self.options.options.cancel) {\n\t\t\tself.btnCancel = document.createElement('button');\n\t\t\tself.btnCancel.className = 'button button--flat btn--ripple text-red';\n\t\t\tself.btnCancel.innerHTML = self.options.options.cancel;\n\t\t\tactions.appendChild(self.btnCancel);\n\t\t}\n\n\t\tself.btnOk = document.createElement('button');\n\t\tself.btnOk.className = 'button button--flat button--ripple text-blue';\n\t\tself.btnOk.innerHTML = self.options.options.ok;\n\t\tactions.appendChild(self.btnOk);\n\n\t\tself.dialog.appendChild(actions);\n\n\t\tdocument.body.appendChild(self.overlay);\n\t\tdocument.body.appendChild(self.dialog);\n\n\t\treturn self;\n\t}\n\n\t_createClass(Dialog, [{\n\t\tkey: 'show',\n\t\tvalue: function show(confirmCallback, cancelCallback) {\n\n\t\t\tvar self = this;\n\n\t\t\tsetTimeout((function () {\n\t\t\t\tthis.overlay.classList.add('dialog-filter--is-shown');\n\t\t\t\tthis.dialog.classList.add('dialog--is-shown');\n\t\t\t}).bind(self), 0);\n\n\t\t\tself.btnOk.addEventListener('click', function () {\n\t\t\t\tconfirmCallback();\n\t\t\t});\n\n\t\t\tif (self.btnCancel) {\n\t\t\t\tself.btnCancel.addEventListener('click', function () {\n\t\t\t\t\tcancelCallback();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.overlay.addEventListener('click', function () {\n\t\t\t\tself.hide();\n\t\t\t}, false);\n\n\t\t\treturn self;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\n\t\t\tvar self = this;\n\n\t\t\tsetTimeout((function () {\n\t\t\t\tvar self = this;\n\t\t\t\tself.overlay.classList.remove('dialog-filter--is-shown');\n\t\t\t\tself.dialog.classList.remove('dialog--is-shown');\n\n\t\t\t\tself.overlay.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\t\tself.overlay.remove();\n\t\t\t\t});\n\n\t\t\t\tself.overlay.addEventListener('transitionend', function () {\n\t\t\t\t\tself.overlay.remove();\n\t\t\t\t});\n\n\t\t\t\tself.dialog.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\t\tself.dialog.remove();\n\t\t\t\t});\n\n\t\t\t\tself.dialog.addEventListener('transitionend', function () {\n\t\t\t\t\tself.dialog.remove();\n\t\t\t\t});\n\t\t\t}).bind(self), 0);\n\n\t\t\treturn self;\n\t\t}\n\t}]);\n\n\treturn Dialog;\n})();\n\nexports['default'] = Dialog;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar removed = false;\n\ndocument.addEventListener('click', function (e) {\n\tvar _target = e.target;\n\n\tremoved = false;\n\n\tvar elements = document.getElementsByClassName('dropdown-menu');\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif (elements[i].classList.contains('visible')) {\n\t\t\telements[i].classList.remove('visible');\n\t\t\tremoved = true;\n\t\t}\n\t}\n}, true);\n\nfunction DropDownMenu(element, elMenu) {\n\tvar self = this;\n\n\tself.element = element;\n\tself.elMenu = elMenu;\n\n\tif (self.elMenu.classList.contains('visible')) {\n\t\tself.elMenu.classList.remove('visible');\n\t} else if (!removed) {\n\t\tvar target = self.element.getBoundingClientRect();\n\n\t\tself.elMenu.style.top = target.top + 'px';\n\t\tself.elMenu.style.left = target.left - document.body.scrollLeft - 150 + 'px';\n\t\tself.elMenu.classList.add('visible');\n\t}\n\n\tremoved = false;\n}\n\nexports['default'] = DropDownMenu;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar InfiniteScroll = (function () {\n    function InfiniteScroll(element, options, callback) {\n        _classCallCheck(this, InfiniteScroll);\n\n        var self = this;\n        var _options = {\n            distance: 0\n        };\n\n        self.options = _utilsUtils2['default'].extend({}, _options, options);\n        self.isShown = false;\n\n        self.loadEl = document.createElement('div');\n        self.loadEl.className = 'infinite-scroll-loading';\n        self.loadEl.innerHTML = '<div class=\"spinner--infinite-scroll\"></div>';\n        element.appendChild(self.loadEl);\n\n        element.addEventListener('scroll', function (e) {\n\n            if (element.scrollTop + element.offsetHeight >= element.scrollHeight - self.options.distance && !self.isShown) {\n                self.loadEl.classList.add('is-shown');\n                self.isShown = true;\n                callback();\n            }\n        }, false);\n    }\n\n    _createClass(InfiniteScroll, [{\n        key: 'hide',\n        value: function hide() {\n            this.loadEl.classList.remove('is-shown');\n            this.isShown = false;\n        }\n    }]);\n\n    return InfiniteScroll;\n})();\n\nexports['default'] = InfiniteScroll;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar Loading = (function () {\n\tfunction Loading(params) {\n\t\t_classCallCheck(this, Loading);\n\n\t\tvar self = this;\n\n\t\tvar options = {\n\t\t\ttitle: null,\n\t\t\tspinner: true,\n\t\t\toverlay: true\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, options, params);\n\n\t\tself.overlay = document.createElement(\"div\");\n\t\tself.overlay.className = 'loading-filter';\n\n\t\tself.dialog = document.createElement(\"div\");\n\t\tself.dialog.className = 'loading';\n\n\t\tvar main = document.createElement(\"div\");\n\t\tmain.className = 'loading__main';\n\n\t\tif (this.options.spinner) {\n\t\t\tvar spinner = document.createElement(\"div\");\n\t\t\tspinner.className = 'loading__spinner';\n\n\t\t\tvar sp = '<svg class=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">' + ' <circle class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' + '</svg>';\n\t\t\tspinner.innerHTML = sp;\n\t\t\tmain.appendChild(spinner);\n\n\t\t\tif (!self.options.title) {\n\t\t\t\tspinner.style.padding = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (self.options.title) {\n\t\t\tvar title = document.createElement(\"div\");\n\t\t\ttitle.className = 'loading__title';\n\t\t\ttitle.innerHTML = self.options.title;\n\t\t\tmain.appendChild(title);\n\t\t}\n\n\t\tself.dialog.appendChild(main);\n\n\t\tdocument.body.appendChild(self.overlay);\n\t\tdocument.body.appendChild(self.dialog);\n\n\t\treturn self;\n\t}\n\n\t_createClass(Loading, [{\n\t\tkey: 'show',\n\t\tvalue: function show(confirmCallback, cancelCallback) {\n\t\t\tvar self = this;\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (self.options.overlay) {\n\t\t\t\t\tself.overlay.classList.add('loading-filter--is-shown');\n\t\t\t\t}\n\t\t\t\tself.dialog.classList.add('loading--no-box-shadow');\n\t\t\t\tself.dialog.classList.add('loading--is-shown');\n\t\t\t}, 0);\n\n\t\t\treturn self;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar self = this;\n\n\t\t\tself.overlay.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tself.overlay.remove();\n\t\t\t});\n\n\t\t\tself.overlay.addEventListener('transitionend', function () {\n\t\t\t\tself.overlay.remove();\n\t\t\t});\n\n\t\t\tself.dialog.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tself.dialog.remove();\n\t\t\t});\n\n\t\t\tself.dialog.addEventListener('transitionend', function () {\n\t\t\t\tself.dialog.remove();\n\t\t\t});\n\n\t\t\tself.overlay.classList.remove('loading-filter--is-shown');\n\t\t\tself.dialog.classList.remove('loading--is-shown');\n\n\t\t\tconsole.log(self.overlay);\n\n\t\t\treturn self;\n\t\t}\n\t}]);\n\n\treturn Loading;\n})();\n\nexports['default'] = Loading;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar eventEmitter = {\n\t'beforePush': null,\n\t'afterPush': null,\n\t'beforeChange': null,\n\t'afterChange': null\n};\n\nfunction _changePage(template, callback) {\n\tvar self = this;\n\tself.currentPage.remove();\n\tself.element.appendChild(template);\n\tsetTimeout(function () {\n\t\tself.prevPage = self.currentPage;\n\t\tself.currentPage = template;\n\n\t\tif (eventEmitter.afterChange) eventEmitter.afterChange(template);\n\n\t\tif (callback) callback();\n\t}, 50);\n}\n\nfunction _pushPage(template, callback) {\n\tvar self = this;\n\n\tself.element.appendChild(template);\n\tsetTimeout(function () {\n\t\ttemplate.classList.add('pages--slide-up-show');\n\t\tself.prevPage = self.currentPage;\n\t\tself.currentPage = template;\n\n\t\tif (eventEmitter.afterPush) eventEmitter.afterPush(template);\n\n\t\tif (callback) callback();\n\t}, 50);\n}\n\nvar Navigation = (function () {\n\tfunction Navigation(element, options) {\n\t\t_classCallCheck(this, Navigation);\n\n\t\tvar self = this;\n\t\tself.element = element;\n\t\tself.currentPage = null;\n\t\tself.prevPage = null;\n\t\tself._params = null;\n\n\t\tvar _options = {\n\t\t\tpage: null\n\t\t};\n\n\t\tself.options = _utilsUtils2['default'].extend({}, _options, options);\n\n\t\tif (self.options.page) {\n\t\t\tself.pushPage(self.options.page);\n\t\t}\n\n\t\tdocument.addEventListener('backbutton', function (e) {\n\t\t\tself.closeCurrentPage();\n\t\t}, false);\n\t}\n\n\t_createClass(Navigation, [{\n\t\tkey: 'on',\n\t\tvalue: function on(event, fn) {\n\t\t\teventEmitter[event] = fn;\n\t\t}\n\t}, {\n\t\tkey: 'changePage',\n\t\tvalue: function changePage(page, params, callback) {\n\t\t\tvar self = this;\n\t\t\tself.params = params;\n\t\t\tvar request = new XMLHttpRequest();\n\t\t\trequest.onreadystatechange = function () {\n\t\t\t\tif (request.readyState === 4 && (request.status === 200 || request.status === 0)) {\n\t\t\t\t\t(function () {\n\n\t\t\t\t\t\tvar temp = document.createElement(\"div\");\n\t\t\t\t\t\ttemp.innerHTML = request.responseText;\n\n\t\t\t\t\t\tvar template = temp.querySelector('.pages');\n\t\t\t\t\t\tif (eventEmitter.beforeChange) {\n\t\t\t\t\t\t\teventEmitter.beforeChange(template, function () {\n\t\t\t\t\t\t\t\t_changePage.call(self, template, function () {\n\t\t\t\t\t\t\t\t\tif (callback) callback(template);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_changePage.call(self, template, function () {\n\t\t\t\t\t\t\t\tif (callback) callback(template);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t};\n\t\t\trequest.open('GET', page, true);\n\t\t\trequest.send();\n\t\t}\n\t}, {\n\t\tkey: 'pushPage',\n\t\tvalue: function pushPage(page, params, callback) {\n\t\t\tvar self = this;\n\t\t\tself.params = params;\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.onreadystatechange = function () {\n\t\t\t\tif (request.readyState === 4 && (request.status === 200 || request.status === 0)) {\n\t\t\t\t\t(function () {\n\n\t\t\t\t\t\tvar temp = document.createElement(\"div\");\n\t\t\t\t\t\ttemp.innerHTML = request.responseText;\n\n\t\t\t\t\t\tvar template = temp.querySelector('.pages');\n\t\t\t\t\t\ttemplate.classList.add('pages--slide-up');\n\t\t\t\t\t\tif (eventEmitter.beforePush) {\n\t\t\t\t\t\t\teventEmitter.beforePush(template, function () {\n\t\t\t\t\t\t\t\t_pushPage.call(self, template, function () {\n\t\t\t\t\t\t\t\t\tif (callback) callback(template);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_pushPage.call(self, template, function () {\n\t\t\t\t\t\t\t\tif (callback) callback(template);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t})();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\trequest.open('GET', page, true);\n\t\t\trequest.send();\n\t\t}\n\t}, {\n\t\tkey: 'closeCurrentPage',\n\t\tvalue: function closeCurrentPage() {\n\t\t\tvar self = this;\n\n\t\t\tvar removeDomPage = function removeDomPage() {\n\t\t\t\tself.currentPage.removeEventListener('webkitTransitionEnd', removeDomPage);\n\t\t\t\tself.currentPage.removeEventListener('transitionend', removeDomPage);\n\n\t\t\t\tif (self.currentPage) {\n\t\t\t\t\tself.currentPage.remove();\n\t\t\t\t}\n\n\t\t\t\tself.currentPage = self.prevPage;\n\t\t\t};\n\n\t\t\tself.currentPage.classList.remove('pages--slide-up-show');\n\t\t\tself.currentPage.addEventListener('webkitTransitionEnd', removeDomPage);\n\t\t\tself.currentPage.addEventListener('transitionend', removeDomPage);\n\t\t}\n\t}, {\n\t\tkey: 'params',\n\t\tget: function get() {\n\t\t\tvar params = this._params;\n\t\t\tthis._params = null;\n\t\t\treturn params;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._params = value;\n\t\t}\n\t}]);\n\n\treturn Navigation;\n})();\n\nexports['default'] = Navigation;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar instance = null;\n\nfunction _show(text) {\n\tvar self = this;\n\n\tvar notification_content = document.createElement('div');\n\tnotification_content.className = 'notification__content';\n\tnotification_content.innerHTML = text;\n\n\tself.notification.appendChild(notification_content);\n\tsetTimeout(function () {\n\t\tself.notification.classList.add('notification--is-shown');\n\t}, 0);\n\n\tdocument.body.appendChild(self.notification);\n\n\tif (self.options.time > 0) {\n\t\tsetTimeout(function () {\n\t\t\tself.hide();\n\t\t}, self.options.time);\n\t}\n\n\treturn self;\n}\n\nvar Notification = (function () {\n\tfunction Notification(text, options) {\n\t\t_classCallCheck(this, Notification);\n\n\t\tif (instance) {\n\t\t\tinstance.hide();\n\t\t}\n\n\t\tvar self = this;\n\t\tvar _options = {\n\t\t\ttype: 'simple',\n\t\t\ttime: 3000\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, _options, options);\n\n\t\tself.notification = document.createElement('div');\n\t\tself.notification.className = 'notification';\n\n\t\tself.notification.addEventListener('click', function () {\n\t\t\tself.hide();\n\t\t}, false);\n\n\t\treturn self;\n\t}\n\n\t_createClass(Notification, [{\n\t\tkey: 'simple',\n\t\tvalue: function simple(text) {\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'info',\n\t\tvalue: function info(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-blue mdi mdi-information-outline ';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'success',\n\t\tvalue: function success(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-green mdi mdi-check';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'warning',\n\t\tvalue: function warning(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-yellow mdi mdi-alert';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'error',\n\t\tvalue: function error(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-red mdi mdi-alert-circle';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar self = this;\n\n\t\t\tself.notification.classList.remove('notification--is-shown');\n\t\t\tself.notification.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tself.notification.remove();\n\t\t\t});\n\n\t\t\tself.notification.addEventListener('transitionend', function () {\n\t\t\t\tself.notification.remove();\n\t\t\t});\n\n\t\t\treturn self;\n\t\t}\n\t}]);\n\n\treturn Notification;\n})();\n\nexports['default'] = Notification;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar _libsHammer = require('../libs/hammer');\n\nvar _libsHammer2 = _interopRequireDefault(_libsHammer);\n\nfunction setTransform(element, value) {\n\telement.style.webkitTransform = value;\n\telement.style.MozTransform = value;\n\telement.style.msTransform = value;\n\telement.style.OTransform = value;\n\telement.style.transform = value;\n}\n\nfunction setAnimation(element, value) {\n\telement.style.webkitAnimation = value;\n\telement.style.MozAnimation = value;\n\telement.style.msAnimation = value;\n\telement.style.OAnimation = value;\n\telement.style.animation = value;\n}\n\nfunction createLoading() {\n\tvar self = this;\n\tself.loading = document.createElement('div');\n\tself.loading.style.position = 'absolute';\n\tself.loading.style.top = self.top;\n\tself.loading.zIndex = -1;\n\n\tif (self.options.type === 'snake') {\n\t\tself.loading.style.left = '47%';\n\t\tself.loading.className = 'snake--pull-to-refresh';\n\t} else if (self.options.type === 'material') {\n\t\tself.loading.className = 'material--pull-to-refresh';\n\t\tvar child = document.createElement('div');\n\t\tchild.className = 'bar';\n\t\tself.loading.appendChild(child);\n\t}\n\n\tself.element.parentNode.insertBefore(self.loading, self.element);\n}\n\nvar pullToRefresh = (function () {\n\tfunction pullToRefresh(element, options, callback) {\n\t\t_classCallCheck(this, pullToRefresh);\n\n\t\tvar self = this;\n\t\tvar moveDistance = 0;\n\t\tvar scale = 0;\n\t\tvar _options = {\n\t\t\ttype: 'snake'\n\t\t};\n\n\t\tself.loading = null;\n\t\tself.element = element;\n\t\tself.element.classList.add('pull-to-refresh');\n\t\tself.top = (0, _utilsDom2['default'])(element).style('padding-top');\n\t\tself.options = _utilsUtils2['default'].extend({}, _options, options);\n\t\tcreateLoading.call(self, self.type);\n\n\t\tvar distX, distY, startX, startY, startTime, elapsedTime;\n\n\t\tself.element.addEventListener('touchend', function (e) {\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\n\t\t\tif (self.element.scrollTop === 0) {\n\t\t\t\tif (self.options.type === 'snake') {\n\t\t\t\t\tif (distY >= 50) {\n\t\t\t\t\t\tsetTransform(self.element, 'translateY(50px)');\n\t\t\t\t\t\tsetAnimation(self.loading, 'rotate 0.8s infinite linear');\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTransform(self.element, 'translateY(0)');\n\t\t\t\t\t\tsetAnimation(self.loading, null);\n\t\t\t\t\t\tself.loading.classList.remove('is-shown');\n\t\t\t\t\t}\n\n\t\t\t\t\tmoveDistance = null;\n\t\t\t\t} else if (self.options.type === 'material') {\n\t\t\t\t\tif (scale >= 1) {\n\t\t\t\t\t\tself.loading.classList.remove('not-loading');\n\t\t\t\t\t\tself.loading.classList.add('is-loading');\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.loading.classList.remove('is-loading');\n\t\t\t\t\t\tself.loading.classList.add('not-loading');\n\t\t\t\t\t}\n\n\t\t\t\t\tscale = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}, false);\n\t\tself.element.addEventListener('touchstart', function (e) {\n\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\tstartX = touchobj.pageX;\n\t\t\tstartY = touchobj.pageY;\n\t\t\tstartTime = new Date().getTime();\n\t\t}, false);\n\t\tself.element.addEventListener('touchmove', function (e) {\n\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\tdistX = touchobj.pageX - startX;\n\t\t\tdistY = touchobj.pageY - startY;\n\n\t\t\tif (distY > 0 && self.element.scrollTop === 0) {\n\t\t\t\tif (!moveDistance) moveDistance = distY;\n\n\t\t\t\tif (self.options.type === 'snake') {\n\t\t\t\t\tsetTransform(self.element, 'translateY(' + (distY - moveDistance) + 'px)');\n\t\t\t\t\tself.loading.classList.add('is-shown');\n\t\t\t\t\tsetTransform(self.loading, 'rotate(' + distY * 2 + 'deg)');\n\t\t\t\t} else if (self.options.type === 'material') {\n\t\t\t\t\tself.loading.classList.remove('not-loading');\n\t\t\t\t\tself.loading.classList.remove('is-loading');\n\n\t\t\t\t\tscale = (distY / 200).toFixed(1);\n\t\t\t\t\tif (scale >= 1) scale = 1;\n\t\t\t\t\tsetTransform(self.loading.firstChild, 'scale(' + scale + ')');\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t}\n\n\t\t\t/*\n   if (self.element.scrollTop === 0 && ev.direction === 16) {\n   \tif (!moveDistance) moveDistance = ev.distance;\n   \t\tif (self.options.type === 'snake') {\n   \t\tsetTransform(self.element, 'translateY(' + (ev.distance - moveDistance) + 'px)');\n   \t\tself.loading.classList.add('is-shown');\n   \t\tsetTransform(self.loading, 'rotate(' + ev.distance * 2 + 'deg)');\n   \t}\n   \telse if (self.options.type === 'material') {\n   \t\tself.loading.classList.remove('not-loading');\n   \t\tself.loading.classList.remove('is-loading');\n   \t\t\tscale = ((ev.distance / 200).toFixed(1));\n   \t\tif (scale >= 1) scale = 1;\n   \t\tsetTransform(self.loading.firstChild, 'scale(' + (scale) + ')');\n   \t}\n   \t\tev.preventDefault();\n   }\n   \tif (ev.isFinal && self.element.scrollTop === 0 && ev.direction !== 8) {\n   \tif (self.options.type === 'snake') {\n   \t\tif (ev.distance >= 50) {\n   \t\t\tsetTransform(self.element, 'translateY(50px)');\n   \t\t\tsetAnimation(self.loading, 'rotate 0.8s infinite linear');\n   \t\t\tcallback();\n   \t\t}\n   \t\telse {\n   \t\t\tsetTransform(self.element, 'translateY(0)');\n   \t\t\tsetAnimation(self.loading, null);\n   \t\t\tself.loading.classList.remove('is-shown');\n   \t\t}\n   \t\t\tmoveDistance = null;\n   \t}\n   \telse if (self.options.type === 'material') {\n   \t\tif (scale >= 1) {\n   \t\t\tself.loading.classList.remove('not-loading');\n   \t\t\tself.loading.classList.add('is-loading');\n   \t\t\tcallback();\n   \t\t}\n   \t\telse {\n   \t\t\tself.loading.classList.remove('is-loading');\n   \t\t\tself.loading.classList.add('not-loading');\n   \t\t}\n   \t\t\tscale = 0;\n   \t}\n   }\n   */\n\t\t});\n\t}\n\n\t_createClass(pullToRefresh, [{\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar self = this;\n\n\t\t\tif (self.options.type === 'snake') {\n\t\t\t\tsetTransform(self.element, 'translateY(0)');\n\t\t\t\tself.loading.classList.remove('is-shown');\n\t\t\t\tsetAnimation(self.loading, null);\n\t\t\t} else if (self.options.type === 'material') {\n\t\t\t\tself.loading.classList.remove('is-loading');\n\t\t\t\tself.loading.classList.add('not-loading');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn pullToRefresh;\n})();\n\nexports['default'] = pullToRefresh;\nmodule.exports = exports['default'];\n\n},{\"../libs/hammer\":13,\"../utils/dom\":14,\"../utils/utils\":15}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nexports['default'] = shrinkHeader;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nfunction shrinkHeader(element) {\n    var _content = document.querySelectorAll('.content');\n    var _lastScrollTop = 0;\n\n    element.classList.add('header--shrink');\n\n    [].forEach.call(_content, function (el) {\n        el.addEventListener('scroll', handlerScroll);\n    });\n\n    function handlerScroll(e) {\n        var _el = e.target;\n        var _st = _el.scrollTop;\n        var _top = (0, _utilsDom2['default'])(_el).style('padding-top').replace('px', '');\n\n        if (_el.scrollTop >= _top) {\n            if (_st > _lastScrollTop) {\n                _el.classList.add('is-shrink');\n                element.classList.add('header--shrink-hide');\n            } else {\n                element.classList.remove('header--shrink-hide');\n                _el.classList.remove('is-shrink');\n            }\n        }\n        _lastScrollTop = _st;\n    }\n}\n\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar listenCLoseSlideMenu = function listenCLoseSlideMenu(element) {\n\tvar self = this;\n\telement.addEventListener('click', function () {\n\t\tself.toggle();\n\t});\n};\n\nvar removeListenCLoseSlideMenu = function removeListenCLoseSlideMenu(element) {\n\telement.removeEventListener(\"click\");\n};\n\nvar SideMenu = (function () {\n\tfunction SideMenu(element, options) {\n\t\t_classCallCheck(this, SideMenu);\n\n\t\tvar _options = {\n\t\t\toverlay: true\n\t\t};\n\n\t\tthis.element = element;\n\t\tthis.options = _utilsUtils2['default'].extend({}, _options, options);\n\t}\n\n\t_createClass(SideMenu, [{\n\t\tkey: 'toggle',\n\t\tvalue: function toggle() {\n\n\t\t\tif (!this.element.classList.contains('visible')) {\n\n\t\t\t\tvar overlay = document.createElement(\"div\");\n\t\t\t\tif (this.options.overlay) {\n\t\t\t\t\toverlay.className = 'overlay';\n\t\t\t\t} else {\n\t\t\t\t\toverlay.className = 'overlay transparent';\n\t\t\t\t}\n\t\t\t\tdocument.body.appendChild(overlay);\n\t\t\t\tlistenCLoseSlideMenu.call(this, overlay);\n\n\t\t\t\tthis.element.classList.add('visible');\n\t\t\t} else {\n\t\t\t\tthis.element.classList.remove('visible');\n\n\t\t\t\tvar overlays = document.getElementsByClassName(\"overlay\");\n\t\t\t\tremoveListenCLoseSlideMenu.call(this, overlays[0]);\n\t\t\t\tdocument.body.removeChild(overlays[0]);\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn SideMenu;\n})();\n\nexports['default'] = SideMenu;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar TabBar = function TabBar(element) {\n    _classCallCheck(this, TabBar);\n\n    var contentsTabs = (0, _utilsDom2['default'])('.content');\n    if (contentsTabs) {\n        contentsTabs.addClass('tab-hide').addClass('content--tab');\n\n        var activeTab = element.querySelector('.active');\n        if (activeTab) {\n            (0, _utilsDom2['default'])(activeTab.getAttribute('ref')).removeClass('tab-hide').addClass('tab-show');\n        }\n    }\n\n    (0, _utilsDom2['default'])('.tab-bar__item').on('click', function (e, element) {\n        var content = (0, _utilsDom2['default'])(element.getAttribute('ref'));\n        (0, _utilsDom2['default'])('.content').removeClass('tab-show').addClass('tab-hide');\n        content.removeClass('tab-hide').addClass('tab-show');\n        (0, _utilsDom2['default'])('.tab-bar__item').removeClass('active');\n        element.classList.add('active');\n    });\n};\n\nexports['default'] = TabBar;\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],12:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('./utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar _componentsSideMenu = require('./components/side-menu');\n\nvar _componentsSideMenu2 = _interopRequireDefault(_componentsSideMenu);\n\nvar _componentsPullToRefresh = require('./components/pull-to-refresh');\n\nvar _componentsPullToRefresh2 = _interopRequireDefault(_componentsPullToRefresh);\n\nvar _componentsButton = require('./components/button');\n\nvar _componentsButton2 = _interopRequireDefault(_componentsButton);\n\nvar _componentsDropdownMenu = require('./components/dropdown-menu');\n\nvar _componentsDropdownMenu2 = _interopRequireDefault(_componentsDropdownMenu);\n\nvar _componentsNavigation = require('./components/navigation');\n\nvar _componentsNavigation2 = _interopRequireDefault(_componentsNavigation);\n\nvar _componentsDialog = require('./components/dialog');\n\nvar _componentsDialog2 = _interopRequireDefault(_componentsDialog);\n\nvar _componentsLoading = require('./components/loading');\n\nvar _componentsLoading2 = _interopRequireDefault(_componentsLoading);\n\nvar _componentsNotification = require('./components/notification');\n\nvar _componentsNotification2 = _interopRequireDefault(_componentsNotification);\n\nvar _componentsTabBarJs = require('./components/tab-bar.js');\n\nvar _componentsTabBarJs2 = _interopRequireDefault(_componentsTabBarJs);\n\nvar _componentsInfiniteScrollJs = require('./components/infinite-scroll.js');\n\nvar _componentsInfiniteScrollJs2 = _interopRequireDefault(_componentsInfiniteScrollJs);\n\nvar _componentsShrinkHeaderJs = require('./components/shrink-header.js');\n\nvar _componentsShrinkHeaderJs2 = _interopRequireDefault(_componentsShrinkHeaderJs);\n\nvar phonepack = function phonepack(selector) {\n\treturn (0, _utilsDom2['default'])(selector);\n};\n\nphonepack.SideMenu = _componentsSideMenu2['default'];\nphonepack.PullToRefresh = _componentsPullToRefresh2['default'];\nphonepack.Navigation = _componentsNavigation2['default'];\nphonepack.DropDownMenu = _componentsDropdownMenu2['default'];\nphonepack.Dialog = _componentsDialog2['default'];\nphonepack.Loading = _componentsLoading2['default'];\nphonepack.Notification = _componentsNotification2['default'];\nphonepack.TabBar = _componentsTabBarJs2['default'];\nphonepack.InfiniteScroll = _componentsInfiniteScrollJs2['default'];\nphonepack.shrinkHeader = _componentsShrinkHeaderJs2['default'];\n\nphonepack.ready = function (callback) {\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\tcallback();\n\t});\n};\n\nmodule.exports = phonepack;\n\n},{\"./components/button\":1,\"./components/dialog\":2,\"./components/dropdown-menu\":3,\"./components/infinite-scroll.js\":4,\"./components/loading\":5,\"./components/navigation\":6,\"./components/notification\":7,\"./components/pull-to-refresh\":8,\"./components/shrink-header.js\":9,\"./components/side-menu\":10,\"./components/tab-bar.js\":11,\"./utils/dom\":14}],13:[function(require,module,exports){\n/*! Hammer.JS - v2.0.4 - 2014-09-28\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2014 Jorik Tangelder;\n * Licensed under the MIT license */\n'use strict';\n\n(function (window, document, exportName, undefined) {\n    'use strict';\n\n    var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];\n    var TEST_ELEMENT = document.createElement('div');\n\n    var TYPE_FUNCTION = 'function';\n\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n\n    /**\n     * set a timeout with a given scope\n     * @param {Function} fn\n     * @param {Number} timeout\n     * @param {Object} context\n     * @returns {number}\n     */\n    function setTimeoutContext(fn, timeout, context) {\n        return setTimeout(bindFn(fn, context), timeout);\n    }\n\n    /**\n     * if the argument is an array, we want to execute the fn on each entry\n     * if it aint an array we don't want to do a thing.\n     * this is used by all the methods that accept a single and array argument.\n     * @param {*|Array} arg\n     * @param {String} fn\n     * @param {Object} [context]\n     * @returns {Boolean}\n     */\n    function invokeArrayArg(arg, fn, context) {\n        if (Array.isArray(arg)) {\n            each(arg, context[fn], context);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * walk objects and arrays\n     * @param {Object} obj\n     * @param {Function} iterator\n     * @param {Object} context\n     */\n    function each(obj, iterator, context) {\n        var i;\n\n        if (!obj) {\n            return;\n        }\n\n        if (obj.forEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length !== undefined) {\n            i = 0;\n            while (i < obj.length) {\n                iterator.call(context, obj[i], i, obj);\n                i++;\n            }\n        } else {\n            for (i in obj) {\n                obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n            }\n        }\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} dest\n     * @param {Object} src\n     * @param {Boolean} [merge]\n     * @returns {Object} dest\n     */\n    function extend(dest, src, merge) {\n        var keys = Object.keys(src);\n        var i = 0;\n        while (i < keys.length) {\n            if (!merge || merge && dest[keys[i]] === undefined) {\n                dest[keys[i]] = src[keys[i]];\n            }\n            i++;\n        }\n        return dest;\n    }\n\n    /**\n     * merge the values from src in the dest.\n     * means that properties that exist in dest will not be overwritten by src\n     * @param {Object} dest\n     * @param {Object} src\n     * @returns {Object} dest\n     */\n    function merge(dest, src) {\n        return extend(dest, src, true);\n    }\n\n    /**\n     * simple class inheritance\n     * @param {Function} child\n     * @param {Function} base\n     * @param {Object} [properties]\n     */\n    function inherit(child, base, properties) {\n        var baseP = base.prototype,\n            childP;\n\n        childP = child.prototype = Object.create(baseP);\n        childP.constructor = child;\n        childP._super = baseP;\n\n        if (properties) {\n            extend(childP, properties);\n        }\n    }\n\n    /**\n     * simple function bind\n     * @param {Function} fn\n     * @param {Object} context\n     * @returns {Function}\n     */\n    function bindFn(fn, context) {\n        return function boundFn() {\n            return fn.apply(context, arguments);\n        };\n    }\n\n    /**\n     * let a boolean value also be a function that must return a boolean\n     * this first item in args will be used as the context\n     * @param {Boolean|Function} val\n     * @param {Array} [args]\n     * @returns {Boolean}\n     */\n    function boolOrFn(val, args) {\n        if (typeof val == TYPE_FUNCTION) {\n            return val.apply(args ? args[0] || undefined : undefined, args);\n        }\n        return val;\n    }\n\n    /**\n     * use the val2 when val1 is undefined\n     * @param {*} val1\n     * @param {*} val2\n     * @returns {*}\n     */\n    function ifUndefined(val1, val2) {\n        return val1 === undefined ? val2 : val1;\n    }\n\n    /**\n     * addEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function addEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.addEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * removeEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function removeEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.removeEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * find if a node is in the given parent\n     * @method hasParent\n     * @param {HTMLElement} node\n     * @param {HTMLElement} parent\n     * @return {Boolean} found\n     */\n    function hasParent(node, parent) {\n        while (node) {\n            if (node == parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n    /**\n     * small indexOf wrapper\n     * @param {String} str\n     * @param {String} find\n     * @returns {Boolean} found\n     */\n    function inStr(str, find) {\n        return str.indexOf(find) > -1;\n    }\n\n    /**\n     * split string on whitespace\n     * @param {String} str\n     * @returns {Array} words\n     */\n    function splitStr(str) {\n        return str.trim().split(/\\s+/g);\n    }\n\n    /**\n     * find if a array contains the object using indexOf or a simple polyFill\n     * @param {Array} src\n     * @param {String} find\n     * @param {String} [findByKey]\n     * @return {Boolean|Number} false when not found, or the index\n     */\n    function inArray(src, find, findByKey) {\n        if (src.indexOf && !findByKey) {\n            return src.indexOf(find);\n        } else {\n            var i = 0;\n            while (i < src.length) {\n                if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n                    return i;\n                }\n                i++;\n            }\n            return -1;\n        }\n    }\n\n    /**\n     * convert array-like objects to real arrays\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    function toArray(obj) {\n        return Array.prototype.slice.call(obj, 0);\n    }\n\n    /**\n     * unique array with objects based on a key (like 'id') or just by the array's value\n     * @param {Array} src [{id:1},{id:2},{id:1}]\n     * @param {String} [key]\n     * @param {Boolean} [sort=False]\n     * @returns {Array} [{id:1},{id:2}]\n     */\n    function uniqueArray(src, key, sort) {\n        var results = [];\n        var values = [];\n        var i = 0;\n\n        while (i < src.length) {\n            var val = key ? src[i][key] : src[i];\n            if (inArray(values, val) < 0) {\n                results.push(src[i]);\n            }\n            values[i] = val;\n            i++;\n        }\n\n        if (sort) {\n            if (!key) {\n                results = results.sort();\n            } else {\n                results = results.sort(function sortUniqueArray(a, b) {\n                    return a[key] > b[key];\n                });\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * get the prefixed property\n     * @param {Object} obj\n     * @param {String} property\n     * @returns {String|Undefined} prefixed\n     */\n    function prefixed(obj, property) {\n        var prefix, prop;\n        var camelProp = property[0].toUpperCase() + property.slice(1);\n\n        var i = 0;\n        while (i < VENDOR_PREFIXES.length) {\n            prefix = VENDOR_PREFIXES[i];\n            prop = prefix ? prefix + camelProp : property;\n\n            if (prop in obj) {\n                return prop;\n            }\n            i++;\n        }\n        return undefined;\n    }\n\n    /**\n     * get a unique id\n     * @returns {number} uniqueId\n     */\n    var _uniqueId = 1;\n    function uniqueId() {\n        return _uniqueId++;\n    }\n\n    /**\n     * get the window object of an element\n     * @param {HTMLElement} element\n     * @returns {DocumentView|Window}\n     */\n    function getWindowForElement(element) {\n        var doc = element.ownerDocument;\n        return doc.defaultView || doc.parentWindow;\n    }\n\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\n    var SUPPORT_TOUCH = ('ontouchstart' in window);\n    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\n    var INPUT_TYPE_TOUCH = 'touch';\n    var INPUT_TYPE_PEN = 'pen';\n    var INPUT_TYPE_MOUSE = 'mouse';\n    var INPUT_TYPE_KINECT = 'kinect';\n\n    var COMPUTE_INTERVAL = 25;\n\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\n    var PROPS_XY = ['x', 'y'];\n    var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n    /**\n     * create new input type manager\n     * @param {Manager} manager\n     * @param {Function} callback\n     * @returns {Input}\n     * @constructor\n     */\n    function Input(manager, callback) {\n        var self = this;\n        this.manager = manager;\n        this.callback = callback;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = function (ev) {\n            if (boolOrFn(manager.options.enable, [manager])) {\n                self.handler(ev);\n            }\n        };\n\n        this.init();\n    }\n\n    Input.prototype = {\n        /**\n         * should handle the inputEvent data and trigger the callback\n         * @virtual\n         */\n        handler: function handler() {},\n\n        /**\n         * bind the events\n         */\n        init: function init() {\n            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        },\n\n        /**\n         * unbind the events\n         */\n        destroy: function destroy() {\n            this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        }\n    };\n\n    /**\n     * create new input type manager\n     * called by the Manager constructor\n     * @param {Hammer} manager\n     * @returns {Input}\n     */\n    function createInputInstance(manager) {\n        var Type;\n        var inputClass = manager.options.inputClass;\n\n        if (inputClass) {\n            Type = inputClass;\n        } else if (SUPPORT_POINTER_EVENTS) {\n            Type = PointerEventInput;\n        } else if (SUPPORT_ONLY_TOUCH) {\n            Type = TouchInput;\n        } else if (!SUPPORT_TOUCH) {\n            Type = MouseInput;\n        } else {\n            Type = TouchMouseInput;\n        }\n        return new Type(manager, inputHandler);\n    }\n\n    /**\n     * handle input events\n     * @param {Manager} manager\n     * @param {String} eventType\n     * @param {Object} input\n     */\n    function inputHandler(manager, eventType, input) {\n        var pointersLen = input.pointers.length;\n        var changedPointersLen = input.changedPointers.length;\n        var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n        var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n\n        input.isFirst = !!isFirst;\n        input.isFinal = !!isFinal;\n\n        if (isFirst) {\n            manager.session = {};\n        }\n\n        // source event is the normalized value of the domEvents\n        // like 'touchstart, mouseup, pointerdown'\n        input.eventType = eventType;\n\n        // compute scale, rotation etc\n        computeInputData(manager, input);\n\n        // emit secret event\n        manager.emit('hammer.input', input);\n\n        manager.recognize(input);\n        manager.session.prevInput = input;\n    }\n\n    /**\n     * extend the data with some usable properties like scale, rotate, velocity etc\n     * @param {Object} manager\n     * @param {Object} input\n     */\n    function computeInputData(manager, input) {\n        var session = manager.session;\n        var pointers = input.pointers;\n        var pointersLength = pointers.length;\n\n        // store the first input to calculate the distance and direction\n        if (!session.firstInput) {\n            session.firstInput = simpleCloneInputData(input);\n        }\n\n        // to compute scale and rotation we need to store the multiple touches\n        if (pointersLength > 1 && !session.firstMultiple) {\n            session.firstMultiple = simpleCloneInputData(input);\n        } else if (pointersLength === 1) {\n            session.firstMultiple = false;\n        }\n\n        var firstInput = session.firstInput;\n        var firstMultiple = session.firstMultiple;\n        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n        var center = input.center = getCenter(pointers);\n        input.timeStamp = now();\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n        input.angle = getAngle(offsetCenter, center);\n        input.distance = getDistance(offsetCenter, center);\n\n        computeDeltaXY(session, input);\n        input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n        computeIntervalInputData(session, input);\n\n        // find the correct target\n        var target = manager.element;\n        if (hasParent(input.srcEvent.target, target)) {\n            target = input.srcEvent.target;\n        }\n        input.target = target;\n    }\n\n    function computeDeltaXY(session, input) {\n        var center = input.center;\n        var offset = session.offsetDelta || {};\n        var prevDelta = session.prevDelta || {};\n        var prevInput = session.prevInput || {};\n\n        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n            prevDelta = session.prevDelta = {\n                x: prevInput.deltaX || 0,\n                y: prevInput.deltaY || 0\n            };\n\n            offset = session.offsetDelta = {\n                x: center.x,\n                y: center.y\n            };\n        }\n\n        input.deltaX = prevDelta.x + (center.x - offset.x);\n        input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n\n    /**\n     * velocity is calculated every x ms\n     * @param {Object} session\n     * @param {Object} input\n     */\n    function computeIntervalInputData(session, input) {\n        var last = session.lastInterval || input,\n            deltaTime = input.timeStamp - last.timeStamp,\n            velocity,\n            velocityX,\n            velocityY,\n            direction;\n\n        if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n            var deltaX = last.deltaX - input.deltaX;\n            var deltaY = last.deltaY - input.deltaY;\n\n            var v = getVelocity(deltaTime, deltaX, deltaY);\n            velocityX = v.x;\n            velocityY = v.y;\n            velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n            direction = getDirection(deltaX, deltaY);\n\n            session.lastInterval = input;\n        } else {\n            // use latest velocity info if it doesn't overtake a minimum period\n            velocity = last.velocity;\n            velocityX = last.velocityX;\n            velocityY = last.velocityY;\n            direction = last.direction;\n        }\n\n        input.velocity = velocity;\n        input.velocityX = velocityX;\n        input.velocityY = velocityY;\n        input.direction = direction;\n    }\n\n    /**\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\n     * @param {Object} input\n     * @returns {Object} clonedInputData\n     */\n    function simpleCloneInputData(input) {\n        // make a simple copy of the pointers because we will get a reference if we don't\n        // we only need clientXY for the calculations\n        var pointers = [];\n        var i = 0;\n        while (i < input.pointers.length) {\n            pointers[i] = {\n                clientX: round(input.pointers[i].clientX),\n                clientY: round(input.pointers[i].clientY)\n            };\n            i++;\n        }\n\n        return {\n            timeStamp: now(),\n            pointers: pointers,\n            center: getCenter(pointers),\n            deltaX: input.deltaX,\n            deltaY: input.deltaY\n        };\n    }\n\n    /**\n     * get the center of all the pointers\n     * @param {Array} pointers\n     * @return {Object} center contains `x` and `y` properties\n     */\n    function getCenter(pointers) {\n        var pointersLength = pointers.length;\n\n        // no need to loop when only one touch\n        if (pointersLength === 1) {\n            return {\n                x: round(pointers[0].clientX),\n                y: round(pointers[0].clientY)\n            };\n        }\n\n        var x = 0,\n            y = 0,\n            i = 0;\n        while (i < pointersLength) {\n            x += pointers[i].clientX;\n            y += pointers[i].clientY;\n            i++;\n        }\n\n        return {\n            x: round(x / pointersLength),\n            y: round(y / pointersLength)\n        };\n    }\n\n    /**\n     * calculate the velocity between two points. unit is in px per ms.\n     * @param {Number} deltaTime\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Object} velocity `x` and `y`\n     */\n    function getVelocity(deltaTime, x, y) {\n        return {\n            x: x / deltaTime || 0,\n            y: y / deltaTime || 0\n        };\n    }\n\n    /**\n     * get the direction between two points\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number} direction\n     */\n    function getDirection(x, y) {\n        if (x === y) {\n            return DIRECTION_NONE;\n        }\n\n        if (abs(x) >= abs(y)) {\n            return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        }\n        return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n\n    /**\n     * calculate the absolute distance between two points\n     * @param {Object} p1 {x, y}\n     * @param {Object} p2 {x, y}\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} distance\n     */\n    function getDistance(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n\n        return Math.sqrt(x * x + y * y);\n    }\n\n    /**\n     * calculate the angle between two coordinates\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} angle\n     */\n    function getAngle(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n        return Math.atan2(y, x) * 180 / Math.PI;\n    }\n\n    /**\n     * calculate the rotation degrees between two pointersets\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} rotation\n     */\n    function getRotation(start, end) {\n        return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n\n    /**\n     * calculate the scale factor between two pointersets\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} scale\n     */\n    function getScale(start, end) {\n        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n\n    var MOUSE_INPUT_MAP = {\n        mousedown: INPUT_START,\n        mousemove: INPUT_MOVE,\n        mouseup: INPUT_END\n    };\n\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n    /**\n     * Mouse events input\n     * @constructor\n     * @extends Input\n     */\n    function MouseInput() {\n        this.evEl = MOUSE_ELEMENT_EVENTS;\n        this.evWin = MOUSE_WINDOW_EVENTS;\n\n        this.allow = true; // used by Input.TouchMouse to disable mouse events\n        this.pressed = false; // mousedown state\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(MouseInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function MEhandler(ev) {\n            var eventType = MOUSE_INPUT_MAP[ev.type];\n\n            // on start we want to have the left mouse button down\n            if (eventType & INPUT_START && ev.button === 0) {\n                this.pressed = true;\n            }\n\n            if (eventType & INPUT_MOVE && ev.which !== 1) {\n                eventType = INPUT_END;\n            }\n\n            // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n            if (!this.pressed || !this.allow) {\n                return;\n            }\n\n            if (eventType & INPUT_END) {\n                this.pressed = false;\n            }\n\n            this.callback(this.manager, eventType, {\n                pointers: [ev],\n                changedPointers: [ev],\n                pointerType: INPUT_TYPE_MOUSE,\n                srcEvent: ev\n            });\n        }\n    });\n\n    var POINTER_INPUT_MAP = {\n        pointerdown: INPUT_START,\n        pointermove: INPUT_MOVE,\n        pointerup: INPUT_END,\n        pointercancel: INPUT_CANCEL,\n        pointerout: INPUT_CANCEL\n    };\n\n    // in IE10 the pointer types is defined as an enum\n    var IE10_POINTER_TYPE_ENUM = {\n        2: INPUT_TYPE_TOUCH,\n        3: INPUT_TYPE_PEN,\n        4: INPUT_TYPE_MOUSE,\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n    };\n\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n    // IE10 has prefixed support, and case-sensitive\n    if (window.MSPointerEvent) {\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n    }\n\n    /**\n     * Pointer events input\n     * @constructor\n     * @extends Input\n     */\n    function PointerEventInput() {\n        this.evEl = POINTER_ELEMENT_EVENTS;\n        this.evWin = POINTER_WINDOW_EVENTS;\n\n        Input.apply(this, arguments);\n\n        this.store = this.manager.session.pointerEvents = [];\n    }\n\n    inherit(PointerEventInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function PEhandler(ev) {\n            var store = this.store;\n            var removePointer = false;\n\n            var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n            var isTouch = pointerType == INPUT_TYPE_TOUCH;\n\n            // get index of the event in the store\n            var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n            // start and mouse must be down\n            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n                if (storeIndex < 0) {\n                    store.push(ev);\n                    storeIndex = store.length - 1;\n                }\n            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                removePointer = true;\n            }\n\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\n            if (storeIndex < 0) {\n                return;\n            }\n\n            // update the event in the store\n            store[storeIndex] = ev;\n\n            this.callback(this.manager, eventType, {\n                pointers: store,\n                changedPointers: [ev],\n                pointerType: pointerType,\n                srcEvent: ev\n            });\n\n            if (removePointer) {\n                // remove from the store\n                store.splice(storeIndex, 1);\n            }\n        }\n    });\n\n    var SINGLE_TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Touch events input\n     * @constructor\n     * @extends Input\n     */\n    function SingleTouchInput() {\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n        this.started = false;\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(SingleTouchInput, Input, {\n        handler: function TEhandler(ev) {\n            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n            // should we handle the touch events?\n            if (type === INPUT_START) {\n                this.started = true;\n            }\n\n            if (!this.started) {\n                return;\n            }\n\n            var touches = normalizeSingleTouches.call(this, ev, type);\n\n            // when done, reset the started state\n            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n                this.started = false;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function normalizeSingleTouches(ev, type) {\n        var all = toArray(ev.touches);\n        var changed = toArray(ev.changedTouches);\n\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            all = uniqueArray(all.concat(changed), 'identifier', true);\n        }\n\n        return [all, changed];\n    }\n\n    var TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Multi-user touch events input\n     * @constructor\n     * @extends Input\n     */\n    function TouchInput() {\n        this.evTarget = TOUCH_TARGET_EVENTS;\n        this.targetIds = {};\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(TouchInput, Input, {\n        handler: function MTEhandler(ev) {\n            var type = TOUCH_INPUT_MAP[ev.type];\n            var touches = getTouches.call(this, ev, type);\n            if (!touches) {\n                return;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function getTouches(ev, type) {\n        var allTouches = toArray(ev.touches);\n        var targetIds = this.targetIds;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        var i,\n            targetTouches,\n            changedTouches = toArray(ev.changedTouches),\n            changedTargetTouches = [],\n            target = this.target;\n\n        // get target touches from touches\n        targetTouches = allTouches.filter(function (touch) {\n            return hasParent(touch.target, target);\n        });\n\n        // collect touches\n        if (type === INPUT_START) {\n            i = 0;\n            while (i < targetTouches.length) {\n                targetIds[targetTouches[i].identifier] = true;\n                i++;\n            }\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        i = 0;\n        while (i < changedTouches.length) {\n            if (targetIds[changedTouches[i].identifier]) {\n                changedTargetTouches.push(changedTouches[i]);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouches[i].identifier];\n            }\n            i++;\n        }\n\n        if (!changedTargetTouches.length) {\n            return;\n        }\n\n        return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n    }\n\n    /**\n     * Combined touch and mouse input\n     *\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n     * This because touch devices also emit mouse events while doing a touch.\n     *\n     * @constructor\n     * @extends Input\n     */\n    function TouchMouseInput() {\n        Input.apply(this, arguments);\n\n        var handler = bindFn(this.handler, this);\n        this.touch = new TouchInput(this.manager, handler);\n        this.mouse = new MouseInput(this.manager, handler);\n    }\n\n    inherit(TouchMouseInput, Input, {\n        /**\n         * handle mouse and touch events\n         * @param {Hammer} manager\n         * @param {String} inputEvent\n         * @param {Object} inputData\n         */\n        handler: function TMEhandler(manager, inputEvent, inputData) {\n            var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n                isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n            // when we're in a touch event, so  block all upcoming mouse events\n            // most mobile browser also emit mouseevents, right after touchstart\n            if (isTouch) {\n                this.mouse.allow = false;\n            } else if (isMouse && !this.mouse.allow) {\n                return;\n            }\n\n            // reset the allowMouse when we're done\n            if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n                this.mouse.allow = true;\n            }\n\n            this.callback(manager, inputEvent, inputData);\n        },\n\n        /**\n         * remove the event listeners\n         */\n        destroy: function destroy() {\n            this.touch.destroy();\n            this.mouse.destroy();\n        }\n    });\n\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n    // magical touchAction value\n    var TOUCH_ACTION_COMPUTE = 'compute';\n    var TOUCH_ACTION_AUTO = 'auto';\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n    var TOUCH_ACTION_NONE = 'none';\n    var TOUCH_ACTION_PAN_X = 'pan-x';\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n\n    /**\n     * Touch Action\n     * sets the touchAction property or uses the js alternative\n     * @param {Manager} manager\n     * @param {String} value\n     * @constructor\n     */\n    function TouchAction(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    TouchAction.prototype = {\n        /**\n         * set the touchAction value on the element or enable the polyfill\n         * @param {String} value\n         */\n        set: function set(value) {\n            // find out the touch-action by the event handlers\n            if (value == TOUCH_ACTION_COMPUTE) {\n                value = this.compute();\n            }\n\n            if (NATIVE_TOUCH_ACTION) {\n                this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n            }\n            this.actions = value.toLowerCase().trim();\n        },\n\n        /**\n         * just re-set the touchAction value\n         */\n        update: function update() {\n            this.set(this.manager.options.touchAction);\n        },\n\n        /**\n         * compute the value for the touchAction property based on the recognizer's settings\n         * @returns {String} value\n         */\n        compute: function compute() {\n            var actions = [];\n            each(this.manager.recognizers, function (recognizer) {\n                if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                    actions = actions.concat(recognizer.getTouchAction());\n                }\n            });\n            return cleanTouchActions(actions.join(' '));\n        },\n\n        /**\n         * this method is called on each input cycle and provides the preventing of the browser behavior\n         * @param {Object} input\n         */\n        preventDefaults: function preventDefaults(input) {\n            // not needed with native support for the touchAction property\n            if (NATIVE_TOUCH_ACTION) {\n                return;\n            }\n\n            var srcEvent = input.srcEvent;\n            var direction = input.offsetDirection;\n\n            // if the touch action did prevented once this session\n            if (this.manager.session.prevented) {\n                srcEvent.preventDefault();\n                return;\n            }\n\n            var actions = this.actions;\n            var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n            if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n                return this.preventSrc(srcEvent);\n            }\n        },\n\n        /**\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n         * @param {Object} srcEvent\n         */\n        preventSrc: function preventSrc(srcEvent) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    };\n\n    /**\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n     * @param {String} actions\n     * @returns {*}\n     */\n    function cleanTouchActions(actions) {\n        // none\n        if (inStr(actions, TOUCH_ACTION_NONE)) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n        // pan-x and pan-y can be combined\n        if (hasPanX && hasPanY) {\n            return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;\n        }\n\n        // pan-x OR pan-y\n        if (hasPanX || hasPanY) {\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n        }\n\n        // manipulation\n        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n            return TOUCH_ACTION_MANIPULATION;\n        }\n\n        return TOUCH_ACTION_AUTO;\n    }\n\n    /**\n     * Recognizer flow explained; *\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\n     *\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n     * which determines with state it should be.\n     *\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n     * POSSIBLE to give it another change on the next cycle.\n     *\n     *               Possible\n     *                  |\n     *            +-----+---------------+\n     *            |                     |\n     *      +-----+-----+               |\n     *      |           |               |\n     *   Failed      Cancelled          |\n     *                          +-------+------+\n     *                          |              |\n     *                      Recognized       Began\n     *                                         |\n     *                                      Changed\n     *                                         |\n     *                                  Ended/Recognized\n     */\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n\n    /**\n     * Recognizer\n     * Every recognizer needs to extend from this class.\n     * @constructor\n     * @param {Object} options\n     */\n    function Recognizer(options) {\n        this.id = uniqueId();\n\n        this.manager = null;\n        this.options = merge(options || {}, this.defaults);\n\n        // default is enable true\n        this.options.enable = ifUndefined(this.options.enable, true);\n\n        this.state = STATE_POSSIBLE;\n\n        this.simultaneous = {};\n        this.requireFail = [];\n    }\n\n    Recognizer.prototype = {\n        /**\n         * @virtual\n         * @type {Object}\n         */\n        defaults: {},\n\n        /**\n         * set options\n         * @param {Object} options\n         * @return {Recognizer}\n         */\n        set: function set(options) {\n            extend(this.options, options);\n\n            // also update the touchAction, in case something changed about the directions/enabled state\n            this.manager && this.manager.touchAction.update();\n            return this;\n        },\n\n        /**\n         * recognize simultaneous with an other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        recognizeWith: function recognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n                return this;\n            }\n\n            var simultaneous = this.simultaneous;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (!simultaneous[otherRecognizer.id]) {\n                simultaneous[otherRecognizer.id] = otherRecognizer;\n                otherRecognizer.recognizeWith(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            delete this.simultaneous[otherRecognizer.id];\n            return this;\n        },\n\n        /**\n         * recognizer can only run when an other is failing\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        requireFailure: function requireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n                return this;\n            }\n\n            var requireFail = this.requireFail;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (inArray(requireFail, otherRecognizer) === -1) {\n                requireFail.push(otherRecognizer);\n                otherRecognizer.requireFailure(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            var index = inArray(this.requireFail, otherRecognizer);\n            if (index > -1) {\n                this.requireFail.splice(index, 1);\n            }\n            return this;\n        },\n\n        /**\n         * has require failures boolean\n         * @returns {boolean}\n         */\n        hasRequireFailures: function hasRequireFailures() {\n            return this.requireFail.length > 0;\n        },\n\n        /**\n         * if the recognizer can recognize simultaneous with an other recognizer\n         * @param {Recognizer} otherRecognizer\n         * @returns {Boolean}\n         */\n        canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n            return !!this.simultaneous[otherRecognizer.id];\n        },\n\n        /**\n         * You should use `tryEmit` instead of `emit` directly to check\n         * that all the needed recognizers has failed before emitting.\n         * @param {Object} input\n         */\n        emit: function emit(input) {\n            var self = this;\n            var state = this.state;\n\n            function emit(withState) {\n                self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);\n            }\n\n            // 'panstart' and 'panmove'\n            if (state < STATE_ENDED) {\n                emit(true);\n            }\n\n            emit(); // simple 'eventName' events\n\n            // panend and pancancel\n            if (state >= STATE_ENDED) {\n                emit(true);\n            }\n        },\n\n        /**\n         * Check that all the require failure recognizers has failed,\n         * if true, it emits a gesture event,\n         * otherwise, setup the state to FAILED.\n         * @param {Object} input\n         */\n        tryEmit: function tryEmit(input) {\n            if (this.canEmit()) {\n                return this.emit(input);\n            }\n            // it's failing anyway\n            this.state = STATE_FAILED;\n        },\n\n        /**\n         * can we emit?\n         * @returns {boolean}\n         */\n        canEmit: function canEmit() {\n            var i = 0;\n            while (i < this.requireFail.length) {\n                if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                    return false;\n                }\n                i++;\n            }\n            return true;\n        },\n\n        /**\n         * update the recognizer\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            // make a new copy of the inputData\n            // so we can change the inputData without messing up the other recognizers\n            var inputDataClone = extend({}, inputData);\n\n            // is is enabled and allow recognizing?\n            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n                this.reset();\n                this.state = STATE_FAILED;\n                return;\n            }\n\n            // reset when we've reached the end\n            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n                this.state = STATE_POSSIBLE;\n            }\n\n            this.state = this.process(inputDataClone);\n\n            // the recognizer has recognized a gesture\n            // so trigger an event\n            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n                this.tryEmit(inputDataClone);\n            }\n        },\n\n        /**\n         * return the state of the recognizer\n         * the actual recognizing happens in this method\n         * @virtual\n         * @param {Object} inputData\n         * @returns {Const} STATE\n         */\n        process: function process(inputData) {}, // jshint ignore:line\n\n        /**\n         * return the preferred touch-action\n         * @virtual\n         * @returns {Array}\n         */\n        getTouchAction: function getTouchAction() {},\n\n        /**\n         * called when the gesture isn't allowed to recognize\n         * like when another is being recognized or it is disabled\n         * @virtual\n         */\n        reset: function reset() {}\n    };\n\n    /**\n     * get a usable string, used as event postfix\n     * @param {Const} state\n     * @returns {String} state\n     */\n    function stateStr(state) {\n        if (state & STATE_CANCELLED) {\n            return 'cancel';\n        } else if (state & STATE_ENDED) {\n            return 'end';\n        } else if (state & STATE_CHANGED) {\n            return 'move';\n        } else if (state & STATE_BEGAN) {\n            return 'start';\n        }\n        return '';\n    }\n\n    /**\n     * direction cons to string\n     * @param {Const} direction\n     * @returns {String}\n     */\n    function directionStr(direction) {\n        if (direction == DIRECTION_DOWN) {\n            return 'down';\n        } else if (direction == DIRECTION_UP) {\n            return 'up';\n        } else if (direction == DIRECTION_LEFT) {\n            return 'left';\n        } else if (direction == DIRECTION_RIGHT) {\n            return 'right';\n        }\n        return '';\n    }\n\n    /**\n     * get a recognizer by name if it is bound to a manager\n     * @param {Recognizer|String} otherRecognizer\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer}\n     */\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n        var manager = recognizer.manager;\n        if (manager) {\n            return manager.get(otherRecognizer);\n        }\n        return otherRecognizer;\n    }\n\n    /**\n     * This recognizer is just used as a base for the simple attribute recognizers.\n     * @constructor\n     * @extends Recognizer\n     */\n    function AttrRecognizer() {\n        Recognizer.apply(this, arguments);\n    }\n\n    inherit(AttrRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof AttrRecognizer\n         */\n        defaults: {\n            /**\n             * @type {Number}\n             * @default 1\n             */\n            pointers: 1\n        },\n\n        /**\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {Boolean} recognized\n         */\n        attrTest: function attrTest(input) {\n            var optionPointers = this.options.pointers;\n            return optionPointers === 0 || input.pointers.length === optionPointers;\n        },\n\n        /**\n         * Process the input and return the state for the recognizer\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {*} State\n         */\n        process: function process(input) {\n            var state = this.state;\n            var eventType = input.eventType;\n\n            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n            var isValid = this.attrTest(input);\n\n            // on cancel input and we've recognized before, return STATE_CANCELLED\n            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n                return state | STATE_CANCELLED;\n            } else if (isRecognized || isValid) {\n                if (eventType & INPUT_END) {\n                    return state | STATE_ENDED;\n                } else if (!(state & STATE_BEGAN)) {\n                    return STATE_BEGAN;\n                }\n                return state | STATE_CHANGED;\n            }\n            return STATE_FAILED;\n        }\n    });\n\n    /**\n     * Pan\n     * Recognized when the pointer is down and moved in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PanRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n\n        this.pX = null;\n        this.pY = null;\n    }\n\n    inherit(PanRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PanRecognizer\n         */\n        defaults: {\n            event: 'pan',\n            threshold: 10,\n            pointers: 1,\n            direction: DIRECTION_ALL\n        },\n\n        getTouchAction: function getTouchAction() {\n            var direction = this.options.direction;\n            var actions = [];\n            if (direction & DIRECTION_HORIZONTAL) {\n                actions.push(TOUCH_ACTION_PAN_Y);\n            }\n            if (direction & DIRECTION_VERTICAL) {\n                actions.push(TOUCH_ACTION_PAN_X);\n            }\n            return actions;\n        },\n\n        directionTest: function directionTest(input) {\n            var options = this.options;\n            var hasMoved = true;\n            var distance = input.distance;\n            var direction = input.direction;\n            var x = input.deltaX;\n            var y = input.deltaY;\n\n            // lock to axis?\n            if (!(direction & options.direction)) {\n                if (options.direction & DIRECTION_HORIZONTAL) {\n                    direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                    hasMoved = x != this.pX;\n                    distance = Math.abs(input.deltaX);\n                } else {\n                    direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n                    hasMoved = y != this.pY;\n                    distance = Math.abs(input.deltaY);\n                }\n            }\n            input.direction = direction;\n            return hasMoved && distance > options.threshold && direction & options.direction;\n        },\n\n        attrTest: function attrTest(input) {\n            return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n        },\n\n        emit: function emit(input) {\n            this.pX = input.deltaX;\n            this.pY = input.deltaY;\n\n            var direction = directionStr(input.direction);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Pinch\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PinchRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(PinchRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'pinch',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n        },\n\n        emit: function emit(input) {\n            this._super.emit.call(this, input);\n            if (input.scale !== 1) {\n                var inOut = input.scale < 1 ? 'in' : 'out';\n                this.manager.emit(this.options.event + inOut, input);\n            }\n        }\n    });\n\n    /**\n     * Press\n     * Recognized when the pointer is down for x ms without any movement.\n     * @constructor\n     * @extends Recognizer\n     */\n    function PressRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        this._timer = null;\n        this._input = null;\n    }\n\n    inherit(PressRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PressRecognizer\n         */\n        defaults: {\n            event: 'press',\n            pointers: 1,\n            time: 500, // minimal time of the pointer to be pressed\n            threshold: 5 // a minimal movement is ok, but keep it low\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_AUTO];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTime = input.deltaTime > options.time;\n\n            this._input = input;\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n                this.reset();\n            } else if (input.eventType & INPUT_START) {\n                this.reset();\n                this._timer = setTimeoutContext(function () {\n                    this.state = STATE_RECOGNIZED;\n                    this.tryEmit();\n                }, options.time, this);\n            } else if (input.eventType & INPUT_END) {\n                return STATE_RECOGNIZED;\n            }\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit(input) {\n            if (this.state !== STATE_RECOGNIZED) {\n                return;\n            }\n\n            if (input && input.eventType & INPUT_END) {\n                this.manager.emit(this.options.event + 'up', input);\n            } else {\n                this._input.timeStamp = now();\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Rotate\n     * Recognized when two or more pointer are moving in a circular motion.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function RotateRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(RotateRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof RotateRecognizer\n         */\n        defaults: {\n            event: 'rotate',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n        }\n    });\n\n    /**\n     * Swipe\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function SwipeRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(SwipeRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof SwipeRecognizer\n         */\n        defaults: {\n            event: 'swipe',\n            threshold: 10,\n            velocity: 0.65,\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n            pointers: 1\n        },\n\n        getTouchAction: function getTouchAction() {\n            return PanRecognizer.prototype.getTouchAction.call(this);\n        },\n\n        attrTest: function attrTest(input) {\n            var direction = this.options.direction;\n            var velocity;\n\n            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n                velocity = input.velocity;\n            } else if (direction & DIRECTION_HORIZONTAL) {\n                velocity = input.velocityX;\n            } else if (direction & DIRECTION_VERTICAL) {\n                velocity = input.velocityY;\n            }\n\n            return this._super.attrTest.call(this, input) && direction & input.direction && input.distance > this.options.threshold && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n        },\n\n        emit: function emit(input) {\n            var direction = directionStr(input.direction);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this.manager.emit(this.options.event, input);\n        }\n    });\n\n    /**\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n     * a single tap.\n     *\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n     * multi-taps being recognized.\n     * @constructor\n     * @extends Recognizer\n     */\n    function TapRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        // previous time and center,\n        // used for tap counting\n        this.pTime = false;\n        this.pCenter = false;\n\n        this._timer = null;\n        this._input = null;\n        this.count = 0;\n    }\n\n    inherit(TapRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'tap',\n            pointers: 1,\n            taps: 1,\n            interval: 300, // max time between the multi-tap taps\n            time: 250, // max time of the pointer to be down (like finger on the screen)\n            threshold: 2, // a minimal movement is ok, but keep it low\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_MANIPULATION];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTouchTime = input.deltaTime < options.time;\n\n            this.reset();\n\n            if (input.eventType & INPUT_START && this.count === 0) {\n                return this.failTimeout();\n            }\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (validMovement && validTouchTime && validPointers) {\n                if (input.eventType != INPUT_END) {\n                    return this.failTimeout();\n                }\n\n                var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n                var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n                this.pTime = input.timeStamp;\n                this.pCenter = input.center;\n\n                if (!validMultiTap || !validInterval) {\n                    this.count = 1;\n                } else {\n                    this.count += 1;\n                }\n\n                this._input = input;\n\n                // if tap count matches we have recognized it,\n                // else it has began recognizing...\n                var tapCount = this.count % options.taps;\n                if (tapCount === 0) {\n                    // no failing requirements, immediately trigger the tap event\n                    // or wait as long as the multitap interval to trigger\n                    if (!this.hasRequireFailures()) {\n                        return STATE_RECOGNIZED;\n                    } else {\n                        this._timer = setTimeoutContext(function () {\n                            this.state = STATE_RECOGNIZED;\n                            this.tryEmit();\n                        }, options.interval, this);\n                        return STATE_BEGAN;\n                    }\n                }\n            }\n            return STATE_FAILED;\n        },\n\n        failTimeout: function failTimeout() {\n            this._timer = setTimeoutContext(function () {\n                this.state = STATE_FAILED;\n            }, this.options.interval, this);\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit() {\n            if (this.state == STATE_RECOGNIZED) {\n                this._input.tapCount = this.count;\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Simple way to create an manager with a default set of recognizers.\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Hammer(element, options) {\n        options = options || {};\n        options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n        return new Manager(element, options);\n    }\n\n    /**\n     * @const {string}\n     */\n    Hammer.VERSION = '2.0.4';\n\n    /**\n     * default settings\n     * @namespace\n     */\n    Hammer.defaults = {\n        /**\n         * set if DOM events are being triggered.\n         * But this is slower and unused by simple implementations, so disabled by default.\n         * @type {Boolean}\n         * @default false\n         */\n        domEvents: false,\n\n        /**\n         * The value for the touchAction property/fallback.\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\n         * @type {String}\n         * @default compute\n         */\n        touchAction: TOUCH_ACTION_COMPUTE,\n\n        /**\n         * @type {Boolean}\n         * @default true\n         */\n        enable: true,\n\n        /**\n         * EXPERIMENTAL FEATURE -- can be removed/changed\n         * Change the parent input target element.\n         * If Null, then it is being set the to main element.\n         * @type {Null|EventTarget}\n         * @default null\n         */\n        inputTarget: null,\n\n        /**\n         * force an input class\n         * @type {Null|Function}\n         * @default null\n         */\n        inputClass: null,\n\n        /**\n         * Default recognizer setup when calling `Hammer()`\n         * When creating a new Manager these will be skipped.\n         * @type {Array}\n         */\n        preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, { enable: false }], [PinchRecognizer, { enable: false }, ['rotate']], [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }], [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']], [TapRecognizer], [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']], [PressRecognizer]],\n\n        /**\n         * Some CSS properties can be used to improve the working of Hammer.\n         * Add them to this method and they will be set when creating a new Manager.\n         * @namespace\n         */\n        cssProps: {\n            /**\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userSelect: 'none',\n\n            /**\n             * Disable the Windows Phone grippers when pressing an element.\n             * @type {String}\n             * @default 'none'\n             */\n            touchSelect: 'none',\n\n            /**\n             * Disables the default callout shown when you touch and hold a touch target.\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\n             * a callout containing information about the link. This property allows you to disable that callout.\n             * @type {String}\n             * @default 'none'\n             */\n            touchCallout: 'none',\n\n            /**\n             * Specifies whether zooming is enabled. Used by IE10>\n             * @type {String}\n             * @default 'none'\n             */\n            contentZooming: 'none',\n\n            /**\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userDrag: 'none',\n\n            /**\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\n             * clickable element in iOS. This property obeys the alpha value, if specified.\n             * @type {String}\n             * @default 'rgba(0,0,0,0)'\n             */\n            tapHighlightColor: 'rgba(0,0,0,0)'\n        }\n    };\n\n    var STOP = 1;\n    var FORCED_STOP = 2;\n\n    /**\n     * Manager\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Manager(element, options) {\n        options = options || {};\n\n        this.options = merge(options, Hammer.defaults);\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.handlers = {};\n        this.session = {};\n        this.recognizers = [];\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        toggleCssProps(this, true);\n\n        each(options.recognizers, function (item) {\n            var recognizer = this.add(new item[0](item[1]));\n            item[2] && recognizer.recognizeWith(item[2]);\n            item[3] && recognizer.requireFailure(item[3]);\n        }, this);\n    }\n\n    Manager.prototype = {\n        /**\n         * set options\n         * @param {Object} options\n         * @returns {Manager}\n         */\n        set: function set(options) {\n            extend(this.options, options);\n\n            // Options that need a little more setup\n            if (options.touchAction) {\n                this.touchAction.update();\n            }\n            if (options.inputTarget) {\n                // Clean up existing event listeners and reinitialize\n                this.input.destroy();\n                this.input.target = options.inputTarget;\n                this.input.init();\n            }\n            return this;\n        },\n\n        /**\n         * stop recognizing for this session.\n         * This session will be discarded, when a new [input]start event is fired.\n         * When forced, the recognizer cycle is stopped immediately.\n         * @param {Boolean} [force]\n         */\n        stop: function stop(force) {\n            this.session.stopped = force ? FORCED_STOP : STOP;\n        },\n\n        /**\n         * run the recognizers!\n         * called by the inputHandler function on every movement of the pointers (touches)\n         * it walks through all the recognizers and tries to detect the gesture that is being made\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            var session = this.session;\n            if (session.stopped) {\n                return;\n            }\n\n            // run the touch-action polyfill\n            this.touchAction.preventDefaults(inputData);\n\n            var recognizer;\n            var recognizers = this.recognizers;\n\n            // this holds the recognizer that is being recognized.\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n            // if no recognizer is detecting a thing, it is set to `null`\n            var curRecognizer = session.curRecognizer;\n\n            // reset when the last recognizer is recognized\n            // or when we're in a new session\n            if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n                curRecognizer = session.curRecognizer = null;\n            }\n\n            var i = 0;\n            while (i < recognizers.length) {\n                recognizer = recognizers[i];\n\n                // find out if we are allowed try to recognize the input for this one.\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n                //      that is being recognized.\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\n                if (session.stopped !== FORCED_STOP && ( // 1\n                !curRecognizer || recognizer == curRecognizer || // 2\n                recognizer.canRecognizeWith(curRecognizer))) {\n                    // 3\n                    recognizer.recognize(inputData);\n                } else {\n                    recognizer.reset();\n                }\n\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n                // current active recognizer. but only if we don't already have an active recognizer\n                if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                    curRecognizer = session.curRecognizer = recognizer;\n                }\n                i++;\n            }\n        },\n\n        /**\n         * get a recognizer by its event name.\n         * @param {Recognizer|String} recognizer\n         * @returns {Recognizer|Null}\n         */\n        get: function get(recognizer) {\n            if (recognizer instanceof Recognizer) {\n                return recognizer;\n            }\n\n            var recognizers = this.recognizers;\n            for (var i = 0; i < recognizers.length; i++) {\n                if (recognizers[i].options.event == recognizer) {\n                    return recognizers[i];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * add a recognizer to the manager\n         * existing recognizers with the same event name will be removed\n         * @param {Recognizer} recognizer\n         * @returns {Recognizer|Manager}\n         */\n        add: function add(recognizer) {\n            if (invokeArrayArg(recognizer, 'add', this)) {\n                return this;\n            }\n\n            // remove existing\n            var existing = this.get(recognizer.options.event);\n            if (existing) {\n                this.remove(existing);\n            }\n\n            this.recognizers.push(recognizer);\n            recognizer.manager = this;\n\n            this.touchAction.update();\n            return recognizer;\n        },\n\n        /**\n         * remove a recognizer by name or instance\n         * @param {Recognizer|String} recognizer\n         * @returns {Manager}\n         */\n        remove: function remove(recognizer) {\n            if (invokeArrayArg(recognizer, 'remove', this)) {\n                return this;\n            }\n\n            var recognizers = this.recognizers;\n            recognizer = this.get(recognizer);\n            recognizers.splice(inArray(recognizers, recognizer), 1);\n\n            this.touchAction.update();\n            return this;\n        },\n\n        /**\n         * bind event\n         * @param {String} events\n         * @param {Function} handler\n         * @returns {EventEmitter} this\n         */\n        on: function on(events, handler) {\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n            return this;\n        },\n\n        /**\n         * unbind event, leave emit blank to remove all handlers\n         * @param {String} events\n         * @param {Function} [handler]\n         * @returns {EventEmitter} this\n         */\n        off: function off(events, handler) {\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                if (!handler) {\n                    delete handlers[event];\n                } else {\n                    handlers[event].splice(inArray(handlers[event], handler), 1);\n                }\n            });\n            return this;\n        },\n\n        /**\n         * emit event to the listeners\n         * @param {String} event\n         * @param {Object} data\n         */\n        emit: function emit(event, data) {\n            // we also want to trigger dom events\n            if (this.options.domEvents) {\n                triggerDomEvent(event, data);\n            }\n\n            // no handlers, so skip it all\n            var handlers = this.handlers[event] && this.handlers[event].slice();\n            if (!handlers || !handlers.length) {\n                return;\n            }\n\n            data.type = event;\n            data.preventDefault = function () {\n                data.srcEvent.preventDefault();\n            };\n\n            var i = 0;\n            while (i < handlers.length) {\n                handlers[i](data);\n                i++;\n            }\n        },\n\n        /**\n         * destroy the manager and unbinds all events\n         * it doesn't unbind dom events, that is the user own responsibility\n         */\n        destroy: function destroy() {\n            this.element && toggleCssProps(this, false);\n\n            this.handlers = {};\n            this.session = {};\n            this.input.destroy();\n            this.element = null;\n        }\n    };\n\n    /**\n     * add/remove the css properties as defined in manager.options.cssProps\n     * @param {Manager} manager\n     * @param {Boolean} add\n     */\n    function toggleCssProps(manager, add) {\n        var element = manager.element;\n        each(manager.options.cssProps, function (value, name) {\n            element.style[prefixed(element.style, name)] = add ? value : '';\n        });\n    }\n\n    /**\n     * trigger dom event\n     * @param {String} event\n     * @param {Object} data\n     */\n    function triggerDomEvent(event, data) {\n        var gestureEvent = document.createEvent('Event');\n        gestureEvent.initEvent(event, true, true);\n        gestureEvent.gesture = data;\n        data.target.dispatchEvent(gestureEvent);\n    }\n\n    extend(Hammer, {\n        INPUT_START: INPUT_START,\n        INPUT_MOVE: INPUT_MOVE,\n        INPUT_END: INPUT_END,\n        INPUT_CANCEL: INPUT_CANCEL,\n\n        STATE_POSSIBLE: STATE_POSSIBLE,\n        STATE_BEGAN: STATE_BEGAN,\n        STATE_CHANGED: STATE_CHANGED,\n        STATE_ENDED: STATE_ENDED,\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\n        STATE_CANCELLED: STATE_CANCELLED,\n        STATE_FAILED: STATE_FAILED,\n\n        DIRECTION_NONE: DIRECTION_NONE,\n        DIRECTION_LEFT: DIRECTION_LEFT,\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\n        DIRECTION_UP: DIRECTION_UP,\n        DIRECTION_DOWN: DIRECTION_DOWN,\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n        DIRECTION_ALL: DIRECTION_ALL,\n\n        Manager: Manager,\n        Input: Input,\n        TouchAction: TouchAction,\n\n        TouchInput: TouchInput,\n        MouseInput: MouseInput,\n        PointerEventInput: PointerEventInput,\n        TouchMouseInput: TouchMouseInput,\n        SingleTouchInput: SingleTouchInput,\n\n        Recognizer: Recognizer,\n        AttrRecognizer: AttrRecognizer,\n        Tap: TapRecognizer,\n        Pan: PanRecognizer,\n        Swipe: SwipeRecognizer,\n        Pinch: PinchRecognizer,\n        Rotate: RotateRecognizer,\n        Press: PressRecognizer,\n\n        on: addEventListeners,\n        off: removeEventListeners,\n        each: each,\n        merge: merge,\n        extend: extend,\n        inherit: inherit,\n        bindFn: bindFn,\n        prefixed: prefixed\n    });\n\n    if (typeof define == TYPE_FUNCTION && define.amd) {\n        define(function () {\n            return Hammer;\n        });\n    } else if (typeof module != 'undefined' && module.exports) {\n        module.exports = Hammer;\n    } else {\n        window[exportName] = Hammer;\n    }\n})(window, document, 'Hammer');\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar DOM = (function () {\n\n\tElement.prototype.matches = Element.prototype.matches || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n\tvar eventsListeners = {};\n\n\tdocument.addEventListener('click', handler, false);\n\tdocument.addEventListener('dblclick', handler, false);\n\tdocument.addEventListener('touchend', handler, false);\n\tdocument.addEventListener('touchstart', handler, false);\n\n\tfunction handler(e) {\n\t\tvar element = e.target;\n\n\t\tif (eventsListeners[e.type]) {\n\t\t\teventsListeners[e.type].forEach(function (ev) {\n\t\t\t\tvar _elementTarget = _closest(element, ev.selector);\n\t\t\t\tif (_elementTarget) {\n\t\t\t\t\tev.fn(e, _elementTarget);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _closest(el, selector) {\n\n\t\tif (Element.prototype.closest) {\n\t\t\treturn el.closest(selector);\n\t\t}\n\n\t\twhile (el && el.parentNode) {\n\t\t\tif (el.matches(selector)) {\n\t\t\t\treturn el;\n\t\t\t}\n\n\t\t\tel = el.parentNode;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction isArray(value) {\n\t\tif (Object.prototype.toString.call(value) === '[object Array]') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar DOM = (function () {\n\t\tfunction DOM(selector) {\n\t\t\t_classCallCheck(this, DOM);\n\n\t\t\tif (typeof selector === 'object') {\n\t\t\t\tthis.selector = selector.selector;\n\t\t\t\tthis.elements = selector;\n\t\t\t} else {\n\t\t\t\tthis.selector = selector;\n\t\t\t\tthis.elements = document.querySelectorAll(selector);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t_createClass(DOM, [{\n\t\t\tkey: 'on',\n\t\t\tvalue: function on(eventName, callback) {\n\t\t\t\tvar obj = {\n\t\t\t\t\tselector: this.selector,\n\t\t\t\t\telement: this.elements,\n\t\t\t\t\tfn: callback\n\t\t\t\t};\n\n\t\t\t\tif (!eventsListeners[eventName]) {\n\t\t\t\t\teventsListeners[eventName] = [obj];\n\t\t\t\t} else {\n\t\t\t\t\teventsListeners[eventName].push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'click',\n\t\t\tvalue: function click(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('click', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dblclick',\n\t\t\tvalue: function dblclick(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('dblclick', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'ontouchend',\n\t\t\tvalue: function ontouchend(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('touchend', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'ontouchstart',\n\t\t\tvalue: function ontouchstart(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('touchstart', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'addClass',\n\t\t\tvalue: function addClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.add(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'toggleClass',\n\t\t\tvalue: function toggleClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.toggle(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeClass',\n\t\t\tvalue: function removeClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.remove(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'hasClass',\n\t\t\tvalue: function hasClass(className) {\n\t\t\t\treturn this.elements[0].classList.contains(className);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'append',\n\t\t\tvalue: function append(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('beforeend', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'prepend',\n\t\t\tvalue: function prepend(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('afterbegin', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'insertBefore',\n\t\t\tvalue: function insertBefore(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('beforebegin', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'insertAfter',\n\t\t\tvalue: function insertAfter(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('afterend', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'next',\n\t\t\tvalue: function next() {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.nextElementSibling;\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'setAttribute',\n\t\t\tvalue: function setAttribute(attrName) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.setAttribute(\"disabled\", \"disabled\");\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeAttibute',\n\t\t\tvalue: function removeAttibute(attrName) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.removeAttibute(attrName);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getAttribute',\n\t\t\tvalue: function getAttribute(attrName) {\n\t\t\t\treturn this.element[0].getAttribute(attrName);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'hasAttribute',\n\t\t\tvalue: function hasAttribute(attrName) {\n\t\t\t\treturn this.element[0].hasAttribute(attrName);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'html',\n\t\t\tvalue: function html(content) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.innerHTML = content;\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'outerHTML',\n\t\t\tvalue: function outerHTML() {\n\t\t\t\treturn this.element[0].outerHTML;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'closest',\n\t\t\tvalue: function closest(selector) {\n\t\t\t\treturn _closest(this.element[0], selector);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'touch',\n\t\t\tvalue: function touch(callback) {\n\t\t\t\tif (isArray(this.elements)) {\n\t\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\t\thandlerTouch(el);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\thandlerTouch(this.elements);\n\t\t\t\t}\n\n\t\t\t\tfunction handlerTouch(el) {\n\t\t\t\t\tvar touchsurface = el,\n\t\t\t\t\t    dir,\n\t\t\t\t\t    swipeType,\n\t\t\t\t\t    startX,\n\t\t\t\t\t    startY,\n\t\t\t\t\t    distX,\n\t\t\t\t\t    distY,\n\t\t\t\t\t    dist,\n\t\t\t\t\t    threshold = 150,\n\t\t\t\t\t    //required min distance traveled to be considered swipe\n\t\t\t\t\trestraint = 100,\n\t\t\t\t\t    // maximum distance allowed at the same time in perpendicular direction\n\t\t\t\t\tallowedTime = 500,\n\t\t\t\t\t    // maximum time allowed to travel that distance\n\t\t\t\t\telapsedTime,\n\t\t\t\t\t    startTime,\n\t\t\t\t\t    handletouch = callback || function (evt, dir, phase, swipetype, distance) {};\n\n\t\t\t\t\ttouchsurface.addEventListener('touchstart', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdir = 'none';\n\t\t\t\t\t\tswipeType = 'none';\n\t\t\t\t\t\tdist = 0;\n\t\t\t\t\t\tstartX = touchobj.pageX;\n\t\t\t\t\t\tstartY = touchobj.pageY;\n\t\t\t\t\t\tstartTime = new Date().getTime(); // record time when finger first makes contact with surface\n\t\t\t\t\t\thandletouch(e, 'none', 'start', swipeType, 0); // fire callback function with params dir=\"none\", phase=\"start\", swipetype=\"none\" etc\n\t\t\t\t\t\t//e.preventDefault();\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchmove', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdistX = touchobj.pageX - startX; // get horizontal dist traveled by finger while in contact with surface\n\t\t\t\t\t\tdistY = touchobj.pageY - startY; // get vertical dist traveled by finger while in contact with surface\n\t\t\t\t\t\tif (Math.abs(distX) > Math.abs(distY)) {\n\t\t\t\t\t\t\t// if distance traveled horizontally is greater than vertically, consider this a horizontal movement\n\t\t\t\t\t\t\tdir = distX < 0 ? 'left' : 'right';\n\t\t\t\t\t\t\thandletouch(e, dir, 'move', swipeType, distX); // fire callback function with params dir=\"left|right\", phase=\"move\", swipetype=\"none\" etc\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// else consider this a vertical movement\n\t\t\t\t\t\t\t\tdir = distY < 0 ? 'up' : 'down';\n\t\t\t\t\t\t\t\thandletouch(e, dir, 'move', swipeType, distY); // fire callback function with params dir=\"up|down\", phase=\"move\", swipetype=\"none\" etc\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// e.preventDefault(); // prevent scrolling when inside DIV\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchend', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\telapsedTime = new Date().getTime() - startTime; // get time elapsed\n\t\t\t\t\t\tif (elapsedTime <= allowedTime) {\n\t\t\t\t\t\t\t// first condition for awipe met\n\t\t\t\t\t\t\tif (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint) {\n\t\t\t\t\t\t\t\t// 2nd condition for horizontal swipe met\n\t\t\t\t\t\t\t\tswipeType = dir; // set swipeType to either \"left\" or \"right\"\n\t\t\t\t\t\t\t} else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint) {\n\t\t\t\t\t\t\t\t\t// 2nd condition for vertical swipe met\n\t\t\t\t\t\t\t\t\tswipeType = dir; // set swipeType to either \"top\" or \"down\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Fire callback function with params dir=\"left|right|up|down\", phase=\"end\", swipetype=dir etc:\n\t\t\t\t\t\thandletouch(e, dir, 'end', swipeType, dir == 'left' || dir == 'right' ? distX : distY);\n\t\t\t\t\t\t//e.preventDefault();\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchcancel', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdir = 'none';\n\t\t\t\t\t\tswipeType = 'none';\n\t\t\t\t\t\thandletouch(e, 'none', 'cancel', swipeType, 0); // fire callback function with params dir=\"none\", phase=\"start\", swipetype=\"none\" etc\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'style',\n\t\t\tvalue: function style(styleProp) {\n\t\t\t\tvar el = this.elements[0] || this.elements;\n\t\t\t\tvar value,\n\t\t\t\t    defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t\t// W3C standard way:\n\t\t\t\tif (defaultView && defaultView.getComputedStyle) {\n\t\t\t\t\t// sanitize property name to css notation\n\t\t\t\t\t// (hypen separated words eg. font-Size)\n\t\t\t\t\tstyleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t\t\treturn defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t\t} else if (el.currentStyle) {\n\t\t\t\t\t// IE\n\t\t\t\t\t// sanitize property name to camelCase\n\t\t\t\t\tstyleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t\t\t\treturn letter.toUpperCase();\n\t\t\t\t\t});\n\t\t\t\t\tvalue = el.currentStyle[styleProp];\n\t\t\t\t\t// convert other units to pixels on IE\n\t\t\t\t\tif (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t\t\t\treturn (function (value) {\n\t\t\t\t\t\t\tvar oldLeft = el.style.left,\n\t\t\t\t\t\t\t    oldRsLeft = el.runtimeStyle.left;\n\t\t\t\t\t\t\tel.runtimeStyle.left = el.currentStyle.left;\n\t\t\t\t\t\t\tel.style.left = value || 0;\n\t\t\t\t\t\t\tvalue = el.style.pixelLeft + \"px\";\n\t\t\t\t\t\t\tel.style.left = oldLeft;\n\t\t\t\t\t\t\tel.runtimeStyle.left = oldRsLeft;\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t})(value);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn DOM;\n\t})();\n\n\tfunction element(el) {\n\t\treturn new DOM(el);\n\t}\n\n\treturn element;\n})();\n\nexports['default'] = DOM;\nmodule.exports = exports['default'];\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports[\"default\"] = {\n\n\textend: function extend(a, b) {\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tfor (var key in arguments[i]) {\n\t\t\t\tif (arguments[i].hasOwnProperty(key)) {\n\t\t\t\t\targuments[0][key] = arguments[i][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn arguments[0];\n\t},\n\n\tclousestClass: function clousestClass(el, className) {\n\n\t\twhile (el && el.parentNode) {\n\t\t\tel = el.parentNode;\n\t\t\tif (el.classList) if (el.classList.contains(className)) {\n\t\t\t\treturn el;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n};\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[12])(12)\n});"]}