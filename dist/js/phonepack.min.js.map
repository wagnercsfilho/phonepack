{"version":3,"sources":["phonepack.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","phonepack","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_utilsDom","_utilsDom2","Buttons","addRippleEffect","target","rect","getBoundingClientRect","ripple","querySelector","document","createElement","className","style","height","width","Math","max","appendChild","classList","remove","top","pageY","offsetHeight","body","scrollTop","left","pageX","offsetWidth","scrollLeft","add","floatButton","element","hideShowOnScroll","st","lastScrollTop","btn","addEventListener","on","../utils/dom",2,"_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_utilsUtils","_utilsUtils2","Dialog","params","options","title","content","ok","cancel","extend","overlay","dialog","innerHTML","actions","btnCancel","btnOk","confirmCallback","cancelCallback","setTimeout","bind","hide","../utils/utils",3,"DropDownMenu","elMenu","position","contains","removed","elements","getElementsByClassName",4,"InfiniteScroll","callback","_options","distance","isShown","loadEl","scrollHeight",5,"Loading","that","spinner","main","sp","padding",6,"_changePage","template","currentPage","prevPage","eventEmitter","afterChange","_pushPage","animation","afterPush","beforePush","beforeChange","onClose","Navigation","cb","pages","_params","otherwise","c","change","closeCurrentPage","event","fn","page","render","request","XMLHttpRequest","onreadystatechange","readyState","status","temp","responseText","open","send","removeDomPage","removeEventListener","name","component","pushPage","controller","changePage","get","set",7,"_show","text","notification_content","notification","time","Notification","type","icon",8,"setTransform","webkitTransform","MozTransform","msTransform","OTransform","transform","setAnimation","webkitAnimation","MozAnimation","msAnimation","OAnimation","createLoading","loading","parseInt","replace","zIndex","child","parentNode","insertBefore","_libsHammer","pullToRefresh","distY","startY","touchobj","moveDistance","scale","changedTouches","toFixed","firstChild","preventDefault","handlerEndTranition","webkitTransitionDuration","transitionDuration","../libs/hammer",9,"shrinkHeader","handlerScroll","_el","_st","_top","_lastScrollTop","parentElement","_content","querySelectorAll","forEach","el",10,"listenCLoseSlideMenu","toggle","removeListenCLoseSlideMenu","createOverlayElement","SideMenu","startX","startTouchPosition","distX","clientWidth","isMoved","swipe","overlayEl","opacity","removeAttribute",11,"TabBar","contentsTabs","addClass","activeTab","contentId","getAttribute","removeClass",12,"_componentsSideMenu","_componentsSideMenu2","_componentsPullToRefresh","_componentsPullToRefresh2","_componentsButton","_componentsDropdownMenu","_componentsDropdownMenu2","_componentsNavigation","_componentsNavigation2","_componentsDialog","_componentsDialog2","_componentsLoading","_componentsLoading2","_componentsNotification","_componentsNotification2","_componentsTabBarJs","_componentsTabBarJs2","_componentsInfiniteScrollJs","_componentsInfiniteScrollJs2","_componentsShrinkHeaderJs","_componentsShrinkHeaderJs2","selector","PullToRefresh","ready","./components/button","./components/dialog","./components/dropdown-menu","./components/infinite-scroll.js","./components/loading","./components/navigation","./components/notification","./components/pull-to-refresh","./components/shrink-header.js","./components/side-menu","./components/tab-bar.js","./utils/dom",13,"exportName","undefined","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","Array","isArray","each","iterator","hasOwnProperty","dest","src","merge","keys","inherit","base","properties","childP","baseP","create","constructor","_super","apply","arguments","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","node","parent","inStr","str","find","indexOf","trim","split","inArray","findByKey","toArray","slice","uniqueArray","sort","results","values","push","b","prefixed","property","prefix","prop","camelProp","toUpperCase","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","doc","ownerDocument","defaultView","parentWindow","Input","manager","inputTarget","domHandler","ev","enable","init","createInputInstance","Type","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","input","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","angle","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","deltaY","getScale","rotation","getRotation","computeIntervalInputData","srcEvent","offset","offsetDelta","prevDelta","x","y","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","v","getVelocity","abs","clientX","round","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","PROPS_XY","sqrt","atan2","PI","start","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","allow","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","all","touches","changed","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","filter","touch","mouse","TouchAction","cleanTouchActions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","id","defaults","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","count","Hammer","recognizers","preset","Manager","handlers","touchAction","toggleCssProps","item","recognizeWith","requireFailure","cssProps","triggerDomEvent","data","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","Date","MOBILE_REGEX","test","navigator","userAgent","INPUT_TYPE_TOUCH","INPUT_TYPE_PEN","INPUT_TYPE_MOUSE","INPUT_TYPE_KINECT","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","mouseup","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","MSPointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","splice","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_COMPUTE","compute","update","getTouchAction","join","preventDefaults","prevented","hasNone","preventSrc","STATE_RECOGNIZED","STATE_FAILED","dropRecognizeWith","dropRequireFailure","index","hasRequireFailures","canRecognizeWith","withState","tryEmit","canEmit","inputDataClone","process","reset","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","STOP","FORCED_STOP","stop","force","stopped","curRecognizer","existing","events","off","Tap","Pan","Swipe","Pinch","Rotate","Press",14,"DOM","eventsListeners","_elementTarget","_closest","Element","closest","matches","toString","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","eventName","htmlContent","insertAdjacentHTML","nextElementSibling","attrName","setAttribute","removeAttibute","hasAttribute","outerHTML","handlerTouch","dir","swipeType","dist","elapsedTime","startTime","touchsurface","restraint","allowedTime","handletouch","evt","phase","swipetype","getTime","styleProp","getComputedStyle","getPropertyValue","currentStyle","letter","oldLeft","oldRsLeft","runtimeStyle","pixelLeft",15,"clousestClass"],"mappings":"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","file":"phonepack.min.js","sourceRoot":"/source/","sourcesContent":["/**\n * phonepack - CSS & JS Mobile Framework\n * @version v0.1.9\n * @link \n * @license MIT\n */\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.phonepack = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar Buttons = (function () {\n\n    (0, _utilsDom2['default'])('.ripple').on('click', addRippleEffect);\n    (0, _utilsDom2['default'])('.button--ripple').on('click', addRippleEffect);\n\n    function addRippleEffect(e, target) {\n\n        var rect = target.getBoundingClientRect();\n        var ripple = target.querySelector('.ripple-animation:first-child');\n\n        if (!ripple) {\n            ripple = document.createElement('span');\n            ripple.className = 'ripple-animation';\n            ripple.style.height = ripple.style.width = Math.max(rect.width * 2, rect.height * 2) + 'px';\n            target.appendChild(ripple);\n        }\n\n        ripple.classList.remove('show');\n        var top = e.pageY - rect.top - ripple.offsetHeight / 2 - document.body.scrollTop;\n        var left = e.pageX - rect.left - ripple.offsetWidth / 2 - document.body.scrollLeft;\n        ripple.style.top = top + 'px';\n        ripple.style.left = left + 'px';\n        ripple.classList.add('show');\n\n        return false;\n    }\n\n    function floatButton(element) {\n        var btn = document.querySelector('.button--fab-floating');\n        var lastScrollTop = 0;\n\n        element.addEventListener(\"scroll\", hideShowOnScroll);\n\n        function hideShowOnScroll(e) {\n            var st = this.scrollTop;\n            if (st > lastScrollTop) {\n                btn.classList.add('hidden');\n            } else {\n                btn.classList.remove('hidden');\n            }\n            lastScrollTop = st;\n        }\n    }\n\n    return {\n        floatButton: floatButton\n    };\n})();\n\nexports['default'] = Buttons;\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar Dialog = (function () {\n\tfunction Dialog(params) {\n\t\t_classCallCheck(this, Dialog);\n\n\t\tvar self = this;\n\n\t\tvar options = {\n\t\t\ttitle: null,\n\t\t\tcontent: null,\n\t\t\toptions: {\n\t\t\t\tok: 'OK',\n\t\t\t\tcancel: null\n\t\t\t}\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, options, params);\n\n\t\tself.overlay = document.createElement(\"div\");\n\t\tself.overlay.className = 'dialog-filter';\n\n\t\tself.dialog = document.createElement(\"div\");\n\t\tself.dialog.className = 'dialog';\n\n\t\tif (self.options.title) {\n\t\t\tvar title = document.createElement(\"div\");\n\t\t\ttitle.className = 'dialog__title';\n\t\t\ttitle.innerHTML = self.options.title;\n\t\t\tself.dialog.appendChild(title);\n\t\t}\n\n\t\tif (self.options.content) {\n\t\t\tvar content = document.createElement(\"div\");\n\t\t\tcontent.className = 'dialog__content';\n\t\t\tcontent.innerHTML = self.options.content;\n\t\t\tself.dialog.appendChild(content);\n\t\t}\n\n\t\tvar actions = document.createElement(\"div\");\n\t\tactions.className = 'dialog__actions';\n\n\t\tif (self.options.options.cancel) {\n\t\t\tself.btnCancel = document.createElement('button');\n\t\t\tself.btnCancel.className = 'button button--flat btn--ripple text-red';\n\t\t\tself.btnCancel.innerHTML = self.options.options.cancel;\n\t\t\tactions.appendChild(self.btnCancel);\n\t\t}\n\n\t\tself.btnOk = document.createElement('button');\n\t\tself.btnOk.className = 'button button--flat button--ripple text-blue';\n\t\tself.btnOk.innerHTML = self.options.options.ok;\n\t\tactions.appendChild(self.btnOk);\n\n\t\tself.dialog.appendChild(actions);\n\n\t\tdocument.body.appendChild(self.overlay);\n\t\tdocument.body.appendChild(self.dialog);\n\n\t\treturn self;\n\t}\n\n\t_createClass(Dialog, [{\n\t\tkey: 'show',\n\t\tvalue: function show(confirmCallback, cancelCallback) {\n\n\t\t\tvar self = this;\n\n\t\t\tsetTimeout((function () {\n\t\t\t\tthis.overlay.classList.add('dialog-filter--is-shown');\n\t\t\t\tthis.dialog.classList.add('dialog--is-shown');\n\t\t\t}).bind(self), 0);\n\n\t\t\tself.btnOk.addEventListener('click', function () {\n\t\t\t\tconfirmCallback();\n\t\t\t});\n\n\t\t\tif (self.btnCancel) {\n\t\t\t\tself.btnCancel.addEventListener('click', function () {\n\t\t\t\t\tcancelCallback();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tself.overlay.addEventListener('click', function () {\n\t\t\t\tself.hide();\n\t\t\t}, false);\n\n\t\t\treturn self;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\n\t\t\tvar self = this;\n\n\t\t\tsetTimeout((function () {\n\t\t\t\tvar self = this;\n\t\t\t\tself.overlay.classList.remove('dialog-filter--is-shown');\n\t\t\t\tself.dialog.classList.remove('dialog--is-shown');\n\n\t\t\t\tself.overlay.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\t\tself.overlay.remove();\n\t\t\t\t});\n\n\t\t\t\tself.overlay.addEventListener('transitionend', function () {\n\t\t\t\t\tself.overlay.remove();\n\t\t\t\t});\n\n\t\t\t\tself.dialog.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\t\tself.dialog.remove();\n\t\t\t\t});\n\n\t\t\t\tself.dialog.addEventListener('transitionend', function () {\n\t\t\t\t\tself.dialog.remove();\n\t\t\t\t});\n\t\t\t}).bind(self), 0);\n\n\t\t\treturn self;\n\t\t}\n\t}]);\n\n\treturn Dialog;\n})();\n\nexports['default'] = Dialog;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\nvar removed = false;\n\ndocument.addEventListener('click', function (e) {\n\tremoved = false;\n\n\tvar elements = document.getElementsByClassName('dropdown-menu');\n\tfor (var i = 0; i < elements.length; i++) {\n\t\tif (elements[i].classList.contains('dropdown-menu--is-shown')) {\n\t\t\telements[i].classList.remove('dropdown-menu--is-shown');\n\t\t\tremoved = true;\n\t\t}\n\t}\n}, true);\n\nfunction DropDownMenu(element, elMenu, position) {\n\tvar self = this;\n\n\tself.element = element;\n\tself.elMenu = elMenu;\n\tself.position = position || 'left';\n\n\tself.element.addEventListener('click', function () {\n\n\t\tif (self.elMenu.classList.contains('dropdown-menu--is-shown')) {\n\t\t\tself.elMenu.classList.remove('dropdown-menu--is-shown');\n\t\t} else if (!removed) {\n\t\t\tvar target = self.element.getBoundingClientRect();\n\n\t\t\tself.elMenu.style.top = target.top + 'px';\n\t\t\tif (self.position === 'left') {\n\t\t\t\tself.elMenu.style.left = target.left - document.body.scrollLeft - 150 + 'px';\n\t\t\t} else if (self.position === 'right') {\n\t\t\t\tself.elMenu.style.left = target.left - document.body.scrollLeft + 100 + 'px';\n\t\t\t}\n\t\t\tself.elMenu.classList.add('dropdown-menu--is-shown');\n\t\t}\n\n\t\tremoved = false;\n\t}, false);\n}\n\nexports['default'] = DropDownMenu;\nmodule.exports = exports['default'];\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar InfiniteScroll = (function () {\n    function InfiniteScroll(element, options, callback) {\n        _classCallCheck(this, InfiniteScroll);\n\n        var self = this;\n        var _options = {\n            distance: 0\n        };\n        var lastScrollTop;\n\n        self.options = _utilsUtils2['default'].extend({}, _options, options);\n        self.isShown = false;\n\n        self.loadEl = document.createElement('div');\n        self.loadEl.className = 'infinite-scroll-loading';\n        self.loadEl.innerHTML = '<div class=\"spinner--infinite-scroll\"></div>';\n        element.appendChild(self.loadEl);\n\n        element.addEventListener('scroll', function (e) {\n\n            var st = element.scrollTop;\n            if (st > lastScrollTop) {\n                if (element.scrollTop + element.offsetHeight >= element.scrollHeight - self.options.distance && !self.isShown) {\n                    self.loadEl.classList.add('is-shown');\n                    self.isShown = true;\n                    callback();\n                }\n            }\n            lastScrollTop = st;\n        }, false);\n    }\n\n    _createClass(InfiniteScroll, [{\n        key: 'hide',\n        value: function hide() {\n            this.loadEl.classList.remove('is-shown');\n            this.isShown = false;\n        }\n    }]);\n\n    return InfiniteScroll;\n})();\n\nexports['default'] = InfiniteScroll;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar Loading = (function () {\n\tfunction Loading(params) {\n\t\t_classCallCheck(this, Loading);\n\n\t\tvar that = this;\n\n\t\tvar options = {\n\t\t\ttitle: null,\n\t\t\tspinner: true,\n\t\t\toverlay: true\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, options, params);\n\n\t\tthat.overlay = document.createElement(\"div\");\n\t\tthat.overlay.className = 'loading-filter';\n\n\t\tthat.dialog = document.createElement(\"div\");\n\t\tthat.dialog.className = 'loading';\n\n\t\tvar main = document.createElement(\"div\");\n\t\tmain.className = 'loading__main';\n\n\t\tif (this.options.spinner) {\n\t\t\tvar spinner = document.createElement(\"div\");\n\t\t\tspinner.className = 'loading__spinner';\n\n\t\t\tvar sp = '<svg class=\"spinner\" width=\"65px\" height=\"65px\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">' + ' <circle class=\"path\" fill=\"none\" stroke-width=\"6\" stroke-linecap=\"round\" cx=\"33\" cy=\"33\" r=\"30\"></circle>' + '</svg>';\n\t\t\tspinner.innerHTML = sp;\n\t\t\tmain.appendChild(spinner);\n\n\t\t\tif (!that.options.title) {\n\t\t\t\tspinner.style.padding = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (that.options.title) {\n\t\t\tvar title = document.createElement(\"div\");\n\t\t\ttitle.className = 'loading__title';\n\t\t\ttitle.innerHTML = that.options.title;\n\t\t\tmain.appendChild(title);\n\t\t}\n\n\t\tthat.dialog.appendChild(main);\n\n\t\tdocument.body.appendChild(that.overlay);\n\t\tdocument.body.appendChild(that.dialog);\n\n\t\treturn that;\n\t}\n\n\t_createClass(Loading, [{\n\t\tkey: 'show',\n\t\tvalue: function show(confirmCallback, cancelCallback) {\n\t\t\tvar that = this;\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (that.options.overlay) {\n\t\t\t\t\tthat.overlay.classList.add('loading-filter--is-shown');\n\t\t\t\t} else {\n\t\t\t\t\tthat.dialog.classList.add('loading--no-box-shadow');\n\t\t\t\t}\n\t\t\t\tthat.dialog.classList.add('loading--is-shown');\n\t\t\t}, 0);\n\n\t\t\treturn that;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar that = this;\n\n\t\t\tthat.overlay.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tthat.overlay.remove();\n\t\t\t});\n\n\t\t\tthat.overlay.addEventListener('transitionend', function () {\n\t\t\t\tthat.overlay.remove();\n\t\t\t});\n\n\t\t\tthat.dialog.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tthat.dialog.remove();\n\t\t\t});\n\n\t\t\tthat.dialog.addEventListener('transitionend', function () {\n\t\t\t\tthat.dialog.remove();\n\t\t\t});\n\n\t\t\tsetTimeout(function () {\n\n\t\t\t\tif (that.options.overlay) {\n\t\t\t\t\tthat.overlay.classList.remove('loading-filter--is-shown');\n\t\t\t\t} else {\n\t\t\t\t\tthat.overlay.remove();\n\t\t\t\t}\n\n\t\t\t\tthat.dialog.classList.remove('loading--is-shown');\n\t\t\t}, 0);\n\n\t\t\treturn that;\n\t\t}\n\t}]);\n\n\treturn Loading;\n})();\n\nexports['default'] = Loading;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar eventEmitter = {\n\t'beforePush': null,\n\t'afterPush': null,\n\t'beforeChange': null,\n\t'afterChange': null,\n\t'onClose': null\n};\n\nfunction _changePage(template, callback) {\n\tvar that = this;\n\tthat.element.appendChild(template);\n\tsetTimeout(function () {\n\t\tif (that.currentPage) {\n\t\t\tthat.prevPage = that.currentPage;\n\t\t\tthat.currentPage.remove();\n\t\t}\n\t\tthat.currentPage = template;\n\n\t\tif (eventEmitter.afterChange) eventEmitter.afterChange(template);\n\n\t\tif (callback) callback();\n\t}, 40);\n}\n\nfunction _pushPage(template, callback) {\n\tvar that = this;\n\n\tthat.element.appendChild(template);\n\tsetTimeout(function () {\n\t\ttemplate.classList.add(that.animation + '-show');\n\t\tthat.prevPage = that.currentPage;\n\t\tthat.currentPage = template;\n\n\t\tif (eventEmitter.afterPush) eventEmitter.afterPush(template);\n\n\t\tif (callback) callback();\n\t}, 40);\n}\n\nvar Navigation = (function () {\n\tfunction Navigation(element, options, cb) {\n\t\t_classCallCheck(this, Navigation);\n\n\t\tvar that = this;\n\t\tthat.pages = {};\n\t\tthat.element = element;\n\t\tthat.currentPage = null;\n\t\tthat.prevPage = null;\n\t\tthat._params = null;\n\n\t\tvar _options = {\n\t\t\totherwise: null,\n\t\t\tpages: null\n\t\t};\n\n\t\tthat.options = _utilsUtils2['default'].extend({}, _options, options);\n\n\t\tif (that.options.pages) {\n\t\t\tfor (var c in that.options.pages) {\n\t\t\t\tthat.pages[c] = that.options.pages[c];\n\t\t\t}\n\t\t}\n\n\t\tif (that.options.otherwise) {\n\t\t\tthat.change(that.options.otherwise, {});\n\t\t}\n\n\t\tdocument.addEventListener('backbutton', function (e) {\n\t\t\tthat.closeCurrentPage();\n\t\t}, false);\n\t}\n\n\t_createClass(Navigation, [{\n\t\tkey: 'on',\n\t\tvalue: function on(event, fn) {\n\t\t\teventEmitter[event] = fn;\n\t\t}\n\t}, {\n\t\tkey: 'changePage',\n\t\tvalue: function changePage(page, params, callback, animation) {\n\t\t\tvar that = this;\n\t\t\tthat.params = params;\n\n\t\t\tif (typeof page == 'string') {\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.onreadystatechange = function () {\n\t\t\t\t\tif (request.readyState === 4 && (request.status === 200 || request.status === 0)) {\n\n\t\t\t\t\t\tvar temp = document.createElement(\"div\");\n\t\t\t\t\t\ttemp.innerHTML = request.responseText;\n\n\t\t\t\t\t\tvar template = temp.querySelector('.pages');\n\t\t\t\t\t\trender(template);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\trequest.open('GET', page, true);\n\t\t\t\trequest.send();\n\t\t\t} else {\n\t\t\t\trender(page);\n\t\t\t}\n\n\t\t\tfunction render(template) {\n\t\t\t\tif (eventEmitter.beforeChange) {\n\t\t\t\t\teventEmitter.beforeChange(template, function () {\n\t\t\t\t\t\t_changePage.call(that, template, function () {\n\t\t\t\t\t\t\tif (callback) callback.call(template);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t_changePage.call(that, template, function () {\n\t\t\t\t\t\tif (callback) callback.call(template);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'pushPage',\n\t\tvalue: function pushPage(page, params, callback, animation) {\n\t\t\tvar that = this;\n\t\t\tthat.params = params;\n\t\t\tthat.animation = 'pages--normal';\n\n\t\t\tif (animation) {\n\t\t\t\tthat.animation = animation;\n\t\t\t}\n\n\t\t\tif (typeof page == 'string') {\n\t\t\t\tvar request = new XMLHttpRequest();\n\t\t\t\trequest.onreadystatechange = function () {\n\t\t\t\t\tif (request.readyState === 4 && (request.status === 200 || request.status === 0)) {\n\t\t\t\t\t\tvar temp = document.createElement(\"div\");\n\t\t\t\t\t\ttemp.innerHTML = request.responseText;\n\t\t\t\t\t\tvar template = temp.querySelector('.pages');\n\t\t\t\t\t\trender(template);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\trequest.open('GET', page, true);\n\t\t\t\trequest.send();\n\t\t\t} else {\n\t\t\t\trender(page);\n\t\t\t}\n\n\t\t\tfunction render(template) {\n\n\t\t\t\ttemplate.classList.add(that.animation);\n\n\t\t\t\tif (eventEmitter.beforePush) {\n\t\t\t\t\teventEmitter.beforePush(template, function () {\n\t\t\t\t\t\t_pushPage.call(that, template, function () {\n\t\t\t\t\t\t\tif (callback) callback.call(template);\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t_pushPage.call(that, template, function () {\n\t\t\t\t\t\tif (callback) callback.call(template);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'closeCurrentPage',\n\t\tvalue: function closeCurrentPage() {\n\t\t\tvar that = this;\n\n\t\t\tvar removeDomPage = function removeDomPage() {\n\t\t\t\tthat.currentPage.removeEventListener('webkitTransitionEnd', removeDomPage);\n\t\t\t\tthat.currentPage.removeEventListener('transitionend', removeDomPage);\n\n\t\t\t\tif (that.currentPage) {\n\t\t\t\t\tthat.currentPage.remove();\n\n\t\t\t\t\tif (eventEmitter.onClose) {\n\t\t\t\t\t\teventEmitter.onClose();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthat.currentPage = that.prevPage;\n\t\t\t};\n\n\t\t\tif (that.prevPage) {\n\t\t\t\tthat.currentPage.classList.remove(that.animation + '-show');\n\t\t\t\tif (that.animation == 'pages--normal') {\n\t\t\t\t\tremoveDomPage();\n\t\t\t\t} else {\n\t\t\t\t\tthat.currentPage.addEventListener('webkitTransitionEnd', removeDomPage);\n\t\t\t\t\tthat.currentPage.addEventListener('transitionend', removeDomPage);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'insert',\n\t\tvalue: function insert(name, params, animation) {\n\t\t\tif (this.pages[name]) {\n\t\t\t\tif (this.pages[name].component) {\n\t\t\t\t\tthis.pages[name].component(params, (function (element) {\n\t\t\t\t\t\tthis.pushPage(element, params, null, animation);\n\t\t\t\t\t}).bind(this));\n\t\t\t\t} else {\n\t\t\t\t\tthis.pushPage(this.pages[name].template, params, this.pages[name].controller, animation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'change',\n\t\tvalue: function change(name, params, animation) {\n\t\t\tif (this.pages[name]) {\n\t\t\t\tif (this.pages[name].component) {\n\t\t\t\t\tthis.pages[name].component(params, (function (element) {\n\t\t\t\t\t\tthis.changePage(element, params, null, animation);\n\t\t\t\t\t}).bind(this));\n\t\t\t\t} else {\n\t\t\t\t\tthis.changePage(this.pages[name].template, params, this.pages[name].controller, animation);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'params',\n\t\tget: function get() {\n\t\t\tvar params = this._params;\n\t\t\treturn params;\n\t\t},\n\t\tset: function set(value) {\n\t\t\tthis._params = value;\n\t\t}\n\t}]);\n\n\treturn Navigation;\n})();\n\nexports['default'] = Navigation;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar instance = null;\n\nfunction _show(text) {\n\tvar self = this;\n\n\tvar notification_content = document.createElement('div');\n\tnotification_content.className = 'notification__content';\n\tnotification_content.innerHTML = text;\n\n\tself.notification.appendChild(notification_content);\n\tsetTimeout(function () {\n\t\tself.notification.classList.add('notification--is-shown');\n\t}, 0);\n\n\tdocument.body.appendChild(self.notification);\n\n\tif (self.options.time > 0) {\n\t\tsetTimeout(function () {\n\t\t\tself.hide();\n\t\t}, self.options.time);\n\t}\n\n\treturn self;\n}\n\nvar Notification = (function () {\n\tfunction Notification(text, options) {\n\t\t_classCallCheck(this, Notification);\n\n\t\tif (instance) {\n\t\t\tinstance.hide();\n\t\t}\n\n\t\tvar self = this;\n\t\tvar _options = {\n\t\t\ttype: 'simple',\n\t\t\ttime: 3000\n\t\t};\n\n\t\tthis.options = _utilsUtils2['default'].extend({}, _options, options);\n\n\t\tself.notification = document.createElement('div');\n\t\tself.notification.className = 'notification';\n\n\t\tself.notification.addEventListener('click', function () {\n\t\t\tself.hide();\n\t\t}, false);\n\n\t\treturn self;\n\t}\n\n\t_createClass(Notification, [{\n\t\tkey: 'simple',\n\t\tvalue: function simple(text) {\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'info',\n\t\tvalue: function info(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-blue mdi mdi-information-outline ';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'success',\n\t\tvalue: function success(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-green mdi mdi-check';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'warning',\n\t\tvalue: function warning(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-yellow mdi mdi-alert';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'error',\n\t\tvalue: function error(text) {\n\t\t\tvar icon = document.createElement('i');\n\t\t\ticon.className = 'notification__icon text-red mdi mdi-alert-circle';\n\t\t\tthis.notification.appendChild(icon);\n\n\t\t\t_show.call(this, text);\n\n\t\t\tinstance = this;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar self = this;\n\n\t\t\tself.notification.classList.remove('notification--is-shown');\n\t\t\tself.notification.addEventListener('webkitTransitionEnd', function () {\n\t\t\t\tself.notification.remove();\n\t\t\t});\n\n\t\t\tself.notification.addEventListener('transitionend', function () {\n\t\t\t\tself.notification.remove();\n\t\t\t});\n\n\t\t\treturn self;\n\t\t}\n\t}]);\n\n\treturn Notification;\n})();\n\nexports['default'] = Notification;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar _libsHammer = require('../libs/hammer');\n\nvar _libsHammer2 = _interopRequireDefault(_libsHammer);\n\nfunction setTransform(element, value) {\n\telement.style.webkitTransform = value;\n\telement.style.MozTransform = value;\n\telement.style.msTransform = value;\n\telement.style.OTransform = value;\n\telement.style.transform = value;\n}\n\nfunction setAnimation(element, value) {\n\telement.style.webkitAnimation = value;\n\telement.style.MozAnimation = value;\n\telement.style.msAnimation = value;\n\telement.style.OAnimation = value;\n\telement.style.animation = value;\n}\n\nfunction createLoading() {\n\tvar that = this;\n\tthat.loading = document.createElement('div');\n\tthat.loading.style.position = 'absolute';\n\tthat.loading.style.top = parseInt(that.top.replace('px', '')) + 5 + 'px';\n\tthat.loading.zIndex = -1;\n\n\tif (that.options.type === 'snake') {\n\t\tthat.loading.style.left = '47%';\n\t\tthat.loading.className = 'snake--pull-to-refresh';\n\t} else if (that.options.type === 'material') {\n\t\tthat.loading.className = 'material--pull-to-refresh';\n\t\tvar child = document.createElement('div');\n\t\tchild.className = 'bar';\n\t\tthat.loading.appendChild(child);\n\t}\n\n\tthat.element.parentNode.insertBefore(that.loading, that.element);\n}\n\nvar pullToRefresh = (function () {\n\tfunction pullToRefresh(element, options, callback) {\n\t\t_classCallCheck(this, pullToRefresh);\n\n\t\tvar that = this,\n\t\t    moveDistance = 0,\n\t\t    scale = 0,\n\t\t    distY,\n\t\t    startY,\n\t\t    touchobj,\n\t\t    _options = {\n\t\t\ttype: 'snake'\n\t\t};\n\n\t\tthat.loading = null;\n\t\tthat.element = element;\n\t\tthat.element.classList.add('pull-to-refresh');\n\t\tthat.top = (0, _utilsDom2['default'])(element).style('padding-top');\n\t\tthat.options = _utilsUtils2['default'].extend({}, _options, options);\n\t\tcreateLoading.call(that, that.type);\n\n\t\tthat.element.addEventListener('touchstart', function (e) {\n\t\t\ttouchobj = e.changedTouches[0];\n\t\t\tstartY = touchobj.pageY;\n\t\t}, false);\n\t\tthat.element.addEventListener('touchmove', function (e) {\n\t\t\ttouchobj = e.changedTouches[0];\n\t\t\tdistY = touchobj.pageY - startY;\n\n\t\t\tif (distY > 0 && that.element.scrollTop === 0) {\n\t\t\t\tif (!moveDistance) moveDistance = distY;\n\n\t\t\t\tif (that.options.type === 'snake') {\n\t\t\t\t\tsetTransform(that.element, 'translateY(' + (distY - moveDistance) + 'px)');\n\t\t\t\t\tthat.loading.classList.add('is-shown');\n\t\t\t\t\tsetTransform(that.loading, 'rotate(' + distY * 2 + 'deg)');\n\t\t\t\t} else if (that.options.type === 'material') {\n\t\t\t\t\tthat.loading.classList.remove('not-loading');\n\t\t\t\t\tthat.loading.classList.remove('is-loading');\n\n\t\t\t\t\tscale = (distY / 200).toFixed(1);\n\t\t\t\t\tif (scale >= 1) scale = 1;\n\t\t\t\t\tsetTransform(that.loading.firstChild, 'scale(' + scale + ')');\n\t\t\t\t}\n\n\t\t\t\te.preventDefault();\n\t\t\t}\n\t\t});\n\t\tthat.element.addEventListener('touchend', function (e) {\n\t\t\tif (distY > 0 && that.element.scrollTop === 0) {\n\t\t\t\tif (that.options.type === 'snake') {\n\t\t\t\t\tif (distY >= 50) {\n\t\t\t\t\t\tsetTransform(that.element, 'translateY(50px)');\n\t\t\t\t\t\tsetAnimation(that.loading, 'rotate 0.8s infinite linear');\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetTransform(that.element, 'translateY(0)');\n\t\t\t\t\t\tsetAnimation(that.loading, null);\n\t\t\t\t\t\tthat.loading.classList.remove('is-shown');\n\t\t\t\t\t}\n\n\t\t\t\t\tmoveDistance = null;\n\t\t\t\t} else if (that.options.type === 'material') {\n\t\t\t\t\tif (scale >= 1) {\n\t\t\t\t\t\tthat.loading.classList.remove('not-loading');\n\t\t\t\t\t\tthat.loading.classList.add('is-loading');\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthat.loading.classList.remove('is-loading');\n\t\t\t\t\t\tthat.loading.classList.add('not-loading');\n\t\t\t\t\t}\n\n\t\t\t\t\tscale = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdistY = 0;\n\t\t}, false);\n\t}\n\n\t_createClass(pullToRefresh, [{\n\t\tkey: 'hide',\n\t\tvalue: function hide() {\n\t\t\tvar that = this;\n\n\t\t\tfunction handlerEndTranition() {\n\t\t\t\tthat.element.style.webkitTransitionDuration = '0s';\n\t\t\t\tthat.element.style.transitionDuration = '0s';\n\t\t\t}\n\n\t\t\tthat.element.addEventListener('webkitTransitionEnd', handlerEndTranition);\n\t\t\tthat.element.addEventListener('transitionend', handlerEndTranition);\n\n\t\t\tif (that.options.type === 'snake') {\n\t\t\t\tthat.element.style.webkitTransitionDuration = '0.4s';\n\t\t\t\tthat.element.style.transitionDuration = '0.4s';\n\t\t\t\tsetTransform(that.element, 'translateY(0)');\n\n\t\t\t\tthat.loading.classList.remove('is-shown');\n\t\t\t\tsetAnimation(that.loading, null);\n\t\t\t} else if (that.options.type === 'material') {\n\t\t\t\tthat.loading.classList.remove('is-loading');\n\t\t\t\tthat.loading.classList.add('not-loading');\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn pullToRefresh;\n})();\n\nexports['default'] = pullToRefresh;\nmodule.exports = exports['default'];\n\n},{\"../libs/hammer\":13,\"../utils/dom\":14,\"../utils/utils\":15}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\nexports['default'] = shrinkHeader;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nfunction shrinkHeader(element) {\n    var pages = element.parentElement;\n    var _content = pages.querySelectorAll('.content');\n    var _lastScrollTop = 0;\n\n    element.classList.add('header--shrink');\n\n    [].forEach.call(_content, function (el) {\n        el.addEventListener('scroll', handlerScroll);\n    });\n\n    function handlerScroll(e) {\n        var _el = e.target;\n        var _st = _el.scrollTop;\n        var _top = (0, _utilsDom2['default'])(_el).style('padding-top').replace('px', '');\n\n        if (_el.scrollTop >= _top) {\n            if (_st > _lastScrollTop) {\n                _el.classList.add('is-shrink');\n                element.classList.add('header--shrink-hide');\n            } else {\n                element.classList.remove('header--shrink-hide');\n                _el.classList.remove('is-shrink');\n            }\n        }\n        _lastScrollTop = _st;\n    }\n}\n\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],10:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsUtils = require('../utils/utils');\n\nvar _utilsUtils2 = _interopRequireDefault(_utilsUtils);\n\nvar listenCLoseSlideMenu = function listenCLoseSlideMenu(element) {\n\tvar that = this;\n\telement.addEventListener('click', that.toggle.bind(that));\n};\n\nvar removeListenCLoseSlideMenu = function removeListenCLoseSlideMenu(element) {\n\tvar that = this;\n\telement.removeEventListener(\"click\", that.toggle.bind(that));\n};\n\nvar createOverlayElement = function createOverlayElement() {\n\tvar overlay = document.createElement(\"div\");\n\tif (this.options.overlay) {\n\t\toverlay.className = 'overlay';\n\t} else {\n\t\toverlay.className = 'overlay transparent';\n\t}\n\tdocument.body.appendChild(overlay);\n\treturn overlay;\n};\n\nfunction setTransform(element, value) {\n\telement.style.webkitTransform = value;\n\telement.style.MozTransform = value;\n\telement.style.msTransform = value;\n\telement.style.OTransform = value;\n\telement.style.transform = value;\n}\n\nvar SideMenu = (function () {\n\tfunction SideMenu(element, options) {\n\t\t_classCallCheck(this, SideMenu);\n\n\t\tvar that = this,\n\t\t    startX,\n\t\t    startTouchPosition,\n\t\t    distX,\n\t\t    transitionDuration,\n\t\t    clientWidth,\n\t\t    touchobj,\n\t\t    isMoved,\n\t\t    _options = {\n\t\t\ttype: 'overlap', // overlap or elastic\n\t\t\toverlay: true, // true or false,\n\t\t\tswipe: false // true or false\n\t\t};\n\n\t\tthat.element = element;\n\t\tthat.options = _utilsUtils2['default'].extend({}, _options, options);\n\t\tthat.overlayEl = null;\n\t\tthat.page = document.querySelector('.navigation');\n\n\t\ttransitionDuration = '0.2s';\n\t\tstartTouchPosition = 30;\n\t\tisMoved = false;\n\n\t\tif (that.options.swipe) {\n\t\t\tdocument.addEventListener('touchstart', function (e) {\n\t\t\t\ttouchobj = e.changedTouches[0];\n\t\t\t\tstartX = touchobj.pageX;\n\t\t\t\tif (startX <= startTouchPosition && !that.element.classList.contains('side-menu--visible') && that.options.overlay) {\n\t\t\t\t\tclientWidth = that.element.clientWidth;\n\t\t\t\t\tthat.overlayEl = createOverlayElement.call(that);\n\t\t\t\t\tlistenCLoseSlideMenu.call(that, that.overlayEl);\n\t\t\t\t}\n\t\t\t}, false);\n\n\t\t\tdocument.addEventListener('touchmove', function (e) {\n\t\t\t\ttouchobj = e.changedTouches[0];\n\t\t\t\tdistX = touchobj.pageX - startX;\n\t\t\t\tisMoved = true;\n\n\t\t\t\tif (startX <= startTouchPosition) {\n\t\t\t\t\tthat.element.style.webkitTransitionDuration = '0s';\n\t\t\t\t\tthat.element.style.transitionDuration = '0s';\n\t\t\t\t\tif (distX >= clientWidth) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (that.options.overlay) that.overlayEl.style.opacity = (distX * 0.002).toFixed(1);\n\t\t\t\t\t\tsetTransform(that.element, 'translateX(' + distX + 'px)');\n\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\tsetTransform(that.page, 'translateX(' + distX + 'px)');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (that.element.classList.contains('side-menu--visible') && distX <= 0) {\n\t\t\t\t\tthat.element.style.webkitTransitionDuration = '0s';\n\t\t\t\t\tthat.element.style.transitionDuration = '0s';\n\t\t\t\t\tsetTransform(that.element, 'translateX(' + (clientWidth + distX) + 'px)');\n\t\t\t\t\tif (that.options.overlay) that.overlayEl.style.opacity = ((clientWidth + distX) * 0.002).toFixed(1);\n\n\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\tsetTransform(that.page, 'translateX(' + (clientWidth + distX) + 'px)');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, false);\n\n\t\t\tdocument.addEventListener('touchend', function (e) {\n\t\t\t\tif (isMoved) {\n\t\t\t\t\tif (startX <= startTouchPosition) {\n\t\t\t\t\t\tthat.element.style.webkitTransitionDuration = transitionDuration;\n\t\t\t\t\t\tthat.element.style.transitionDuration = transitionDuration;\n\t\t\t\t\t\tif (distX > 100) {\n\t\t\t\t\t\t\tthat.overlayEl.removeAttribute('style');\n\t\t\t\t\t\t\tthat.element.removeAttribute('style');\n\t\t\t\t\t\t\tthat.element.classList.add('side-menu--visible');\n\t\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\t\tthat.page.classList.add('side-menu--elastic');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.overlayEl.remove();\n\t\t\t\t\t\t\tthat.overlayEl = null;\n\t\t\t\t\t\t\tsetTransform(that.element, 'translateX(0)');\n\t\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\t\tsetTransform(that.page, 'translateX(0)');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\tthat.element.removeAttribute('style');\n\t\t\t\t\t\t\tthat.page.removeAttribute('style');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (that.element.classList.contains('side-menu--visible')) {\n\t\t\t\t\t\tthat.element.style.webkitTransitionDuration = transitionDuration;\n\t\t\t\t\t\tthat.element.style.transitionDuration = transitionDuration;\n\t\t\t\t\t\tif (distX < -100) {\n\t\t\t\t\t\t\tif (that.options.overlay) {\n\t\t\t\t\t\t\t\tthat.overlayEl.remove();\n\t\t\t\t\t\t\t\tthat.overlayEl = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthat.element.removeAttribute('style');\n\t\t\t\t\t\t\tthat.element.classList.remove('side-menu--visible');\n\n\t\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\t\tthat.page.removeAttribute('style');\n\t\t\t\t\t\t\t\tthat.page.classList.remove('side-menu--elastic');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthat.element.removeAttribute('style');\n\t\t\t\t\t\t\tthat.element.classList.add('side-menu--visible');\n\n\t\t\t\t\t\t\tif (that.options.type === 'elastic') {\n\t\t\t\t\t\t\t\tthat.page.removeAttribute('style');\n\t\t\t\t\t\t\t\tthat.page.classList.add('side-menu--elastic');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdistX = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tisMoved = false;\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\t}\n\n\t_createClass(SideMenu, [{\n\t\tkey: 'toggle',\n\t\tvalue: function toggle() {\n\n\t\t\tif (!this.element.classList.contains('side-menu--visible')) {\n\t\t\t\tif (!this.overlayEl) {\n\t\t\t\t\tthis.overlayEl = createOverlayElement.call(this);\n\t\t\t\t\tlistenCLoseSlideMenu.call(this, this.overlayEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.type === 'elastic') {\n\t\t\t\t\tthis.page.classList.add('side-menu--elastic');\n\t\t\t\t}\n\n\t\t\t\tthis.element.classList.add('side-menu--visible');\n\t\t\t} else {\n\n\t\t\t\tif (this.options.type === 'elastic') {\n\t\t\t\t\tthis.page.classList.remove('side-menu--elastic');\n\t\t\t\t}\n\t\t\t\tthis.element.classList.remove('side-menu--visible');\n\t\t\t\tremoveListenCLoseSlideMenu.call(this, this.overlayEl);\n\t\t\t\tthis.overlayEl.remove();\n\t\t\t\tthis.overlayEl = null;\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn SideMenu;\n})();\n\nexports['default'] = SideMenu;\nmodule.exports = exports['default'];\n\n},{\"../utils/utils\":15}],11:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n    value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar _utilsDom = require('../utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar TabBar = function TabBar(element) {\n    _classCallCheck(this, TabBar);\n\n    var contentsTabs = element.querySelectorAll('.content');\n    if (contentsTabs) {\n        (0, _utilsDom2['default'])(contentsTabs).addClass('tab-hide').addClass('content--tab');\n\n        var activeTab = element.querySelector('.active');\n        if (activeTab) {\n            var contentId = activeTab.getAttribute('ref') || activeTab.getAttribute('data-tab');\n            (0, _utilsDom2['default'])(element.querySelectorAll(contentId)).removeClass('tab-hide').addClass('tab-show');\n        }\n    }\n\n    (0, _utilsDom2['default'])('.tab-bar__item', element).on('click', function (e, el) {\n        var contentId = el.getAttribute('ref') || el.getAttribute('data-tab');\n        var content = (0, _utilsDom2['default'])(element.querySelectorAll(contentId));\n        (0, _utilsDom2['default'])(contentsTabs).removeClass('tab-show').addClass('tab-hide');\n        content.removeClass('tab-hide').addClass('tab-show');\n        (0, _utilsDom2['default'])(element.querySelectorAll('.tab-bar__item')).removeClass('active');\n        el.classList.add('active');\n    });\n};\n\nexports['default'] = TabBar;\nmodule.exports = exports['default'];\n\n},{\"../utils/dom\":14}],12:[function(require,module,exports){\n'use strict';\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utilsDom = require('./utils/dom');\n\nvar _utilsDom2 = _interopRequireDefault(_utilsDom);\n\nvar _componentsSideMenu = require('./components/side-menu');\n\nvar _componentsSideMenu2 = _interopRequireDefault(_componentsSideMenu);\n\nvar _componentsPullToRefresh = require('./components/pull-to-refresh');\n\nvar _componentsPullToRefresh2 = _interopRequireDefault(_componentsPullToRefresh);\n\nvar _componentsButton = require('./components/button');\n\nvar _componentsButton2 = _interopRequireDefault(_componentsButton);\n\nvar _componentsDropdownMenu = require('./components/dropdown-menu');\n\nvar _componentsDropdownMenu2 = _interopRequireDefault(_componentsDropdownMenu);\n\nvar _componentsNavigation = require('./components/navigation');\n\nvar _componentsNavigation2 = _interopRequireDefault(_componentsNavigation);\n\nvar _componentsDialog = require('./components/dialog');\n\nvar _componentsDialog2 = _interopRequireDefault(_componentsDialog);\n\nvar _componentsLoading = require('./components/loading');\n\nvar _componentsLoading2 = _interopRequireDefault(_componentsLoading);\n\nvar _componentsNotification = require('./components/notification');\n\nvar _componentsNotification2 = _interopRequireDefault(_componentsNotification);\n\nvar _componentsTabBarJs = require('./components/tab-bar.js');\n\nvar _componentsTabBarJs2 = _interopRequireDefault(_componentsTabBarJs);\n\nvar _componentsInfiniteScrollJs = require('./components/infinite-scroll.js');\n\nvar _componentsInfiniteScrollJs2 = _interopRequireDefault(_componentsInfiniteScrollJs);\n\nvar _componentsShrinkHeaderJs = require('./components/shrink-header.js');\n\nvar _componentsShrinkHeaderJs2 = _interopRequireDefault(_componentsShrinkHeaderJs);\n\nvar phonepack = function phonepack(selector) {\n\treturn (0, _utilsDom2['default'])(selector);\n};\n\nphonepack.SideMenu = _componentsSideMenu2['default'];\nphonepack.PullToRefresh = _componentsPullToRefresh2['default'];\nphonepack.Navigation = _componentsNavigation2['default'];\nphonepack.DropDownMenu = _componentsDropdownMenu2['default'];\nphonepack.Dialog = _componentsDialog2['default'];\nphonepack.Loading = _componentsLoading2['default'];\nphonepack.Notification = _componentsNotification2['default'];\nphonepack.TabBar = _componentsTabBarJs2['default'];\nphonepack.InfiniteScroll = _componentsInfiniteScrollJs2['default'];\nphonepack.shrinkHeader = _componentsShrinkHeaderJs2['default'];\n\nphonepack.ready = function (callback) {\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\tcallback();\n\t});\n};\n\nmodule.exports = phonepack;\n\n},{\"./components/button\":1,\"./components/dialog\":2,\"./components/dropdown-menu\":3,\"./components/infinite-scroll.js\":4,\"./components/loading\":5,\"./components/navigation\":6,\"./components/notification\":7,\"./components/pull-to-refresh\":8,\"./components/shrink-header.js\":9,\"./components/side-menu\":10,\"./components/tab-bar.js\":11,\"./utils/dom\":14}],13:[function(require,module,exports){\n/*! Hammer.JS - v2.0.4 - 2014-09-28\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2014 Jorik Tangelder;\n * Licensed under the MIT license */\n'use strict';\n\n(function (window, document, exportName, undefined) {\n    'use strict';\n\n    var VENDOR_PREFIXES = ['', 'webkit', 'moz', 'MS', 'ms', 'o'];\n    var TEST_ELEMENT = document.createElement('div');\n\n    var TYPE_FUNCTION = 'function';\n\n    var round = Math.round;\n    var abs = Math.abs;\n    var now = Date.now;\n\n    /**\n     * set a timeout with a given scope\n     * @param {Function} fn\n     * @param {Number} timeout\n     * @param {Object} context\n     * @returns {number}\n     */\n    function setTimeoutContext(fn, timeout, context) {\n        return setTimeout(bindFn(fn, context), timeout);\n    }\n\n    /**\n     * if the argument is an array, we want to execute the fn on each entry\n     * if it aint an array we don't want to do a thing.\n     * this is used by all the methods that accept a single and array argument.\n     * @param {*|Array} arg\n     * @param {String} fn\n     * @param {Object} [context]\n     * @returns {Boolean}\n     */\n    function invokeArrayArg(arg, fn, context) {\n        if (Array.isArray(arg)) {\n            each(arg, context[fn], context);\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * walk objects and arrays\n     * @param {Object} obj\n     * @param {Function} iterator\n     * @param {Object} context\n     */\n    function each(obj, iterator, context) {\n        var i;\n\n        if (!obj) {\n            return;\n        }\n\n        if (obj.forEach) {\n            obj.forEach(iterator, context);\n        } else if (obj.length !== undefined) {\n            i = 0;\n            while (i < obj.length) {\n                iterator.call(context, obj[i], i, obj);\n                i++;\n            }\n        } else {\n            for (i in obj) {\n                obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n            }\n        }\n    }\n\n    /**\n     * extend object.\n     * means that properties in dest will be overwritten by the ones in src.\n     * @param {Object} dest\n     * @param {Object} src\n     * @param {Boolean} [merge]\n     * @returns {Object} dest\n     */\n    function extend(dest, src, merge) {\n        var keys = Object.keys(src);\n        var i = 0;\n        while (i < keys.length) {\n            if (!merge || merge && dest[keys[i]] === undefined) {\n                dest[keys[i]] = src[keys[i]];\n            }\n            i++;\n        }\n        return dest;\n    }\n\n    /**\n     * merge the values from src in the dest.\n     * means that properties that exist in dest will not be overwritten by src\n     * @param {Object} dest\n     * @param {Object} src\n     * @returns {Object} dest\n     */\n    function merge(dest, src) {\n        return extend(dest, src, true);\n    }\n\n    /**\n     * simple class inheritance\n     * @param {Function} child\n     * @param {Function} base\n     * @param {Object} [properties]\n     */\n    function inherit(child, base, properties) {\n        var baseP = base.prototype,\n            childP;\n\n        childP = child.prototype = Object.create(baseP);\n        childP.constructor = child;\n        childP._super = baseP;\n\n        if (properties) {\n            extend(childP, properties);\n        }\n    }\n\n    /**\n     * simple function bind\n     * @param {Function} fn\n     * @param {Object} context\n     * @returns {Function}\n     */\n    function bindFn(fn, context) {\n        return function boundFn() {\n            return fn.apply(context, arguments);\n        };\n    }\n\n    /**\n     * let a boolean value also be a function that must return a boolean\n     * this first item in args will be used as the context\n     * @param {Boolean|Function} val\n     * @param {Array} [args]\n     * @returns {Boolean}\n     */\n    function boolOrFn(val, args) {\n        if (typeof val == TYPE_FUNCTION) {\n            return val.apply(args ? args[0] || undefined : undefined, args);\n        }\n        return val;\n    }\n\n    /**\n     * use the val2 when val1 is undefined\n     * @param {*} val1\n     * @param {*} val2\n     * @returns {*}\n     */\n    function ifUndefined(val1, val2) {\n        return val1 === undefined ? val2 : val1;\n    }\n\n    /**\n     * addEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function addEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.addEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * removeEventListener with multiple events at once\n     * @param {EventTarget} target\n     * @param {String} types\n     * @param {Function} handler\n     */\n    function removeEventListeners(target, types, handler) {\n        each(splitStr(types), function (type) {\n            target.removeEventListener(type, handler, false);\n        });\n    }\n\n    /**\n     * find if a node is in the given parent\n     * @method hasParent\n     * @param {HTMLElement} node\n     * @param {HTMLElement} parent\n     * @return {Boolean} found\n     */\n    function hasParent(node, parent) {\n        while (node) {\n            if (node == parent) {\n                return true;\n            }\n            node = node.parentNode;\n        }\n        return false;\n    }\n\n    /**\n     * small indexOf wrapper\n     * @param {String} str\n     * @param {String} find\n     * @returns {Boolean} found\n     */\n    function inStr(str, find) {\n        return str.indexOf(find) > -1;\n    }\n\n    /**\n     * split string on whitespace\n     * @param {String} str\n     * @returns {Array} words\n     */\n    function splitStr(str) {\n        return str.trim().split(/\\s+/g);\n    }\n\n    /**\n     * find if a array contains the object using indexOf or a simple polyFill\n     * @param {Array} src\n     * @param {String} find\n     * @param {String} [findByKey]\n     * @return {Boolean|Number} false when not found, or the index\n     */\n    function inArray(src, find, findByKey) {\n        if (src.indexOf && !findByKey) {\n            return src.indexOf(find);\n        } else {\n            var i = 0;\n            while (i < src.length) {\n                if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n                    return i;\n                }\n                i++;\n            }\n            return -1;\n        }\n    }\n\n    /**\n     * convert array-like objects to real arrays\n     * @param {Object} obj\n     * @returns {Array}\n     */\n    function toArray(obj) {\n        return Array.prototype.slice.call(obj, 0);\n    }\n\n    /**\n     * unique array with objects based on a key (like 'id') or just by the array's value\n     * @param {Array} src [{id:1},{id:2},{id:1}]\n     * @param {String} [key]\n     * @param {Boolean} [sort=False]\n     * @returns {Array} [{id:1},{id:2}]\n     */\n    function uniqueArray(src, key, sort) {\n        var results = [];\n        var values = [];\n        var i = 0;\n\n        while (i < src.length) {\n            var val = key ? src[i][key] : src[i];\n            if (inArray(values, val) < 0) {\n                results.push(src[i]);\n            }\n            values[i] = val;\n            i++;\n        }\n\n        if (sort) {\n            if (!key) {\n                results = results.sort();\n            } else {\n                results = results.sort(function sortUniqueArray(a, b) {\n                    return a[key] > b[key];\n                });\n            }\n        }\n\n        return results;\n    }\n\n    /**\n     * get the prefixed property\n     * @param {Object} obj\n     * @param {String} property\n     * @returns {String|Undefined} prefixed\n     */\n    function prefixed(obj, property) {\n        var prefix, prop;\n        var camelProp = property[0].toUpperCase() + property.slice(1);\n\n        var i = 0;\n        while (i < VENDOR_PREFIXES.length) {\n            prefix = VENDOR_PREFIXES[i];\n            prop = prefix ? prefix + camelProp : property;\n\n            if (prop in obj) {\n                return prop;\n            }\n            i++;\n        }\n        return undefined;\n    }\n\n    /**\n     * get a unique id\n     * @returns {number} uniqueId\n     */\n    var _uniqueId = 1;\n    function uniqueId() {\n        return _uniqueId++;\n    }\n\n    /**\n     * get the window object of an element\n     * @param {HTMLElement} element\n     * @returns {DocumentView|Window}\n     */\n    function getWindowForElement(element) {\n        var doc = element.ownerDocument;\n        return doc.defaultView || doc.parentWindow;\n    }\n\n    var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\n    var SUPPORT_TOUCH = ('ontouchstart' in window);\n    var SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\n    var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\n    var INPUT_TYPE_TOUCH = 'touch';\n    var INPUT_TYPE_PEN = 'pen';\n    var INPUT_TYPE_MOUSE = 'mouse';\n    var INPUT_TYPE_KINECT = 'kinect';\n\n    var COMPUTE_INTERVAL = 25;\n\n    var INPUT_START = 1;\n    var INPUT_MOVE = 2;\n    var INPUT_END = 4;\n    var INPUT_CANCEL = 8;\n\n    var DIRECTION_NONE = 1;\n    var DIRECTION_LEFT = 2;\n    var DIRECTION_RIGHT = 4;\n    var DIRECTION_UP = 8;\n    var DIRECTION_DOWN = 16;\n\n    var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n    var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n    var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\n    var PROPS_XY = ['x', 'y'];\n    var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n    /**\n     * create new input type manager\n     * @param {Manager} manager\n     * @param {Function} callback\n     * @returns {Input}\n     * @constructor\n     */\n    function Input(manager, callback) {\n        var self = this;\n        this.manager = manager;\n        this.callback = callback;\n        this.element = manager.element;\n        this.target = manager.options.inputTarget;\n\n        // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n        // so when disabled the input events are completely bypassed.\n        this.domHandler = function (ev) {\n            if (boolOrFn(manager.options.enable, [manager])) {\n                self.handler(ev);\n            }\n        };\n\n        this.init();\n    }\n\n    Input.prototype = {\n        /**\n         * should handle the inputEvent data and trigger the callback\n         * @virtual\n         */\n        handler: function handler() {},\n\n        /**\n         * bind the events\n         */\n        init: function init() {\n            this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        },\n\n        /**\n         * unbind the events\n         */\n        destroy: function destroy() {\n            this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n            this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n            this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n        }\n    };\n\n    /**\n     * create new input type manager\n     * called by the Manager constructor\n     * @param {Hammer} manager\n     * @returns {Input}\n     */\n    function createInputInstance(manager) {\n        var Type;\n        var inputClass = manager.options.inputClass;\n\n        if (inputClass) {\n            Type = inputClass;\n        } else if (SUPPORT_POINTER_EVENTS) {\n            Type = PointerEventInput;\n        } else if (SUPPORT_ONLY_TOUCH) {\n            Type = TouchInput;\n        } else if (!SUPPORT_TOUCH) {\n            Type = MouseInput;\n        } else {\n            Type = TouchMouseInput;\n        }\n        return new Type(manager, inputHandler);\n    }\n\n    /**\n     * handle input events\n     * @param {Manager} manager\n     * @param {String} eventType\n     * @param {Object} input\n     */\n    function inputHandler(manager, eventType, input) {\n        var pointersLen = input.pointers.length;\n        var changedPointersLen = input.changedPointers.length;\n        var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n        var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n\n        input.isFirst = !!isFirst;\n        input.isFinal = !!isFinal;\n\n        if (isFirst) {\n            manager.session = {};\n        }\n\n        // source event is the normalized value of the domEvents\n        // like 'touchstart, mouseup, pointerdown'\n        input.eventType = eventType;\n\n        // compute scale, rotation etc\n        computeInputData(manager, input);\n\n        // emit secret event\n        manager.emit('hammer.input', input);\n\n        manager.recognize(input);\n        manager.session.prevInput = input;\n    }\n\n    /**\n     * extend the data with some usable properties like scale, rotate, velocity etc\n     * @param {Object} manager\n     * @param {Object} input\n     */\n    function computeInputData(manager, input) {\n        var session = manager.session;\n        var pointers = input.pointers;\n        var pointersLength = pointers.length;\n\n        // store the first input to calculate the distance and direction\n        if (!session.firstInput) {\n            session.firstInput = simpleCloneInputData(input);\n        }\n\n        // to compute scale and rotation we need to store the multiple touches\n        if (pointersLength > 1 && !session.firstMultiple) {\n            session.firstMultiple = simpleCloneInputData(input);\n        } else if (pointersLength === 1) {\n            session.firstMultiple = false;\n        }\n\n        var firstInput = session.firstInput;\n        var firstMultiple = session.firstMultiple;\n        var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n        var center = input.center = getCenter(pointers);\n        input.timeStamp = now();\n        input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n        input.angle = getAngle(offsetCenter, center);\n        input.distance = getDistance(offsetCenter, center);\n\n        computeDeltaXY(session, input);\n        input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n        input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n        input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n        computeIntervalInputData(session, input);\n\n        // find the correct target\n        var target = manager.element;\n        if (hasParent(input.srcEvent.target, target)) {\n            target = input.srcEvent.target;\n        }\n        input.target = target;\n    }\n\n    function computeDeltaXY(session, input) {\n        var center = input.center;\n        var offset = session.offsetDelta || {};\n        var prevDelta = session.prevDelta || {};\n        var prevInput = session.prevInput || {};\n\n        if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n            prevDelta = session.prevDelta = {\n                x: prevInput.deltaX || 0,\n                y: prevInput.deltaY || 0\n            };\n\n            offset = session.offsetDelta = {\n                x: center.x,\n                y: center.y\n            };\n        }\n\n        input.deltaX = prevDelta.x + (center.x - offset.x);\n        input.deltaY = prevDelta.y + (center.y - offset.y);\n    }\n\n    /**\n     * velocity is calculated every x ms\n     * @param {Object} session\n     * @param {Object} input\n     */\n    function computeIntervalInputData(session, input) {\n        var last = session.lastInterval || input,\n            deltaTime = input.timeStamp - last.timeStamp,\n            velocity,\n            velocityX,\n            velocityY,\n            direction;\n\n        if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n            var deltaX = last.deltaX - input.deltaX;\n            var deltaY = last.deltaY - input.deltaY;\n\n            var v = getVelocity(deltaTime, deltaX, deltaY);\n            velocityX = v.x;\n            velocityY = v.y;\n            velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n            direction = getDirection(deltaX, deltaY);\n\n            session.lastInterval = input;\n        } else {\n            // use latest velocity info if it doesn't overtake a minimum period\n            velocity = last.velocity;\n            velocityX = last.velocityX;\n            velocityY = last.velocityY;\n            direction = last.direction;\n        }\n\n        input.velocity = velocity;\n        input.velocityX = velocityX;\n        input.velocityY = velocityY;\n        input.direction = direction;\n    }\n\n    /**\n     * create a simple clone from the input used for storage of firstInput and firstMultiple\n     * @param {Object} input\n     * @returns {Object} clonedInputData\n     */\n    function simpleCloneInputData(input) {\n        // make a simple copy of the pointers because we will get a reference if we don't\n        // we only need clientXY for the calculations\n        var pointers = [];\n        var i = 0;\n        while (i < input.pointers.length) {\n            pointers[i] = {\n                clientX: round(input.pointers[i].clientX),\n                clientY: round(input.pointers[i].clientY)\n            };\n            i++;\n        }\n\n        return {\n            timeStamp: now(),\n            pointers: pointers,\n            center: getCenter(pointers),\n            deltaX: input.deltaX,\n            deltaY: input.deltaY\n        };\n    }\n\n    /**\n     * get the center of all the pointers\n     * @param {Array} pointers\n     * @return {Object} center contains `x` and `y` properties\n     */\n    function getCenter(pointers) {\n        var pointersLength = pointers.length;\n\n        // no need to loop when only one touch\n        if (pointersLength === 1) {\n            return {\n                x: round(pointers[0].clientX),\n                y: round(pointers[0].clientY)\n            };\n        }\n\n        var x = 0,\n            y = 0,\n            i = 0;\n        while (i < pointersLength) {\n            x += pointers[i].clientX;\n            y += pointers[i].clientY;\n            i++;\n        }\n\n        return {\n            x: round(x / pointersLength),\n            y: round(y / pointersLength)\n        };\n    }\n\n    /**\n     * calculate the velocity between two points. unit is in px per ms.\n     * @param {Number} deltaTime\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Object} velocity `x` and `y`\n     */\n    function getVelocity(deltaTime, x, y) {\n        return {\n            x: x / deltaTime || 0,\n            y: y / deltaTime || 0\n        };\n    }\n\n    /**\n     * get the direction between two points\n     * @param {Number} x\n     * @param {Number} y\n     * @return {Number} direction\n     */\n    function getDirection(x, y) {\n        if (x === y) {\n            return DIRECTION_NONE;\n        }\n\n        if (abs(x) >= abs(y)) {\n            return x > 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        }\n        return y > 0 ? DIRECTION_UP : DIRECTION_DOWN;\n    }\n\n    /**\n     * calculate the absolute distance between two points\n     * @param {Object} p1 {x, y}\n     * @param {Object} p2 {x, y}\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} distance\n     */\n    function getDistance(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n\n        return Math.sqrt(x * x + y * y);\n    }\n\n    /**\n     * calculate the angle between two coordinates\n     * @param {Object} p1\n     * @param {Object} p2\n     * @param {Array} [props] containing x and y keys\n     * @return {Number} angle\n     */\n    function getAngle(p1, p2, props) {\n        if (!props) {\n            props = PROPS_XY;\n        }\n        var x = p2[props[0]] - p1[props[0]],\n            y = p2[props[1]] - p1[props[1]];\n        return Math.atan2(y, x) * 180 / Math.PI;\n    }\n\n    /**\n     * calculate the rotation degrees between two pointersets\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} rotation\n     */\n    function getRotation(start, end) {\n        return getAngle(end[1], end[0], PROPS_CLIENT_XY) - getAngle(start[1], start[0], PROPS_CLIENT_XY);\n    }\n\n    /**\n     * calculate the scale factor between two pointersets\n     * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n     * @param {Array} start array of pointers\n     * @param {Array} end array of pointers\n     * @return {Number} scale\n     */\n    function getScale(start, end) {\n        return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n    }\n\n    var MOUSE_INPUT_MAP = {\n        mousedown: INPUT_START,\n        mousemove: INPUT_MOVE,\n        mouseup: INPUT_END\n    };\n\n    var MOUSE_ELEMENT_EVENTS = 'mousedown';\n    var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n    /**\n     * Mouse events input\n     * @constructor\n     * @extends Input\n     */\n    function MouseInput() {\n        this.evEl = MOUSE_ELEMENT_EVENTS;\n        this.evWin = MOUSE_WINDOW_EVENTS;\n\n        this.allow = true; // used by Input.TouchMouse to disable mouse events\n        this.pressed = false; // mousedown state\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(MouseInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function MEhandler(ev) {\n            var eventType = MOUSE_INPUT_MAP[ev.type];\n\n            // on start we want to have the left mouse button down\n            if (eventType & INPUT_START && ev.button === 0) {\n                this.pressed = true;\n            }\n\n            if (eventType & INPUT_MOVE && ev.which !== 1) {\n                eventType = INPUT_END;\n            }\n\n            // mouse must be down, and mouse events are allowed (see the TouchMouse input)\n            if (!this.pressed || !this.allow) {\n                return;\n            }\n\n            if (eventType & INPUT_END) {\n                this.pressed = false;\n            }\n\n            this.callback(this.manager, eventType, {\n                pointers: [ev],\n                changedPointers: [ev],\n                pointerType: INPUT_TYPE_MOUSE,\n                srcEvent: ev\n            });\n        }\n    });\n\n    var POINTER_INPUT_MAP = {\n        pointerdown: INPUT_START,\n        pointermove: INPUT_MOVE,\n        pointerup: INPUT_END,\n        pointercancel: INPUT_CANCEL,\n        pointerout: INPUT_CANCEL\n    };\n\n    // in IE10 the pointer types is defined as an enum\n    var IE10_POINTER_TYPE_ENUM = {\n        2: INPUT_TYPE_TOUCH,\n        3: INPUT_TYPE_PEN,\n        4: INPUT_TYPE_MOUSE,\n        5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n    };\n\n    var POINTER_ELEMENT_EVENTS = 'pointerdown';\n    var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n    // IE10 has prefixed support, and case-sensitive\n    if (window.MSPointerEvent) {\n        POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n        POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n    }\n\n    /**\n     * Pointer events input\n     * @constructor\n     * @extends Input\n     */\n    function PointerEventInput() {\n        this.evEl = POINTER_ELEMENT_EVENTS;\n        this.evWin = POINTER_WINDOW_EVENTS;\n\n        Input.apply(this, arguments);\n\n        this.store = this.manager.session.pointerEvents = [];\n    }\n\n    inherit(PointerEventInput, Input, {\n        /**\n         * handle mouse events\n         * @param {Object} ev\n         */\n        handler: function PEhandler(ev) {\n            var store = this.store;\n            var removePointer = false;\n\n            var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n            var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n            var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n            var isTouch = pointerType == INPUT_TYPE_TOUCH;\n\n            // get index of the event in the store\n            var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n            // start and mouse must be down\n            if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n                if (storeIndex < 0) {\n                    store.push(ev);\n                    storeIndex = store.length - 1;\n                }\n            } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n                removePointer = true;\n            }\n\n            // it not found, so the pointer hasn't been down (so it's probably a hover)\n            if (storeIndex < 0) {\n                return;\n            }\n\n            // update the event in the store\n            store[storeIndex] = ev;\n\n            this.callback(this.manager, eventType, {\n                pointers: store,\n                changedPointers: [ev],\n                pointerType: pointerType,\n                srcEvent: ev\n            });\n\n            if (removePointer) {\n                // remove from the store\n                store.splice(storeIndex, 1);\n            }\n        }\n    });\n\n    var SINGLE_TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n    var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Touch events input\n     * @constructor\n     * @extends Input\n     */\n    function SingleTouchInput() {\n        this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n        this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n        this.started = false;\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(SingleTouchInput, Input, {\n        handler: function TEhandler(ev) {\n            var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n            // should we handle the touch events?\n            if (type === INPUT_START) {\n                this.started = true;\n            }\n\n            if (!this.started) {\n                return;\n            }\n\n            var touches = normalizeSingleTouches.call(this, ev, type);\n\n            // when done, reset the started state\n            if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n                this.started = false;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function normalizeSingleTouches(ev, type) {\n        var all = toArray(ev.touches);\n        var changed = toArray(ev.changedTouches);\n\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            all = uniqueArray(all.concat(changed), 'identifier', true);\n        }\n\n        return [all, changed];\n    }\n\n    var TOUCH_INPUT_MAP = {\n        touchstart: INPUT_START,\n        touchmove: INPUT_MOVE,\n        touchend: INPUT_END,\n        touchcancel: INPUT_CANCEL\n    };\n\n    var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n    /**\n     * Multi-user touch events input\n     * @constructor\n     * @extends Input\n     */\n    function TouchInput() {\n        this.evTarget = TOUCH_TARGET_EVENTS;\n        this.targetIds = {};\n\n        Input.apply(this, arguments);\n    }\n\n    inherit(TouchInput, Input, {\n        handler: function MTEhandler(ev) {\n            var type = TOUCH_INPUT_MAP[ev.type];\n            var touches = getTouches.call(this, ev, type);\n            if (!touches) {\n                return;\n            }\n\n            this.callback(this.manager, type, {\n                pointers: touches[0],\n                changedPointers: touches[1],\n                pointerType: INPUT_TYPE_TOUCH,\n                srcEvent: ev\n            });\n        }\n    });\n\n    /**\n     * @this {TouchInput}\n     * @param {Object} ev\n     * @param {Number} type flag\n     * @returns {undefined|Array} [all, changed]\n     */\n    function getTouches(ev, type) {\n        var allTouches = toArray(ev.touches);\n        var targetIds = this.targetIds;\n\n        // when there is only one touch, the process can be simplified\n        if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n            targetIds[allTouches[0].identifier] = true;\n            return [allTouches, allTouches];\n        }\n\n        var i,\n            targetTouches,\n            changedTouches = toArray(ev.changedTouches),\n            changedTargetTouches = [],\n            target = this.target;\n\n        // get target touches from touches\n        targetTouches = allTouches.filter(function (touch) {\n            return hasParent(touch.target, target);\n        });\n\n        // collect touches\n        if (type === INPUT_START) {\n            i = 0;\n            while (i < targetTouches.length) {\n                targetIds[targetTouches[i].identifier] = true;\n                i++;\n            }\n        }\n\n        // filter changed touches to only contain touches that exist in the collected target ids\n        i = 0;\n        while (i < changedTouches.length) {\n            if (targetIds[changedTouches[i].identifier]) {\n                changedTargetTouches.push(changedTouches[i]);\n            }\n\n            // cleanup removed touches\n            if (type & (INPUT_END | INPUT_CANCEL)) {\n                delete targetIds[changedTouches[i].identifier];\n            }\n            i++;\n        }\n\n        if (!changedTargetTouches.length) {\n            return;\n        }\n\n        return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n    }\n\n    /**\n     * Combined touch and mouse input\n     *\n     * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n     * This because touch devices also emit mouse events while doing a touch.\n     *\n     * @constructor\n     * @extends Input\n     */\n    function TouchMouseInput() {\n        Input.apply(this, arguments);\n\n        var handler = bindFn(this.handler, this);\n        this.touch = new TouchInput(this.manager, handler);\n        this.mouse = new MouseInput(this.manager, handler);\n    }\n\n    inherit(TouchMouseInput, Input, {\n        /**\n         * handle mouse and touch events\n         * @param {Hammer} manager\n         * @param {String} inputEvent\n         * @param {Object} inputData\n         */\n        handler: function TMEhandler(manager, inputEvent, inputData) {\n            var isTouch = inputData.pointerType == INPUT_TYPE_TOUCH,\n                isMouse = inputData.pointerType == INPUT_TYPE_MOUSE;\n\n            // when we're in a touch event, so  block all upcoming mouse events\n            // most mobile browser also emit mouseevents, right after touchstart\n            if (isTouch) {\n                this.mouse.allow = false;\n            } else if (isMouse && !this.mouse.allow) {\n                return;\n            }\n\n            // reset the allowMouse when we're done\n            if (inputEvent & (INPUT_END | INPUT_CANCEL)) {\n                this.mouse.allow = true;\n            }\n\n            this.callback(manager, inputEvent, inputData);\n        },\n\n        /**\n         * remove the event listeners\n         */\n        destroy: function destroy() {\n            this.touch.destroy();\n            this.mouse.destroy();\n        }\n    });\n\n    var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n    var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n    // magical touchAction value\n    var TOUCH_ACTION_COMPUTE = 'compute';\n    var TOUCH_ACTION_AUTO = 'auto';\n    var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n    var TOUCH_ACTION_NONE = 'none';\n    var TOUCH_ACTION_PAN_X = 'pan-x';\n    var TOUCH_ACTION_PAN_Y = 'pan-y';\n\n    /**\n     * Touch Action\n     * sets the touchAction property or uses the js alternative\n     * @param {Manager} manager\n     * @param {String} value\n     * @constructor\n     */\n    function TouchAction(manager, value) {\n        this.manager = manager;\n        this.set(value);\n    }\n\n    TouchAction.prototype = {\n        /**\n         * set the touchAction value on the element or enable the polyfill\n         * @param {String} value\n         */\n        set: function set(value) {\n            // find out the touch-action by the event handlers\n            if (value == TOUCH_ACTION_COMPUTE) {\n                value = this.compute();\n            }\n\n            if (NATIVE_TOUCH_ACTION) {\n                this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n            }\n            this.actions = value.toLowerCase().trim();\n        },\n\n        /**\n         * just re-set the touchAction value\n         */\n        update: function update() {\n            this.set(this.manager.options.touchAction);\n        },\n\n        /**\n         * compute the value for the touchAction property based on the recognizer's settings\n         * @returns {String} value\n         */\n        compute: function compute() {\n            var actions = [];\n            each(this.manager.recognizers, function (recognizer) {\n                if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                    actions = actions.concat(recognizer.getTouchAction());\n                }\n            });\n            return cleanTouchActions(actions.join(' '));\n        },\n\n        /**\n         * this method is called on each input cycle and provides the preventing of the browser behavior\n         * @param {Object} input\n         */\n        preventDefaults: function preventDefaults(input) {\n            // not needed with native support for the touchAction property\n            if (NATIVE_TOUCH_ACTION) {\n                return;\n            }\n\n            var srcEvent = input.srcEvent;\n            var direction = input.offsetDirection;\n\n            // if the touch action did prevented once this session\n            if (this.manager.session.prevented) {\n                srcEvent.preventDefault();\n                return;\n            }\n\n            var actions = this.actions;\n            var hasNone = inStr(actions, TOUCH_ACTION_NONE);\n            var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n            var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n\n            if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n                return this.preventSrc(srcEvent);\n            }\n        },\n\n        /**\n         * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n         * @param {Object} srcEvent\n         */\n        preventSrc: function preventSrc(srcEvent) {\n            this.manager.session.prevented = true;\n            srcEvent.preventDefault();\n        }\n    };\n\n    /**\n     * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n     * @param {String} actions\n     * @returns {*}\n     */\n    function cleanTouchActions(actions) {\n        // none\n        if (inStr(actions, TOUCH_ACTION_NONE)) {\n            return TOUCH_ACTION_NONE;\n        }\n\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n        // pan-x and pan-y can be combined\n        if (hasPanX && hasPanY) {\n            return TOUCH_ACTION_PAN_X + ' ' + TOUCH_ACTION_PAN_Y;\n        }\n\n        // pan-x OR pan-y\n        if (hasPanX || hasPanY) {\n            return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n        }\n\n        // manipulation\n        if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n            return TOUCH_ACTION_MANIPULATION;\n        }\n\n        return TOUCH_ACTION_AUTO;\n    }\n\n    /**\n     * Recognizer flow explained; *\n     * All recognizers have the initial state of POSSIBLE when a input session starts.\n     * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n     * Example session for mouse-input: mousedown -> mousemove -> mouseup\n     *\n     * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n     * which determines with state it should be.\n     *\n     * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n     * POSSIBLE to give it another change on the next cycle.\n     *\n     *               Possible\n     *                  |\n     *            +-----+---------------+\n     *            |                     |\n     *      +-----+-----+               |\n     *      |           |               |\n     *   Failed      Cancelled          |\n     *                          +-------+------+\n     *                          |              |\n     *                      Recognized       Began\n     *                                         |\n     *                                      Changed\n     *                                         |\n     *                                  Ended/Recognized\n     */\n    var STATE_POSSIBLE = 1;\n    var STATE_BEGAN = 2;\n    var STATE_CHANGED = 4;\n    var STATE_ENDED = 8;\n    var STATE_RECOGNIZED = STATE_ENDED;\n    var STATE_CANCELLED = 16;\n    var STATE_FAILED = 32;\n\n    /**\n     * Recognizer\n     * Every recognizer needs to extend from this class.\n     * @constructor\n     * @param {Object} options\n     */\n    function Recognizer(options) {\n        this.id = uniqueId();\n\n        this.manager = null;\n        this.options = merge(options || {}, this.defaults);\n\n        // default is enable true\n        this.options.enable = ifUndefined(this.options.enable, true);\n\n        this.state = STATE_POSSIBLE;\n\n        this.simultaneous = {};\n        this.requireFail = [];\n    }\n\n    Recognizer.prototype = {\n        /**\n         * @virtual\n         * @type {Object}\n         */\n        defaults: {},\n\n        /**\n         * set options\n         * @param {Object} options\n         * @return {Recognizer}\n         */\n        set: function set(options) {\n            extend(this.options, options);\n\n            // also update the touchAction, in case something changed about the directions/enabled state\n            this.manager && this.manager.touchAction.update();\n            return this;\n        },\n\n        /**\n         * recognize simultaneous with an other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        recognizeWith: function recognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n                return this;\n            }\n\n            var simultaneous = this.simultaneous;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (!simultaneous[otherRecognizer.id]) {\n                simultaneous[otherRecognizer.id] = otherRecognizer;\n                otherRecognizer.recognizeWith(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRecognizeWith: function dropRecognizeWith(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            delete this.simultaneous[otherRecognizer.id];\n            return this;\n        },\n\n        /**\n         * recognizer can only run when an other is failing\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        requireFailure: function requireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n                return this;\n            }\n\n            var requireFail = this.requireFail;\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            if (inArray(requireFail, otherRecognizer) === -1) {\n                requireFail.push(otherRecognizer);\n                otherRecognizer.requireFailure(this);\n            }\n            return this;\n        },\n\n        /**\n         * drop the requireFailure link. it does not remove the link on the other recognizer.\n         * @param {Recognizer} otherRecognizer\n         * @returns {Recognizer} this\n         */\n        dropRequireFailure: function dropRequireFailure(otherRecognizer) {\n            if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n                return this;\n            }\n\n            otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n            var index = inArray(this.requireFail, otherRecognizer);\n            if (index > -1) {\n                this.requireFail.splice(index, 1);\n            }\n            return this;\n        },\n\n        /**\n         * has require failures boolean\n         * @returns {boolean}\n         */\n        hasRequireFailures: function hasRequireFailures() {\n            return this.requireFail.length > 0;\n        },\n\n        /**\n         * if the recognizer can recognize simultaneous with an other recognizer\n         * @param {Recognizer} otherRecognizer\n         * @returns {Boolean}\n         */\n        canRecognizeWith: function canRecognizeWith(otherRecognizer) {\n            return !!this.simultaneous[otherRecognizer.id];\n        },\n\n        /**\n         * You should use `tryEmit` instead of `emit` directly to check\n         * that all the needed recognizers has failed before emitting.\n         * @param {Object} input\n         */\n        emit: function emit(input) {\n            var self = this;\n            var state = this.state;\n\n            function emit(withState) {\n                self.manager.emit(self.options.event + (withState ? stateStr(state) : ''), input);\n            }\n\n            // 'panstart' and 'panmove'\n            if (state < STATE_ENDED) {\n                emit(true);\n            }\n\n            emit(); // simple 'eventName' events\n\n            // panend and pancancel\n            if (state >= STATE_ENDED) {\n                emit(true);\n            }\n        },\n\n        /**\n         * Check that all the require failure recognizers has failed,\n         * if true, it emits a gesture event,\n         * otherwise, setup the state to FAILED.\n         * @param {Object} input\n         */\n        tryEmit: function tryEmit(input) {\n            if (this.canEmit()) {\n                return this.emit(input);\n            }\n            // it's failing anyway\n            this.state = STATE_FAILED;\n        },\n\n        /**\n         * can we emit?\n         * @returns {boolean}\n         */\n        canEmit: function canEmit() {\n            var i = 0;\n            while (i < this.requireFail.length) {\n                if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                    return false;\n                }\n                i++;\n            }\n            return true;\n        },\n\n        /**\n         * update the recognizer\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            // make a new copy of the inputData\n            // so we can change the inputData without messing up the other recognizers\n            var inputDataClone = extend({}, inputData);\n\n            // is is enabled and allow recognizing?\n            if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n                this.reset();\n                this.state = STATE_FAILED;\n                return;\n            }\n\n            // reset when we've reached the end\n            if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n                this.state = STATE_POSSIBLE;\n            }\n\n            this.state = this.process(inputDataClone);\n\n            // the recognizer has recognized a gesture\n            // so trigger an event\n            if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n                this.tryEmit(inputDataClone);\n            }\n        },\n\n        /**\n         * return the state of the recognizer\n         * the actual recognizing happens in this method\n         * @virtual\n         * @param {Object} inputData\n         * @returns {Const} STATE\n         */\n        process: function process(inputData) {}, // jshint ignore:line\n\n        /**\n         * return the preferred touch-action\n         * @virtual\n         * @returns {Array}\n         */\n        getTouchAction: function getTouchAction() {},\n\n        /**\n         * called when the gesture isn't allowed to recognize\n         * like when another is being recognized or it is disabled\n         * @virtual\n         */\n        reset: function reset() {}\n    };\n\n    /**\n     * get a usable string, used as event postfix\n     * @param {Const} state\n     * @returns {String} state\n     */\n    function stateStr(state) {\n        if (state & STATE_CANCELLED) {\n            return 'cancel';\n        } else if (state & STATE_ENDED) {\n            return 'end';\n        } else if (state & STATE_CHANGED) {\n            return 'move';\n        } else if (state & STATE_BEGAN) {\n            return 'start';\n        }\n        return '';\n    }\n\n    /**\n     * direction cons to string\n     * @param {Const} direction\n     * @returns {String}\n     */\n    function directionStr(direction) {\n        if (direction == DIRECTION_DOWN) {\n            return 'down';\n        } else if (direction == DIRECTION_UP) {\n            return 'up';\n        } else if (direction == DIRECTION_LEFT) {\n            return 'left';\n        } else if (direction == DIRECTION_RIGHT) {\n            return 'right';\n        }\n        return '';\n    }\n\n    /**\n     * get a recognizer by name if it is bound to a manager\n     * @param {Recognizer|String} otherRecognizer\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer}\n     */\n    function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n        var manager = recognizer.manager;\n        if (manager) {\n            return manager.get(otherRecognizer);\n        }\n        return otherRecognizer;\n    }\n\n    /**\n     * This recognizer is just used as a base for the simple attribute recognizers.\n     * @constructor\n     * @extends Recognizer\n     */\n    function AttrRecognizer() {\n        Recognizer.apply(this, arguments);\n    }\n\n    inherit(AttrRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof AttrRecognizer\n         */\n        defaults: {\n            /**\n             * @type {Number}\n             * @default 1\n             */\n            pointers: 1\n        },\n\n        /**\n         * Used to check if it the recognizer receives valid input, like input.distance > 10.\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {Boolean} recognized\n         */\n        attrTest: function attrTest(input) {\n            var optionPointers = this.options.pointers;\n            return optionPointers === 0 || input.pointers.length === optionPointers;\n        },\n\n        /**\n         * Process the input and return the state for the recognizer\n         * @memberof AttrRecognizer\n         * @param {Object} input\n         * @returns {*} State\n         */\n        process: function process(input) {\n            var state = this.state;\n            var eventType = input.eventType;\n\n            var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n            var isValid = this.attrTest(input);\n\n            // on cancel input and we've recognized before, return STATE_CANCELLED\n            if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n                return state | STATE_CANCELLED;\n            } else if (isRecognized || isValid) {\n                if (eventType & INPUT_END) {\n                    return state | STATE_ENDED;\n                } else if (!(state & STATE_BEGAN)) {\n                    return STATE_BEGAN;\n                }\n                return state | STATE_CHANGED;\n            }\n            return STATE_FAILED;\n        }\n    });\n\n    /**\n     * Pan\n     * Recognized when the pointer is down and moved in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PanRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n\n        this.pX = null;\n        this.pY = null;\n    }\n\n    inherit(PanRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PanRecognizer\n         */\n        defaults: {\n            event: 'pan',\n            threshold: 10,\n            pointers: 1,\n            direction: DIRECTION_ALL\n        },\n\n        getTouchAction: function getTouchAction() {\n            var direction = this.options.direction;\n            var actions = [];\n            if (direction & DIRECTION_HORIZONTAL) {\n                actions.push(TOUCH_ACTION_PAN_Y);\n            }\n            if (direction & DIRECTION_VERTICAL) {\n                actions.push(TOUCH_ACTION_PAN_X);\n            }\n            return actions;\n        },\n\n        directionTest: function directionTest(input) {\n            var options = this.options;\n            var hasMoved = true;\n            var distance = input.distance;\n            var direction = input.direction;\n            var x = input.deltaX;\n            var y = input.deltaY;\n\n            // lock to axis?\n            if (!(direction & options.direction)) {\n                if (options.direction & DIRECTION_HORIZONTAL) {\n                    direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                    hasMoved = x != this.pX;\n                    distance = Math.abs(input.deltaX);\n                } else {\n                    direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n                    hasMoved = y != this.pY;\n                    distance = Math.abs(input.deltaY);\n                }\n            }\n            input.direction = direction;\n            return hasMoved && distance > options.threshold && direction & options.direction;\n        },\n\n        attrTest: function attrTest(input) {\n            return AttrRecognizer.prototype.attrTest.call(this, input) && (this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n        },\n\n        emit: function emit(input) {\n            this.pX = input.deltaX;\n            this.pY = input.deltaY;\n\n            var direction = directionStr(input.direction);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this._super.emit.call(this, input);\n        }\n    });\n\n    /**\n     * Pinch\n     * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function PinchRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(PinchRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'pinch',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n        },\n\n        emit: function emit(input) {\n            this._super.emit.call(this, input);\n            if (input.scale !== 1) {\n                var inOut = input.scale < 1 ? 'in' : 'out';\n                this.manager.emit(this.options.event + inOut, input);\n            }\n        }\n    });\n\n    /**\n     * Press\n     * Recognized when the pointer is down for x ms without any movement.\n     * @constructor\n     * @extends Recognizer\n     */\n    function PressRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        this._timer = null;\n        this._input = null;\n    }\n\n    inherit(PressRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PressRecognizer\n         */\n        defaults: {\n            event: 'press',\n            pointers: 1,\n            time: 500, // minimal time of the pointer to be pressed\n            threshold: 5 // a minimal movement is ok, but keep it low\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_AUTO];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTime = input.deltaTime > options.time;\n\n            this._input = input;\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n                this.reset();\n            } else if (input.eventType & INPUT_START) {\n                this.reset();\n                this._timer = setTimeoutContext(function () {\n                    this.state = STATE_RECOGNIZED;\n                    this.tryEmit();\n                }, options.time, this);\n            } else if (input.eventType & INPUT_END) {\n                return STATE_RECOGNIZED;\n            }\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit(input) {\n            if (this.state !== STATE_RECOGNIZED) {\n                return;\n            }\n\n            if (input && input.eventType & INPUT_END) {\n                this.manager.emit(this.options.event + 'up', input);\n            } else {\n                this._input.timeStamp = now();\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Rotate\n     * Recognized when two or more pointer are moving in a circular motion.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function RotateRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(RotateRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof RotateRecognizer\n         */\n        defaults: {\n            event: 'rotate',\n            threshold: 0,\n            pointers: 2\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_NONE];\n        },\n\n        attrTest: function attrTest(input) {\n            return this._super.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n        }\n    });\n\n    /**\n     * Swipe\n     * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n     * @constructor\n     * @extends AttrRecognizer\n     */\n    function SwipeRecognizer() {\n        AttrRecognizer.apply(this, arguments);\n    }\n\n    inherit(SwipeRecognizer, AttrRecognizer, {\n        /**\n         * @namespace\n         * @memberof SwipeRecognizer\n         */\n        defaults: {\n            event: 'swipe',\n            threshold: 10,\n            velocity: 0.65,\n            direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n            pointers: 1\n        },\n\n        getTouchAction: function getTouchAction() {\n            return PanRecognizer.prototype.getTouchAction.call(this);\n        },\n\n        attrTest: function attrTest(input) {\n            var direction = this.options.direction;\n            var velocity;\n\n            if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n                velocity = input.velocity;\n            } else if (direction & DIRECTION_HORIZONTAL) {\n                velocity = input.velocityX;\n            } else if (direction & DIRECTION_VERTICAL) {\n                velocity = input.velocityY;\n            }\n\n            return this._super.attrTest.call(this, input) && direction & input.direction && input.distance > this.options.threshold && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n        },\n\n        emit: function emit(input) {\n            var direction = directionStr(input.direction);\n            if (direction) {\n                this.manager.emit(this.options.event + direction, input);\n            }\n\n            this.manager.emit(this.options.event, input);\n        }\n    });\n\n    /**\n     * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n     * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n     * a single tap.\n     *\n     * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n     * multi-taps being recognized.\n     * @constructor\n     * @extends Recognizer\n     */\n    function TapRecognizer() {\n        Recognizer.apply(this, arguments);\n\n        // previous time and center,\n        // used for tap counting\n        this.pTime = false;\n        this.pCenter = false;\n\n        this._timer = null;\n        this._input = null;\n        this.count = 0;\n    }\n\n    inherit(TapRecognizer, Recognizer, {\n        /**\n         * @namespace\n         * @memberof PinchRecognizer\n         */\n        defaults: {\n            event: 'tap',\n            pointers: 1,\n            taps: 1,\n            interval: 300, // max time between the multi-tap taps\n            time: 250, // max time of the pointer to be down (like finger on the screen)\n            threshold: 2, // a minimal movement is ok, but keep it low\n            posThreshold: 10 // a multi-tap can be a bit off the initial position\n        },\n\n        getTouchAction: function getTouchAction() {\n            return [TOUCH_ACTION_MANIPULATION];\n        },\n\n        process: function process(input) {\n            var options = this.options;\n\n            var validPointers = input.pointers.length === options.pointers;\n            var validMovement = input.distance < options.threshold;\n            var validTouchTime = input.deltaTime < options.time;\n\n            this.reset();\n\n            if (input.eventType & INPUT_START && this.count === 0) {\n                return this.failTimeout();\n            }\n\n            // we only allow little movement\n            // and we've reached an end event, so a tap is possible\n            if (validMovement && validTouchTime && validPointers) {\n                if (input.eventType != INPUT_END) {\n                    return this.failTimeout();\n                }\n\n                var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n                var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n                this.pTime = input.timeStamp;\n                this.pCenter = input.center;\n\n                if (!validMultiTap || !validInterval) {\n                    this.count = 1;\n                } else {\n                    this.count += 1;\n                }\n\n                this._input = input;\n\n                // if tap count matches we have recognized it,\n                // else it has began recognizing...\n                var tapCount = this.count % options.taps;\n                if (tapCount === 0) {\n                    // no failing requirements, immediately trigger the tap event\n                    // or wait as long as the multitap interval to trigger\n                    if (!this.hasRequireFailures()) {\n                        return STATE_RECOGNIZED;\n                    } else {\n                        this._timer = setTimeoutContext(function () {\n                            this.state = STATE_RECOGNIZED;\n                            this.tryEmit();\n                        }, options.interval, this);\n                        return STATE_BEGAN;\n                    }\n                }\n            }\n            return STATE_FAILED;\n        },\n\n        failTimeout: function failTimeout() {\n            this._timer = setTimeoutContext(function () {\n                this.state = STATE_FAILED;\n            }, this.options.interval, this);\n            return STATE_FAILED;\n        },\n\n        reset: function reset() {\n            clearTimeout(this._timer);\n        },\n\n        emit: function emit() {\n            if (this.state == STATE_RECOGNIZED) {\n                this._input.tapCount = this.count;\n                this.manager.emit(this.options.event, this._input);\n            }\n        }\n    });\n\n    /**\n     * Simple way to create an manager with a default set of recognizers.\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Hammer(element, options) {\n        options = options || {};\n        options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n        return new Manager(element, options);\n    }\n\n    /**\n     * @const {string}\n     */\n    Hammer.VERSION = '2.0.4';\n\n    /**\n     * default settings\n     * @namespace\n     */\n    Hammer.defaults = {\n        /**\n         * set if DOM events are being triggered.\n         * But this is slower and unused by simple implementations, so disabled by default.\n         * @type {Boolean}\n         * @default false\n         */\n        domEvents: false,\n\n        /**\n         * The value for the touchAction property/fallback.\n         * When set to `compute` it will magically set the correct value based on the added recognizers.\n         * @type {String}\n         * @default compute\n         */\n        touchAction: TOUCH_ACTION_COMPUTE,\n\n        /**\n         * @type {Boolean}\n         * @default true\n         */\n        enable: true,\n\n        /**\n         * EXPERIMENTAL FEATURE -- can be removed/changed\n         * Change the parent input target element.\n         * If Null, then it is being set the to main element.\n         * @type {Null|EventTarget}\n         * @default null\n         */\n        inputTarget: null,\n\n        /**\n         * force an input class\n         * @type {Null|Function}\n         * @default null\n         */\n        inputClass: null,\n\n        /**\n         * Default recognizer setup when calling `Hammer()`\n         * When creating a new Manager these will be skipped.\n         * @type {Array}\n         */\n        preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, { enable: false }], [PinchRecognizer, { enable: false }, ['rotate']], [SwipeRecognizer, { direction: DIRECTION_HORIZONTAL }], [PanRecognizer, { direction: DIRECTION_HORIZONTAL }, ['swipe']], [TapRecognizer], [TapRecognizer, { event: 'doubletap', taps: 2 }, ['tap']], [PressRecognizer]],\n\n        /**\n         * Some CSS properties can be used to improve the working of Hammer.\n         * Add them to this method and they will be set when creating a new Manager.\n         * @namespace\n         */\n        cssProps: {\n            /**\n             * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userSelect: 'none',\n\n            /**\n             * Disable the Windows Phone grippers when pressing an element.\n             * @type {String}\n             * @default 'none'\n             */\n            touchSelect: 'none',\n\n            /**\n             * Disables the default callout shown when you touch and hold a touch target.\n             * On iOS, when you touch and hold a touch target such as a link, Safari displays\n             * a callout containing information about the link. This property allows you to disable that callout.\n             * @type {String}\n             * @default 'none'\n             */\n            touchCallout: 'none',\n\n            /**\n             * Specifies whether zooming is enabled. Used by IE10>\n             * @type {String}\n             * @default 'none'\n             */\n            contentZooming: 'none',\n\n            /**\n             * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n             * @type {String}\n             * @default 'none'\n             */\n            userDrag: 'none',\n\n            /**\n             * Overrides the highlight color shown when the user taps a link or a JavaScript\n             * clickable element in iOS. This property obeys the alpha value, if specified.\n             * @type {String}\n             * @default 'rgba(0,0,0,0)'\n             */\n            tapHighlightColor: 'rgba(0,0,0,0)'\n        }\n    };\n\n    var STOP = 1;\n    var FORCED_STOP = 2;\n\n    /**\n     * Manager\n     * @param {HTMLElement} element\n     * @param {Object} [options]\n     * @constructor\n     */\n    function Manager(element, options) {\n        options = options || {};\n\n        this.options = merge(options, Hammer.defaults);\n        this.options.inputTarget = this.options.inputTarget || element;\n\n        this.handlers = {};\n        this.session = {};\n        this.recognizers = [];\n\n        this.element = element;\n        this.input = createInputInstance(this);\n        this.touchAction = new TouchAction(this, this.options.touchAction);\n\n        toggleCssProps(this, true);\n\n        each(options.recognizers, function (item) {\n            var recognizer = this.add(new item[0](item[1]));\n            item[2] && recognizer.recognizeWith(item[2]);\n            item[3] && recognizer.requireFailure(item[3]);\n        }, this);\n    }\n\n    Manager.prototype = {\n        /**\n         * set options\n         * @param {Object} options\n         * @returns {Manager}\n         */\n        set: function set(options) {\n            extend(this.options, options);\n\n            // Options that need a little more setup\n            if (options.touchAction) {\n                this.touchAction.update();\n            }\n            if (options.inputTarget) {\n                // Clean up existing event listeners and reinitialize\n                this.input.destroy();\n                this.input.target = options.inputTarget;\n                this.input.init();\n            }\n            return this;\n        },\n\n        /**\n         * stop recognizing for this session.\n         * This session will be discarded, when a new [input]start event is fired.\n         * When forced, the recognizer cycle is stopped immediately.\n         * @param {Boolean} [force]\n         */\n        stop: function stop(force) {\n            this.session.stopped = force ? FORCED_STOP : STOP;\n        },\n\n        /**\n         * run the recognizers!\n         * called by the inputHandler function on every movement of the pointers (touches)\n         * it walks through all the recognizers and tries to detect the gesture that is being made\n         * @param {Object} inputData\n         */\n        recognize: function recognize(inputData) {\n            var session = this.session;\n            if (session.stopped) {\n                return;\n            }\n\n            // run the touch-action polyfill\n            this.touchAction.preventDefaults(inputData);\n\n            var recognizer;\n            var recognizers = this.recognizers;\n\n            // this holds the recognizer that is being recognized.\n            // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n            // if no recognizer is detecting a thing, it is set to `null`\n            var curRecognizer = session.curRecognizer;\n\n            // reset when the last recognizer is recognized\n            // or when we're in a new session\n            if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n                curRecognizer = session.curRecognizer = null;\n            }\n\n            var i = 0;\n            while (i < recognizers.length) {\n                recognizer = recognizers[i];\n\n                // find out if we are allowed try to recognize the input for this one.\n                // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n                // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n                //      that is being recognized.\n                // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n                //      this can be setup with the `recognizeWith()` method on the recognizer.\n                if (session.stopped !== FORCED_STOP && ( // 1\n                !curRecognizer || recognizer == curRecognizer || // 2\n                recognizer.canRecognizeWith(curRecognizer))) {\n                    // 3\n                    recognizer.recognize(inputData);\n                } else {\n                    recognizer.reset();\n                }\n\n                // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n                // current active recognizer. but only if we don't already have an active recognizer\n                if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                    curRecognizer = session.curRecognizer = recognizer;\n                }\n                i++;\n            }\n        },\n\n        /**\n         * get a recognizer by its event name.\n         * @param {Recognizer|String} recognizer\n         * @returns {Recognizer|Null}\n         */\n        get: function get(recognizer) {\n            if (recognizer instanceof Recognizer) {\n                return recognizer;\n            }\n\n            var recognizers = this.recognizers;\n            for (var i = 0; i < recognizers.length; i++) {\n                if (recognizers[i].options.event == recognizer) {\n                    return recognizers[i];\n                }\n            }\n            return null;\n        },\n\n        /**\n         * add a recognizer to the manager\n         * existing recognizers with the same event name will be removed\n         * @param {Recognizer} recognizer\n         * @returns {Recognizer|Manager}\n         */\n        add: function add(recognizer) {\n            if (invokeArrayArg(recognizer, 'add', this)) {\n                return this;\n            }\n\n            // remove existing\n            var existing = this.get(recognizer.options.event);\n            if (existing) {\n                this.remove(existing);\n            }\n\n            this.recognizers.push(recognizer);\n            recognizer.manager = this;\n\n            this.touchAction.update();\n            return recognizer;\n        },\n\n        /**\n         * remove a recognizer by name or instance\n         * @param {Recognizer|String} recognizer\n         * @returns {Manager}\n         */\n        remove: function remove(recognizer) {\n            if (invokeArrayArg(recognizer, 'remove', this)) {\n                return this;\n            }\n\n            var recognizers = this.recognizers;\n            recognizer = this.get(recognizer);\n            recognizers.splice(inArray(recognizers, recognizer), 1);\n\n            this.touchAction.update();\n            return this;\n        },\n\n        /**\n         * bind event\n         * @param {String} events\n         * @param {Function} handler\n         * @returns {EventEmitter} this\n         */\n        on: function on(events, handler) {\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                handlers[event] = handlers[event] || [];\n                handlers[event].push(handler);\n            });\n            return this;\n        },\n\n        /**\n         * unbind event, leave emit blank to remove all handlers\n         * @param {String} events\n         * @param {Function} [handler]\n         * @returns {EventEmitter} this\n         */\n        off: function off(events, handler) {\n            var handlers = this.handlers;\n            each(splitStr(events), function (event) {\n                if (!handler) {\n                    delete handlers[event];\n                } else {\n                    handlers[event].splice(inArray(handlers[event], handler), 1);\n                }\n            });\n            return this;\n        },\n\n        /**\n         * emit event to the listeners\n         * @param {String} event\n         * @param {Object} data\n         */\n        emit: function emit(event, data) {\n            // we also want to trigger dom events\n            if (this.options.domEvents) {\n                triggerDomEvent(event, data);\n            }\n\n            // no handlers, so skip it all\n            var handlers = this.handlers[event] && this.handlers[event].slice();\n            if (!handlers || !handlers.length) {\n                return;\n            }\n\n            data.type = event;\n            data.preventDefault = function () {\n                data.srcEvent.preventDefault();\n            };\n\n            var i = 0;\n            while (i < handlers.length) {\n                handlers[i](data);\n                i++;\n            }\n        },\n\n        /**\n         * destroy the manager and unbinds all events\n         * it doesn't unbind dom events, that is the user own responsibility\n         */\n        destroy: function destroy() {\n            this.element && toggleCssProps(this, false);\n\n            this.handlers = {};\n            this.session = {};\n            this.input.destroy();\n            this.element = null;\n        }\n    };\n\n    /**\n     * add/remove the css properties as defined in manager.options.cssProps\n     * @param {Manager} manager\n     * @param {Boolean} add\n     */\n    function toggleCssProps(manager, add) {\n        var element = manager.element;\n        each(manager.options.cssProps, function (value, name) {\n            element.style[prefixed(element.style, name)] = add ? value : '';\n        });\n    }\n\n    /**\n     * trigger dom event\n     * @param {String} event\n     * @param {Object} data\n     */\n    function triggerDomEvent(event, data) {\n        var gestureEvent = document.createEvent('Event');\n        gestureEvent.initEvent(event, true, true);\n        gestureEvent.gesture = data;\n        data.target.dispatchEvent(gestureEvent);\n    }\n\n    extend(Hammer, {\n        INPUT_START: INPUT_START,\n        INPUT_MOVE: INPUT_MOVE,\n        INPUT_END: INPUT_END,\n        INPUT_CANCEL: INPUT_CANCEL,\n\n        STATE_POSSIBLE: STATE_POSSIBLE,\n        STATE_BEGAN: STATE_BEGAN,\n        STATE_CHANGED: STATE_CHANGED,\n        STATE_ENDED: STATE_ENDED,\n        STATE_RECOGNIZED: STATE_RECOGNIZED,\n        STATE_CANCELLED: STATE_CANCELLED,\n        STATE_FAILED: STATE_FAILED,\n\n        DIRECTION_NONE: DIRECTION_NONE,\n        DIRECTION_LEFT: DIRECTION_LEFT,\n        DIRECTION_RIGHT: DIRECTION_RIGHT,\n        DIRECTION_UP: DIRECTION_UP,\n        DIRECTION_DOWN: DIRECTION_DOWN,\n        DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n        DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n        DIRECTION_ALL: DIRECTION_ALL,\n\n        Manager: Manager,\n        Input: Input,\n        TouchAction: TouchAction,\n\n        TouchInput: TouchInput,\n        MouseInput: MouseInput,\n        PointerEventInput: PointerEventInput,\n        TouchMouseInput: TouchMouseInput,\n        SingleTouchInput: SingleTouchInput,\n\n        Recognizer: Recognizer,\n        AttrRecognizer: AttrRecognizer,\n        Tap: TapRecognizer,\n        Pan: PanRecognizer,\n        Swipe: SwipeRecognizer,\n        Pinch: PinchRecognizer,\n        Rotate: RotateRecognizer,\n        Press: PressRecognizer,\n\n        on: addEventListeners,\n        off: removeEventListeners,\n        each: each,\n        merge: merge,\n        extend: extend,\n        inherit: inherit,\n        bindFn: bindFn,\n        prefixed: prefixed\n    });\n\n    if (typeof define == TYPE_FUNCTION && define.amd) {\n        define(function () {\n            return Hammer;\n        });\n    } else if (typeof module != 'undefined' && module.exports) {\n        module.exports = Hammer;\n    } else {\n        window[exportName] = Hammer;\n    }\n})(window, document, 'Hammer');\n\n},{}],14:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n\tvalue: true\n});\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nvar DOM = (function () {\n\n\tElement.prototype.matches = Element.prototype.matches || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.webkitMatchesSelector;\n\n\tvar eventsListeners = {};\n\n\tdocument.addEventListener('click', handler, false);\n\tdocument.addEventListener('dblclick', handler, false);\n\tdocument.addEventListener('touchend', handler, false);\n\tdocument.addEventListener('touchstart', handler, false);\n\n\tfunction handler(e) {\n\t\tvar element = e.target;\n\n\t\tif (eventsListeners[e.type]) {\n\t\t\teventsListeners[e.type].forEach(function (ev) {\n\t\t\t\tvar _elementTarget = _closest(element, ev.selector);\n\t\t\t\tif (_elementTarget) {\n\t\t\t\t\tev.fn(e, _elementTarget);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _closest(el, selector) {\n\n\t\tif (Element.prototype.closest) {\n\t\t\treturn el.closest(selector);\n\t\t}\n\n\t\twhile (el && el.parentNode) {\n\t\t\tif (el.matches(selector)) {\n\t\t\t\treturn el;\n\t\t\t}\n\n\t\t\tel = el.parentNode;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tfunction isArray(value) {\n\t\tif (Object.prototype.toString.call(value) === '[object Array]') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar DOM = (function () {\n\t\tfunction DOM(selector) {\n\t\t\t_classCallCheck(this, DOM);\n\n\t\t\tif (typeof selector === 'object') {\n\t\t\t\tthis.selector = selector.selector;\n\t\t\t\tthis.elements = selector;\n\t\t\t} else {\n\t\t\t\tthis.selector = selector;\n\t\t\t\tthis.elements = document.querySelectorAll(selector);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\t_createClass(DOM, [{\n\t\t\tkey: 'on',\n\t\t\tvalue: function on(eventName, callback) {\n\t\t\t\tvar obj = {\n\t\t\t\t\tselector: this.selector,\n\t\t\t\t\telement: this.elements,\n\t\t\t\t\tfn: callback\n\t\t\t\t};\n\n\t\t\t\tif (!eventsListeners[eventName]) {\n\t\t\t\t\teventsListeners[eventName] = [obj];\n\t\t\t\t} else {\n\t\t\t\t\teventsListeners[eventName].push(obj);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'click',\n\t\t\tvalue: function click(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('click', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'dblclick',\n\t\t\tvalue: function dblclick(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('dblclick', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'ontouchend',\n\t\t\tvalue: function ontouchend(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('touchend', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'ontouchstart',\n\t\t\tvalue: function ontouchstart(callback) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.addEventListener('touchstart', callback);\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'addClass',\n\t\t\tvalue: function addClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.add(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'toggleClass',\n\t\t\tvalue: function toggleClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.toggle(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeClass',\n\t\t\tvalue: function removeClass(className) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.classList.remove(className);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'hasClass',\n\t\t\tvalue: function hasClass(className) {\n\t\t\t\treturn this.elements[0].classList.contains(className);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'append',\n\t\t\tvalue: function append(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('beforeend', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'prepend',\n\t\t\tvalue: function prepend(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('afterbegin', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'insertBefore',\n\t\t\tvalue: function insertBefore(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('beforebegin', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'insertAfter',\n\t\t\tvalue: function insertAfter(htmlContent) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.insertAdjacentHTML('afterend', htmlContent);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'next',\n\t\t\tvalue: function next() {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\treturn el.nextElementSibling;\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'setAttribute',\n\t\t\tvalue: function setAttribute(attrName) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.setAttribute(\"disabled\", \"disabled\");\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'removeAttibute',\n\t\t\tvalue: function removeAttibute(attrName) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.removeAttibute(attrName);\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'getAttribute',\n\t\t\tvalue: function getAttribute(attrName) {\n\t\t\t\treturn this.element[0].getAttribute(attrName);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'hasAttribute',\n\t\t\tvalue: function hasAttribute(attrName) {\n\t\t\t\treturn this.element[0].hasAttribute(attrName);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'html',\n\t\t\tvalue: function html(content) {\n\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\tel.innerHTML = content;\n\t\t\t\t});\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'outerHTML',\n\t\t\tvalue: function outerHTML() {\n\t\t\t\treturn this.element[0].outerHTML;\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'closest',\n\t\t\tvalue: function closest(selector) {\n\t\t\t\treturn _closest(this.element[0], selector);\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'touch',\n\t\t\tvalue: function touch(callback) {\n\t\t\t\tif (isArray(this.elements)) {\n\t\t\t\t\t[].forEach.call(this.elements, function (el) {\n\t\t\t\t\t\thandlerTouch(el);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\thandlerTouch(this.elements);\n\t\t\t\t}\n\n\t\t\t\tfunction handlerTouch(el) {\n\t\t\t\t\tvar touchsurface = el,\n\t\t\t\t\t    dir,\n\t\t\t\t\t    swipeType,\n\t\t\t\t\t    startX,\n\t\t\t\t\t    startY,\n\t\t\t\t\t    distX,\n\t\t\t\t\t    distY,\n\t\t\t\t\t    dist,\n\t\t\t\t\t    threshold = 150,\n\t\t\t\t\t    //required min distance traveled to be considered swipe\n\t\t\t\t\trestraint = 100,\n\t\t\t\t\t    // maximum distance allowed at the same time in perpendicular direction\n\t\t\t\t\tallowedTime = 500,\n\t\t\t\t\t    // maximum time allowed to travel that distance\n\t\t\t\t\telapsedTime,\n\t\t\t\t\t    startTime,\n\t\t\t\t\t    handletouch = callback || function (evt, dir, phase, swipetype, distance) {};\n\n\t\t\t\t\ttouchsurface.addEventListener('touchstart', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdir = 'none';\n\t\t\t\t\t\tswipeType = 'none';\n\t\t\t\t\t\tdist = 0;\n\t\t\t\t\t\tstartX = touchobj.pageX;\n\t\t\t\t\t\tstartY = touchobj.pageY;\n\t\t\t\t\t\tstartTime = new Date().getTime(); // record time when finger first makes contact with surface\n\t\t\t\t\t\thandletouch(e, 'none', 'start', swipeType, 0); // fire callback function with params dir=\"none\", phase=\"start\", swipetype=\"none\" etc\n\t\t\t\t\t\t//e.preventDefault();\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchmove', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdistX = touchobj.pageX - startX; // get horizontal dist traveled by finger while in contact with surface\n\t\t\t\t\t\tdistY = touchobj.pageY - startY; // get vertical dist traveled by finger while in contact with surface\n\t\t\t\t\t\tif (Math.abs(distX) > Math.abs(distY)) {\n\t\t\t\t\t\t\t// if distance traveled horizontally is greater than vertically, consider this a horizontal movement\n\t\t\t\t\t\t\tdir = distX < 0 ? 'left' : 'right';\n\t\t\t\t\t\t\thandletouch(e, dir, 'move', swipeType, distX); // fire callback function with params dir=\"left|right\", phase=\"move\", swipetype=\"none\" etc\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// else consider this a vertical movement\n\t\t\t\t\t\t\t\tdir = distY < 0 ? 'up' : 'down';\n\t\t\t\t\t\t\t\thandletouch(e, dir, 'move', swipeType, distY); // fire callback function with params dir=\"up|down\", phase=\"move\", swipetype=\"none\" etc\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t// e.preventDefault(); // prevent scrolling when inside DIV\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchend', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\telapsedTime = new Date().getTime() - startTime; // get time elapsed\n\t\t\t\t\t\tif (elapsedTime <= allowedTime) {\n\t\t\t\t\t\t\t// first condition for awipe met\n\t\t\t\t\t\t\tif (Math.abs(distX) >= threshold && Math.abs(distY) <= restraint) {\n\t\t\t\t\t\t\t\t// 2nd condition for horizontal swipe met\n\t\t\t\t\t\t\t\tswipeType = dir; // set swipeType to either \"left\" or \"right\"\n\t\t\t\t\t\t\t} else if (Math.abs(distY) >= threshold && Math.abs(distX) <= restraint) {\n\t\t\t\t\t\t\t\t\t// 2nd condition for vertical swipe met\n\t\t\t\t\t\t\t\t\tswipeType = dir; // set swipeType to either \"top\" or \"down\"\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Fire callback function with params dir=\"left|right|up|down\", phase=\"end\", swipetype=dir etc:\n\t\t\t\t\t\thandletouch(e, dir, 'end', swipeType, dir == 'left' || dir == 'right' ? distX : distY);\n\t\t\t\t\t\t//e.preventDefault();\n\t\t\t\t\t}, false);\n\n\t\t\t\t\ttouchsurface.addEventListener('touchcancel', function (e) {\n\t\t\t\t\t\tvar touchobj = e.changedTouches[0];\n\t\t\t\t\t\tdir = 'none';\n\t\t\t\t\t\tswipeType = 'none';\n\t\t\t\t\t\thandletouch(e, 'none', 'cancel', swipeType, 0); // fire callback function with params dir=\"none\", phase=\"start\", swipetype=\"none\" etc\n\t\t\t\t\t}, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, {\n\t\t\tkey: 'style',\n\t\t\tvalue: function style(styleProp) {\n\t\t\t\tvar el = this.elements[0] || this.elements;\n\t\t\t\tvar value,\n\t\t\t\t    defaultView = (el.ownerDocument || document).defaultView;\n\t\t\t\t// W3C standard way:\n\t\t\t\tif (defaultView && defaultView.getComputedStyle) {\n\t\t\t\t\t// sanitize property name to css notation\n\t\t\t\t\t// (hypen separated words eg. font-Size)\n\t\t\t\t\tstyleProp = styleProp.replace(/([A-Z])/g, \"-$1\").toLowerCase();\n\t\t\t\t\treturn defaultView.getComputedStyle(el, null).getPropertyValue(styleProp);\n\t\t\t\t} else if (el.currentStyle) {\n\t\t\t\t\t// IE\n\t\t\t\t\t// sanitize property name to camelCase\n\t\t\t\t\tstyleProp = styleProp.replace(/\\-(\\w)/g, function (str, letter) {\n\t\t\t\t\t\treturn letter.toUpperCase();\n\t\t\t\t\t});\n\t\t\t\t\tvalue = el.currentStyle[styleProp];\n\t\t\t\t\t// convert other units to pixels on IE\n\t\t\t\t\tif (/^\\d+(em|pt|%|ex)?$/i.test(value)) {\n\t\t\t\t\t\treturn (function (value) {\n\t\t\t\t\t\t\tvar oldLeft = el.style.left,\n\t\t\t\t\t\t\t    oldRsLeft = el.runtimeStyle.left;\n\t\t\t\t\t\t\tel.runtimeStyle.left = el.currentStyle.left;\n\t\t\t\t\t\t\tel.style.left = value || 0;\n\t\t\t\t\t\t\tvalue = el.style.pixelLeft + \"px\";\n\t\t\t\t\t\t\tel.style.left = oldLeft;\n\t\t\t\t\t\t\tel.runtimeStyle.left = oldRsLeft;\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t})(value);\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}]);\n\n\t\treturn DOM;\n\t})();\n\n\tfunction element(el) {\n\t\treturn new DOM(el);\n\t}\n\n\treturn element;\n})();\n\nexports['default'] = DOM;\nmodule.exports = exports['default'];\n\n},{}],15:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports[\"default\"] = {\n\n\textend: function extend(a, b) {\n\t\tfor (var i = 1; i < arguments.length; i++) {\n\t\t\tfor (var key in arguments[i]) {\n\t\t\t\tif (arguments[i].hasOwnProperty(key)) {\n\t\t\t\t\targuments[0][key] = arguments[i][key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn arguments[0];\n\t},\n\n\tclousestClass: function clousestClass(el, className) {\n\n\t\twhile (el && el.parentNode) {\n\t\t\tel = el.parentNode;\n\t\t\tif (el.classList) if (el.classList.contains(className)) {\n\t\t\t\treturn el;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n};\nmodule.exports = exports[\"default\"];\n\n},{}]},{},[12])(12)\n});"]}